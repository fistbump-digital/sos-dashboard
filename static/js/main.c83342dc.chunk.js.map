{"version":3,"sources":["assets/icons/add.svg","assets/icons/candidate.svg","assets/icons/dashboard.svg","assets/icons/job.svg","assets/icons/role.svg","assets/icons/user.svg","assets/icons/dual-ball-loader.svg","assets/icons/search.svg","assets/icons/auth.svg","assets/icons/company.svg","assets/icons/arrow.svg","components/Loader.js","styles/index.js","components/Table/index.js","components/TableSkeletonLoader.js","utils/helperFunctions.js","recoil/atoms.js","components/Sidebar.js","components/PieChart.js","api/index.js","components/Toast.js","components/ChartSkeleton.js","pages/Dashboard/index.js","components/Search.js","components/Controls.js","styles/StyledMaterialUI.js","components/Modals/DeleteModal.js","recoil/selectors.js","pages/Job/components/NewTable.js","pages/Job/JobPage.js","components/SearchBar.js","pages/Candidate/components/NewCandidateTable.js","pages/Candidate/index.js","pages/Role/index.js","pages/User/index.js","pages/Job/components/JobInput.js","pages/Candidate/components/BulkUpload.js","pages/Job/components/NewJobInput.js","pages/Job/AddJob.js","components/PageTab.js","utils/sharedVariables.js","pages/Job/components/JobInfo.js","pages/Job/components/NewJobInfo.js","pages/Job/JobDetails.js","pages/Candidate/components/CandidateInput.js","pages/Candidate/components/NewCandidateInput.js","pages/Candidate/AddCandidate.js","pages/Candidate/components/AppliedJobsTable.js","pages/Candidate/components/CandidateInfo.js","pages/Candidate/components/NewCandidateInfo.js","pages/Candidate/NewCandidateDetails.js","pages/Job/ApplyJobList.js","pages/Profile/index.js","pages/Company/index.js","pages/Company/components/CompanyInput.js","pages/Company/AddCompany.js","pages/Signin/components/SigninForm.js","pages/Signin/index.js","components/Navbar.js","pages/Role/components/RoleInput.js","pages/Role/AddRole.js","pages/User/components/UserInput.js","pages/User/AddUser.js","pages/Job/EditJob.js","pages/Candidate/AppliedCandidate.js","pages/Candidate/EditCandidate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","LoaderContainer","LoaderIconContainer","src","LoaderIcon","styled","div","img","RemoveSpaces","css","themeBorder","MultipleItemInputContainer","form","Card","CardTitle","h5","StyledNavlink","NavLink","TableRow","tr","TableData","td","TableHead","th","ItemListContainer","h3","label","TextField","ul","ItemList","li","ContentContainer","p","ControlButton","Button","StyledCheckbox","input","ModalBody","ModalTitle","h4","ModalWarning","ModalText","ModalButtonContainer","PipelineContainer","PipelineCard","PipelineTitle","PipelineStat","Category","CategoryGrid","DataContainer","CategoryMainTitle","h1","Title","Content","Table","headings","children","TableContainer","TableHeadContainer","TableHeadingRow","TableBody","table","tbody","thead","TableSkeletonLoader","renderTableHeading","renderTableBody","limit","i","push","key","uuid","loopHead","loopBody","codeGenerator","field1","field2","field3","abbreviator","str","strArr","split","length","substring","toUpperCase","code","charCode","codeDigit","charCodeAt","compressedFields","join","charCodeLeft","charCodeRight","addValToArr","e","val","data","setData","preventDefault","includes","tempData","renderArr","map","item","onClick","dataTemp","filter","removeValFromArr","trueKeysToArr","obj","Object","keys","id","titleGenerator","arr","title","count","renderWithLoader","component","encryptObj","objStr","JSON","stringify","cryptojs","AES","encrypt","process","toString","formatDate","date","dateArr","Date","toDateString","shift","counter","countObj","pickerDateFormat","dateStr","toISOString","jobAtom","atom","default","singlejobAtom","candidateAtom","companyAtom","roleAtom","userAtom","statsAtom","jobCheckedAtom","candidateCheckedAtom","companyCheckedAtom","roleCheckedAtom","userCheckedAtom","jobTab","candidateTab","appliedCandidateTabAtom","isAuthAtom","email","password","currentUserAtom","statusAtom","Sidebar","permissions","useRecoilValue","roleId","activeLinkStyle","color","backgroundColor","fontWeight","boxShadow","SidebarContainer","MenuItem","uniqueID","activeStyle","to","NavIcon","DashboardIcon","get","JobIcon","CandidateIcon","RoleIcon","UserIcon","PieChart","labels","chartData","datasets","ChartContainer","API_URI","deleteJobs","createBulkCandidate","getCandidates","applyJob","jobEndpoint","createBulkJob","jobsEndpoint","candidateEndpoint","companyEndpoint","companiesEndpoint","roleEndpoint","rolesEndpoint","userEndpoint","usersEndpoint","loginEndpoint","logoutEndpoint","verifyEndpoint","statusEndpoint","statsEndpoint","toast","configure","position","POSITION","BOTTOM_RIGHT","autoClose","pauseOnFocusLoss","toastId","draggablePercent","ChartSkeleton","ChartCard","TitleContainer","width","circle","height","DashboardPage","useRecoilState","stats","setStats","useEffect","axios","withCredentials","then","catch","error","console","log","PieContainer","job","assigned","unassigned","ChartTitle","total","candidate","applied","unapplied","Search","onChange","SearchDiv","InputBase","placeholder","inputProps","Controls","onSearchChange","search","ControlContainer","ControlTitle","ControlSearch","ControlButtonContainer","SMUIButton","SMUITextField","SMUISelect","Select","SMUIFormControl","Autocomplete","FormControl","SMUIIconButton","IconButton","SMUIModal","Modal","DeleteModal","open","onClose","deleteHandler","variant","filterTrueJobChecked","selector","checkedJob","filterTrueCandidateChecked","checkedCandidate","selectedCompanies","companyChecked","selectedRoles","roleChecked","selectedUsers","userChecked","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableCell","padding","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","jobData","setFilterData","rows","handleDeleteClick","toApply","candidateApplyHandler","currentUser","history","useHistory","location","useLocation","pathname","Toolbar","clsx","Typography","style","textAlign","margin","inputVal","target","value","filterData","jobCode","toLowerCase","jobTitle","state","district","zone","company","vertical","division","industry","Tooltip","aria-label","headers","filename","useStyles","paper","marginBottom","minWidth","border","clip","overflow","top","EnhancedTable","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","currentCandidate","post","jobIds","success","goBack","err","message","status","noOfOpening","startDate","closeDate","ctcMin","ctcMax","CVShared","sharedToHRDate","JDAttachmentLink","JDAttactmentLink","createData","emptyRows","Math","min","Paper","patch","alert","aria-labelledby","size","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","href","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","JobPage","setJobData","setChecked","ids","isModalOpen","setIsModalOpen","toggleModal","jobHeading","heading","_id","newData","onCheckHandler","candidateName","resumeTitle","contactNumber","workExp","annualSalary","currentLocation","preferredLocation","currentEmployer","designation","UGCourse","PGCourse","PostPGCourse","DOB","postalAddress","resumeID","LastActive","commentOne","commentTwo","commentThree","commentFour","commentFive","CandidatePage","candidateData","setCandidateData","RolePage","roles","setRoles","renderHeading","renderRoleData","name","vendor","users","createdAt","checkHandler","AddCircle","UserPage","setUsers","renderUserHeading","showUsers","user","renderUserData","firstName","lastName","userName","contact","JobInput","BulkUpload","setBulkUpload","createBulk","selectedFile","setSelectedFile","paddingBottom","right","Close","files","accept","formData","FormData","append","method","url","lastModifiedDate","fileData","NewJobInput","edit","setLoading","bulkUpload","singleJobData","setSingleJobData","formValidation","yup","required","formik","useFormik","initialValues","validationSchema","onSubmit","values","resetForm","setTimeout","handleSubmit","handleChange","touched","Boolean","errors","helperText","defaultValue","verticals","AddJob","PageTab","setValue","renderLabels","Tab","TabBG","Tabs","_event","newValue","indicatorColor","textColor","stages","JobInfo","NewJobInfo","JobDetails","match","params","jobTabIndex","setJob","jobFullData","selectedJob","find","stageDataCount","statusId","currentStage","stageName","renderPipeline","stage","candidateId","delete","renderCandidateHeading","renderCandidateData","candidateCode","basic","fullName","primaryEmail","mobile","address","professional","functionalArea","renderTabBody","CandidateInput","candidates","setCandidate","_fullName","_primaryEmail","_secondaryEmail","secondaryEmail","_mobile","_pan","pan","_dateOfBirth","dateOfBirth","_country","country","_pincode","pincode","_state","_streetName","streetName","_currentSalary","currentSalary","_education","education","_expected","expected","_experience","experience","_functionalArea","_industry","_skillSet","skillSet","setFullName","setPrimaryEmail","setSecondaryEmail","setMobile","setPan","setDateOfBirth","setStreetName","setState","setCountry","setPincode","setExperience","setEducation","setSkillSet","skillSetVal","setSkillSetVal","setCurrentSalary","setExpected","setIndustry","setFunctionalArea","setJobTitle","setCompany","summary","setSummary","fromDate","setFromDate","tillDate","setTillDate","qualificationName","setQualificationName","instituteName","setInstituteName","studiedFromDate","setStudiedFromDate","studiedTillDate","setStudiedTillDate","saveHandler","Number","source","InputLabel","tempExp","tempEdu","NewCandidateInput","contactNo","matches","max","resumeId","postPGCourse","lastActive","multiline","AddCandidate","AppliedJobsTable","jobs","elevation","square","head","tableHeadStyle","textTransform","CandidateInfo","renderExperience","renderSkill","skill","renderEducation","lastActiveDate","CandidateDetails","jobId","jobDetails","jobOpeningInfo","noOfOpenings","PlaylistAdd","NewCandidateInfo","ApplyJobList","ApplyJobListContainer","ProfilePage","CompanyPage","companies","setCompanies","selectedCompany","renderCompanyHeading","deleteManyHandler","renderCompanyData","companyName","companyAddress","CompanyInput","setCompanyName","setCompanyAddress","AddCompanyHandler","companyData","CompanyTextField","rowsMax","AddCompany","SigninForm","setUser","setPassword","setIsAuth","setCurrentUser","isLoading","setIsLoading","submitHandler","resData","userData","SigninFormContainer","SiginFormTitle","SiginFormDesc","SigninInput","SignInButton","CircularProgress","Signin","SigninContainer","AuthImage","AuthIcon","Navbar","anchorEl","setAnchorEl","handleClose","logoutHandler","NavbarContainer","Logo","LogoHighlight","startIcon","currentTarget","Menu","keepMounted","span","RoleInput","setName","setVendor","create","update","read","setPermissions","roleData","permissionsTemp","selectAllHandler","PermissionTable","PermissionTableRow","PermissionTableHead","PermissionTableData","AddRole","UserInput","setRoleId","setFirstName","setLastName","setUserName","setEmail","setContact","isAutoGenerated","setIsAutoGenerated","saveUserHandler","disabled","AutoGeneratorPassContainer","passwordGenerator","generate","numbers","symbols","excludeSimilarCharacters","AutoGeneratorLabel","AddUser","EditJob","AppliedCandidate","setStatus","newStageGenerator","selectedStage","setSelectedStage","changeStageHangler","userId","renderTimelineData","currentStatus","renderStageOption","EditCandidate","App","isAuth","setAuth","routes","path","exact","AppContainer","Layout","ComponentContainer","isLocalhost","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c83342dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.15cf12ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.5138f324.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.3949fa5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.df887e14.svg\";","module.exports = __webpack_public_path__ + \"static/media/role.9f9a7329.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.a0b238c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/dual-ball-loader.d6d67d34.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.19142cc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/auth.910669c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/company.5c37dd19.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.dc486541.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport LoaderIcon from '../assets/icons/dual-ball-loader.svg'\n\nfunction Loader() {\n\treturn (\n\t\t<LoaderContainer>\n\t\t\t<LoaderIconContainer src={LoaderIcon} />\n\t\t</LoaderContainer>\n\t)\n}\n\nexport default Loader\n\nconst LoaderContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n`\n\nconst LoaderIconContainer = styled.img`\n\twidth: 100px;\n`\n","import styled, { css } from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport {\n\tButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tTextField,\n\tModal\n} from '@material-ui/core'\n\nexport const RemoveSpaces = css`\n\tmargin: 0px;\n\tpadding: 0px;\n`\n\nexport const themeBorder = css`\n\tborder: 1px solid #0000003b;\n\tborder-radius: 6px;\n`\n\nexport const MultipleItemInputContainer = styled.form`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n`\n\nexport const Card = styled.div`\n\tpadding: 10px 20px;\n\t/* border-radius: 3px; */\n\t/* border: 1px solid #0000003b; */\n\tbackground-color: white;\n\tmargin-bottom: 10px;\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nexport const CardTitle = styled.h5`\n\ttext-align: left;\n\tcolor: #333;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nexport const StyledNavlink = styled(NavLink)`\n\twidth: 150px;\n\tpadding: 6px 10px;\n\tborder-radius: 0.25rem;\n\tdisplay: flex;\n\talign-items: center;\n\tcolor: black;\n\ttext-decoration: none;\n\tfont-weight: 400;\n\t&:focus {\n\t\tcolor: black;\n\t}\n\t&:hover {\n\t\tcolor: black;\n\t}\n`\n\nexport const TableRow = styled.tr`\n\t/* cursor: pointer; */\n\ttransition: all 0.5s;\n\t&:hover {\n\t\tbackground-color: #eef0f7;\n\t}\n`\n\nexport const TableData = styled.td`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n`\n\nexport const TableHead = styled.th`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n\tcolor: #000000c2;\n`\nexport const PageLayout = styled.div`\n\t/* width: 100%; */\n\tpadding: 10px;\n`\n\nexport const InputContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\talign-items: flex-start;\n`\n\nexport const CategoryContainer = styled.div``\n\nexport const CategoryTitle = styled.h3`\n\t${RemoveSpaces};\n`\n\nexport const Label = styled.label``\n\nexport const StyledTextField = styled(TextField)`\n\twidth: 100%;\n\tmargin: 10px;\n`\n\nexport const ItemListContainer = styled.ul`\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n\tdisplay: flex;\n\tpadding: 10px;\n\tborder: 1px dashed #0000003b;\n\tbackground-color: #0000000d;\n\tborder-radius: 6px;\n\tmargin: 20px 0px;\n\tflex-flow: wrap;\n`\n\nexport const ItemList = styled.li`\n\tmargin: 5px;\n\tpadding: 5px 10px;\n\tborder-radius: 6px;\n\tbackground-color: white;\n\tborder: 1px solid #0000003b;\n`\nexport const DataTitle = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n`\n\nexport const DataContent = styled.p`\n\t${RemoveSpaces};\n\ttext-align: left;\n`\n\nexport const ContentContainer = styled.div`\n\tpadding: 10px;\n`\n\nexport const IconButton = styled.img`\n\twidth: 28px;\n\tcursor: pointer;\n`\n\nexport const ControlButton = styled(Button)`\n\t&& {\n\t\tmargin: 5px;\n\t\tpadding: 2px 10px;\n\t}\n`\n\nexport const StyledCheckbox = styled.input`\n\twidth: 18px;\n\theight: 18px;\n`\n\n// Modal\n\nexport const ModalBody = styled.div`\n\tbackground-color: white;\n\tmargin-top: 50px;\n\tpadding: 20px;\n\tborder-radius: 5px;\n`\nexport const ModalTitle = styled.h4`\n\t${RemoveSpaces};\n\tpadding-bottom: 10px;\n`\n\nexport const ModalWarning = styled.p`\n\t${RemoveSpaces}\n\tpadding: 10px;\n\tfont-weight: bold;\n\tborder: 2px solid red;\n\tborder-radius: 5px;\n\tborder-left: 10px solid red;\n`\n\nexport const ModalText = styled.p`\n\t${RemoveSpaces};\n\tpadding-top: 10px;\n`\n\nexport const ModalButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-top: 20px;\n`\n\n//Pipeline\nexport const PipelineContainer = styled(Card)`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\trow-gap: 1em;\n\tpadding: 50px;\n`\nexport const PipelineCard = styled.div`\n\tdisplay: flex;\n\tpadding: 20px;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: #4caf5029;\n\tmargin: 0px;\n\theight: 50px;\n\ttransition: all 0.3s;\n\tclip-path: polygon(90% 0, 100% 50%, 90% 100%, 0% 100%, 10% 50%, 0% 0%);\n\n\t&:hover {\n\t\tbackground-color: #ffc10726;\n\t\ttransform: translateX(10px);\n\t}\n`\nexport const PipelineTitle = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-weight: lighter;\n\tfont-size: 1.25em;\n`\n\nexport const PipelineStat = styled.p`\n\t${RemoveSpaces};\n\tpadding-right: 10px;\n\n\tfont-size: 2em;\n\tfont-weight: bold;\n\tcolor: #333;\n`\n\n//\nexport const Category = styled.div`\n\tpadding: 20px;\n`\n\nexport const CategoryGrid = styled.div`\n\tdisplay: grid;\n\tgap: 1em;\n\tgrid-template-columns: repeat(2, 1fr);\n\tpadding-bottom: 20px;\n`\n\nexport const DataContainer = styled.div`\n\ttext-align: left;\n`\nexport const CategoryMainTitle = styled.h1`\n\t${RemoveSpaces};\n\ttext-align: left;\n\tcolor: #333;\n\tfont-size: 1.5em;\n\tpadding-bottom: 15px;\n`\n\nexport const Title = styled.h3`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1em;\n`\n\nexport const Content = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1.2em;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { themeBorder } from '../../styles'\n\nfunction Table({ headings, children }) {\n\treturn (\n\t\t<TableContainer>\n\t\t\t<TableHeadContainer>\n\t\t\t\t<TableHeadingRow>{headings}</TableHeadingRow>\n\t\t\t</TableHeadContainer>\n\t\t\t<TableBody>{children}</TableBody>\n\t\t</TableContainer>\n\t)\n}\n\nexport default Table\n\nconst TableHeadingRow = styled.tr`\n\tbackground-color: #eef0f7;\n\tcolor: #eee;\n`\n\nconst TableContainer = styled.table`\n\tpadding: 5px;\n\tborder: 0;\n\twidth: 100%;\n\tbackground-color: white;\n\t/* box-shadow: 2px 3px 20px 0px #00000017; */\n\t/* border-collapse: collapse; */\n\toverflow: scroll;\n\t/* ${themeBorder}; */\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nconst TableBody = styled.tbody``\n\nconst TableHeadContainer = styled.thead``\n","import React from 'react'\nimport Table from './Table'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { TableData, TableHead, TableRow } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction TableSkeletonLoader() {\n\tlet renderTableHeading = []\n\tlet renderTableBody = []\n\n\tconst loopHead = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableHeading.push(\n\t\t\t\t<TableHead key={uuid()}>\n\t\t\t\t\t<Skeleton />\n\t\t\t\t</TableHead>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst loopBody = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableBody.push(\n\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t}\n\n\tloopHead(6)\n\tloopBody(6)\n\n\treturn <Table headings={renderTableHeading}>{renderTableBody}</Table>\n}\n\nexport default TableSkeletonLoader\n","import React from 'react'\nimport Loader from '../components/Loader'\nimport { Card, ItemList, TableData, TableHead, TableRow } from '../styles'\nimport cryptojs from 'crypto-js'\nimport { v4 as uuid } from 'uuid'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport TableSkeletonLoader from '../components/TableSkeletonLoader'\n\nexport const codeGenerator = (field1, field2, field3) => {\n\t//Helper Function\n\tconst abbreviator = (str, limit) => {\n\t\tconst strArr = str.split(' ')\n\t\tif (strArr.length === 1) {\n\t\t\treturn str.substring(0, limit).toUpperCase()\n\t\t} else {\n\t\t\tlet code = ''\n\t\t\tfor (let letter of strArr) {\n\t\t\t\tcode += letter[0]\n\t\t\t}\n\t\t\treturn code.substring(0, limit).toUpperCase()\n\t\t}\n\t}\n\n\tconst charCode = (str) => {\n\t\tlet codeDigit = 0\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tcodeDigit += str.charCodeAt(i) - 64\n\t\t}\n\t\treturn codeDigit\n\t}\n\n\t// Converting full string to short form\n\tconst compressedFields = [\n\t\tabbreviator(field1, 2),\n\t\tabbreviator(field2, 2),\n\t\tabbreviator(field3, 2),\n\t].join('')\n\n\t// Char code of field\n\tconst charCodeLeft = charCode(field1)\n\tconst charCodeRight = charCode(field2)\n\n\treturn `${compressedFields}${charCodeLeft}${charCodeRight}`\n}\n\nexport const addValToArr = (e, val, data, setData) => {\n\te.preventDefault()\n\tif (!data.includes(val)) {\n\t\tconst tempData = [...data]\n\t\ttempData.push(val)\n\t\tsetData(tempData)\n\t}\n}\n\nconst removeValFromArr = (item, data, setData) => {\n\tlet dataTemp = [...data]\n\tdataTemp = dataTemp.filter((val) => val !== item)\n\tsetData(dataTemp)\n}\n\nexport const renderArr = (data, setData) =>\n\tdata.map((item) => (\n\t\t<ItemList\n\t\t\tonClick={() => removeValFromArr(item, data, setData)}\n\t\t\tkey={uuid()}>\n\t\t\t{item} X\n\t\t</ItemList>\n\t))\n\nexport const trueKeysToArr = (obj) => {\n\tconst ids = Object.keys(obj)\n\treturn ids.filter((id) => obj[id] === true)\n}\n\nexport const titleGenerator = (arr, title) => {\n\tconst count = arr.length\n\tif (count > 0) {\n\t\treturn `${count} Selected`\n\t} else {\n\t\treturn title\n\t}\n}\n\nexport const renderWithLoader = (val, component) =>\n\tval ? (\n\t\tcomponent\n\t) : (\n\t\t<TableSkeletonLoader/>\n\t)\n\nexport const encryptObj = (obj) => {\n\tconst objStr = JSON.stringify(obj)\n\treturn cryptojs.AES.encrypt(\n\t\tobjStr,\n\t\tprocess.env.REACT_APP_ENCRYPTION_SECRET_KEY\n\t).toString()\n}\n\nexport const formatDate = (date) => {\n\tconst dateArr = new Date(date).toDateString().split(' ')\n\tdateArr.shift()\n\treturn dateArr.join(' ')\n}\n\nexport const counter = (arr) => {\n\tconst countObj = {}\n\tfor (const item of arr) {\n\t\tif (countObj[item]) {\n\t\t\tcountObj[item] += 1\n\t\t} else {\n\t\t\tcountObj[item] = 1\n\t\t}\n\t}\n\n\treturn countObj\n}\n\nexport const pickerDateFormat = (dateStr) => {\n\tif (dateStr) return new Date(dateStr).toISOString().split('T')[0]\n\treturn new Date().toISOString().split('T')[0]\n}\n","import { atom, selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\n\nexport const jobAtom = atom({\n\tkey: 'jobs',\n\tdefault: null,\n})\n\nexport const singlejobAtom = atom({\n\tkey: 'singleJob',\n\tdefault: null\n})\n\nexport const candidateAtom = atom({\n\tkey: 'candidates',\n\tdefault: null,\n})\n\nexport const singleCandidateAtom = atom({\n\tkey: 'singleCandidate',\n\tdefault: null\n})\n\nexport const companyAtom = atom({\n\tkey: 'companies',\n\tdefault: null,\n})\n\nexport const roleAtom = atom({\n\tkey: 'roles',\n\tdefault: null,\n})\n\nexport const userAtom = atom({\n\tkey: 'users',\n\tdefault: null,\n})\n\nexport const statsAtom = atom({\n\tkey: 'stats',\n\tdefault: null\n})\n\n//--------------\n\nexport const jobCheckedAtom = atom({\n\tkey: 'jobChecked',\n\tdefault: {},\n})\n\nexport const candidateCheckedAtom = atom({\n\tkey: 'candidateChecked',\n\tdefault: {},\n})\n\nexport const companyCheckedAtom = atom({\n\tkey: 'companyChecked',\n\tdefault: {},\n})\n\nexport const roleCheckedAtom = atom({\n\tkey: 'roleChecked',\n\tdefault: {},\n})\n\nexport const userCheckedAtom = atom({\n\tkey: 'userChecked',\n\tdefault: {},\n})\n\n//------------\n\nexport const jobTab = atom({\n\tkey: 'jobTab',\n\tdefault: 0,\n})\n\nexport const candidateTab = atom({\n\tkey: 'candidateTab',\n\tdefault: 2,\n})\n\nexport const appliedCandidateTabAtom = atom({\n\tkey: 'appliedCandidateTabAtom',\n\tdefault: 0,\n})\n\n// -------------\nexport const credentialAtom = atom({\n\tkey: 'cred',\n\tdefault: { email: '', password: '' },\n})\n\nexport const isAuthAtom = atom({\n\tkey: 'isAuth',\n\tdefault: true,\n})\n\nexport const currentUserAtom = atom({\n\tkey: 'currentUser',\n\tdefault: null,\n})\n\nexport const statusAtom = atom({\n\tkey: 'status',\n\tdefault: null,\n})\n","import { get } from 'lodash'\nimport React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { v4 as uniqueID } from 'uuid'\nimport CandidateIcon from '../assets/icons/candidate.svg'\nimport CompanyIcon from '../assets/icons/company.svg'\nimport DashboardIcon from '../assets/icons/dashboard.svg'\nimport JobIcon from '../assets/icons/job.svg'\nimport RoleIcon from '../assets/icons/role.svg'\nimport UserIcon from '../assets/icons/user.svg'\nimport { currentUserAtom } from '../recoil/atoms'\nimport { StyledNavlink } from '../styles'\n\n\n\nfunction Sidebar() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { roleId } = currentUser || {}\n\tconst { permissions } = roleId || {}\n\n\t// const { job, candidate, role, user } = permissions || {}\n\n\n\tconst activeLinkStyle = {\n\t\tcolor: '#0168fa',\n\t\tbackgroundColor: '#EEF0F7',\n\t\tfontWeight: '500',\n\t\tboxShadow: 'inset 1px 1px 3px 0px #016afa2e',\n\t}\n\n\n\treturn (\n\t\t<SidebarContainer>\n\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/dashboard'>\n\t\t\t\t\t<NavIcon src={DashboardIcon} />\n\t\t\t\t\tDashboard\n\t\t\t\t</StyledNavlink>\n\t\t\t</MenuItem>\n\n\t\t\t{get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/job'>\n\t\t\t\t\t\t<NavIcon src={JobIcon} />\n\t\t\t\t\t\tJob\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'candidate.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/candidate'>\n\t\t\t\t\t\t<NavIcon src={CandidateIcon} />\n\t\t\t\t\t\tCandidate\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{/* {get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/company'>\n\t\t\t\t\t\t<NavIcon src={CompanyIcon} />\n\t\t\t\t\t\tCompany\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)} */}\n\n\t\t\t{get(permissions, 'role.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/role'>\n\t\t\t\t\t\t<NavIcon src={RoleIcon} />\n\t\t\t\t\t\tRole\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'user.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/user'>\n\t\t\t\t\t\t<NavIcon src={UserIcon} />\n\t\t\t\t\t\tUser\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\t\t</SidebarContainer>\n\t)\n}\n\nexport default Sidebar\n\nconst SidebarContainer = styled.ul`\n\tbackground-color: white;\n\tlist-style: none;\n\tmargin: 0px;\n\tpadding: 0px;\n\tborder: 1px solid #0000003b;\n\tborder-top: 0px;\n\tpadding: 10px;\n\ttext-align: left;\n\t/* overflow-y: scroll; */\n`\n\nconst MenuItem = styled.li``\n\nconst NavIcon = styled.img`\n\tmargin-right: 10px;\n`\n","import React from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\n\nfunction PieChart({ labels, data }) {\n\tconst chartData = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tdata,\n\t\t\t\tbackgroundColor: ['#007bff', '#FFA500'],\n\t\t\t},\n\t\t],\n\t\tlabels,\n\t}\n\n\treturn (\n\t\t<ChartContainer>\n\t\t\t<Pie data={chartData} />\n\t\t</ChartContainer>\n\t)\n}\n\nexport default PieChart\n\nconst ChartContainer = styled.div`\n\t/* width: 400px; */\n`\n","const STAGE = process.env.NODE_ENV === 'production' ? true : false\n\nexport const API_URI = STAGE\n\t? 'https://careerebest-business-dashboard.herokuapp.com'\n\t: 'http://localhost:4000'\n\nexport const createJob = `${API_URI}/job`\nexport const getJobs = `${API_URI}/jobs`\n\nexport const getJob = `${API_URI}/job`\nexport const deleteJob = `${API_URI}/job`\nexport const deleteJobs = `${API_URI}/jobs`\n\nexport const createCandidate = `${API_URI}/candidate`\nexport const createBulkCandidate = `${API_URI}/candidateupload`\nexport const getCandidates = `${API_URI}/candidates`\nexport const getAppliedJobs = `${API_URI}/appliedjobs`\n\nexport const applyJob = `${API_URI}/apply`\n\nexport const jobEndpoint = `${API_URI}/job`\nexport const createBulkJob = `${API_URI}/jobsupload`\nexport const jobsEndpoint = `${API_URI}/jobs`\n\nexport const candidateEndpoint = `${API_URI}/candidate`\nexport const candidatesEndpoint = `${API_URI}/candidates`\n\nexport const companyEndpoint = `${API_URI}/company`\nexport const companiesEndpoint = `${API_URI}/companies`\n\nexport const roleEndpoint = `${API_URI}/role`\nexport const rolesEndpoint = `${API_URI}/roles`\n\nexport const userEndpoint = `${API_URI}/user`\nexport const usersEndpoint = `${API_URI}/users`\n\nexport const loginEndpoint = `${API_URI}/login`\nexport const logoutEndpoint = `${API_URI}/logout`\nexport const verifyEndpoint = `${API_URI}/verify`\n\nexport const statusEndpoint = `${API_URI}/status`\n\nexport const statsEndpoint = `${API_URI}/stats`\n\n// export const getPublicJobs = `${API_URI}/public-jobs`\n","import { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { v4 as uuid } from 'uuid'\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify'\n\ntoast.configure({\n\tposition: toast.POSITION.BOTTOM_RIGHT,\n\tautoClose: 3000,\n\tpauseOnFocusLoss: false,\n\ttoastId: uuid(),\n\t// transition: Slide,\n\tdraggablePercent: 60,\n})\n\nexport { toast }\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport styled from 'styled-components'\nimport { Card } from '../styles'\n\nfunction ChartSkeleton() {\n\treturn (\n\t\t<ChartCard>\n\t\t\t<TitleContainer>\n\t\t\t\t<Skeleton width={100} />\n\t\t\t\t<Skeleton width={100} />\n\t\t\t</TitleContainer>\n\t\t\t<Skeleton circle={true} height={200} width={200} />\n\t\t\t<Skeleton width={300} />\n\t\t</ChartCard>\n\t)\n}\n\nexport default ChartSkeleton\n\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n\nconst TitleContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n`\n","import React, { useEffect } from 'react'\nimport PieChart from '../../components/PieChart'\nimport { Card, ContentContainer, PageLayout, Title } from '../../styles'\nimport styled from 'styled-components'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { statsAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { statsEndpoint } from '../../api'\nimport { toast } from '../../components/Toast'\nimport Skeleton from 'react-loading-skeleton'\nimport ChartSkeleton from '../../components/ChartSkeleton'\n\nfunction DashboardPage() {\n\tconst [stats, setStats] = useRecoilState(statsAtom)\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(statsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setStats(data))\n\t\t\t.catch((e) => toast.error('Something went wrong'))\n\t}, [])\n\n\tconsole.log({ stats })\n\n\treturn (\n\t\t<>\n\t\t\t<ContentContainer>\n\t\t\t\t<PieContainer>\n\t\t\t\t\t{stats ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Assigned Jobs', 'Unassigned Jobs']}\n\t\t\t\t\t\t\t\t\tdata={[stats.stats.job.assigned, stats.stats.job.unassigned]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>{stats.stats.job.total} Jobs</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Applied Candidates', 'Candidates Not Applied']}\n\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.applied,\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.unapplied,\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>\n\t\t\t\t\t\t\t\t\t{stats.stats.candidate.total} Candidates\n\t\t\t\t\t\t\t\t</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</PieContainer>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default DashboardPage\n\nconst PieContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\n\nconst ChartTitle = styled.h3`\n\tcolor: #333;\n`\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {InputBase} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction Search({onChange}) {\n        return (\n                <SearchDiv>\n                        <>\n                                <SearchIcon />\n                        </>\n                        <InputBase \n                                placeholder=\"Search…\"\n                                inputProps={{ 'aria-label': 'search' }} \n                                onChange={onChange}\n                        />\n                </SearchDiv>\n        )\n}\n\nexport default Search\n\nconst SearchDiv = styled.div`\n        padding: 4px 10px;\n        display: flex;\n        align-items: center;\n        color: #ABABAB;\n        background-color: #EEF0F7;\n        border-radius: 4px;\n`;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces } from '../styles'\nimport Search from '../components/Search'\n\nfunction Controls({ title, children, onSearchChange, search }) {\n\treturn (\n\t\t<ControlContainer>\n\t\t\t<ControlTitle>{title}</ControlTitle>\n\t\t\t{\n\t\t\t\tsearch ? <ControlSearch><Search onChange={onSearchChange} /></ControlSearch> : null\n\t\t\t}\n\t\t\t<ControlButtonContainer>{children}</ControlButtonContainer>\n\t\t</ControlContainer>\n\t)\n}\n\nexport default Controls\n\nconst ControlContainer = styled.div`\n\tposition: sticky;\n\ttop: 0px;\n\tz-index: 10;\n\tpadding: 10px 20px;\n\tbackground-color: white;\n\tdisplay: flex;\n\tborder: 1px solid #0000003b;\n\tborder-top: none;\n\tborder-left: none;\n\t/* border-radius: 6px; */\n\talign-items: center;\n\tjustify-content: space-between;\n`\n\nconst ControlTitle = styled.h4`\n\t${RemoveSpaces}\n\tcolor: #333;\n`\n\nconst ControlSearch = styled.div`\n\tmargin: 0 auto;\t\n`\n\nconst ControlButtonContainer = styled.div`\n\tdisplay: flex;\n`\n","import styled from 'styled-components'\nimport {\n\tButton,\n\tFormControl,\n\tIconButton,\n\tModal,\n\tSelect,\n\tTextField,\n} from '@material-ui/core'\nimport {Autocomplete} from '@material-ui/lab'\n\nexport const SMUIButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px;\n\t\tpadding: 5px 20px;\n\t}\n`\nexport const SMUITextField = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t\twidth: 100%;\n\t}\n`\nexport const SMUISelect = styled(Select)`\n\t&& {\n\t\twidth: 100%;\n\t\t/* margin: 10px 0px; */\n\t\t/* padding: 5px 0px; */\n\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIAutocomplete = styled(Autocomplete)`\n\t&& {\n\t\twidth: 100%;\n\t\t/* margin: 10px 0px; */\n\t\t/* padding: 5px 0px; */\n\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIFormControl = styled(FormControl)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIIconButton = styled(IconButton)`\n\t&&{\n\t\tpadding: 0px;\n\t}\n`\n\nexport const SMUIModal = styled(Modal)`\n\t&& {\n\t\tposition: fixed;\n\t\ttop: auto;\n\t\tbottom: auto;\n\t\tleft: auto;\n\t\tmargin: 0 auto;\n\t\tright: auto;\n\t\twidth: 500px;\n\t\toutline: none;\n\t\tborder-style: none;\n\t}\n\t&&:focus {\n\t\toutline: none;\n\t}\n`\n","import React from 'react'\nimport {\n\tModalBody,\n\tModalButtonContainer,\n\n\tModalText, ModalTitle,\n\n\tModalWarning\n} from '../../styles'\nimport { SMUIButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nfunction DeleteModal({ open, onClose, count, deleteHandler }) {\n\treturn (\n\t\t<SMUIModal open={open} onClose={onClose}>\n\t\t\t<ModalBody>\n\t\t\t\t<ModalTitle>{count} Items Selected</ModalTitle>\n\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t<SMUIButton onClick={onClose}>Cancel</SMUIButton>\n\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\tonClick={deleteHandler}\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</SMUIButton>\n\t\t\t\t</ModalButtonContainer>\n\t\t\t</ModalBody>\n\t\t</SMUIModal>\n\t)\n}\n\nexport default DeleteModal\n","import { selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\nimport {\n\tcandidateCheckedAtom,\n\tcompanyCheckedAtom,\n\tjobCheckedAtom,\n\troleCheckedAtom,\n\tuserCheckedAtom,\n} from './atoms'\n\nexport const filterTrueJobChecked = selector({\n\tkey: 'filterTrueJobChecked',\n\tget: ({ get }) => {\n\t\tconst checkedJob = get(jobCheckedAtom)\n\t\treturn trueKeysToArr(checkedJob)\n\t},\n})\n\nexport const filterTrueCandidateChecked = selector({\n\tkey: 'filterTrueCandidateChecked',\n\tget: ({ get }) => {\n\t\tconst checkedCandidate = get(candidateCheckedAtom)\n\t\treturn trueKeysToArr(checkedCandidate)\n\t},\n})\n\nexport const selectedCompanies = selector({\n\tkey: 'filterTrueCompanyChecked',\n\tget: ({ get }) => {\n\t\tconst companyChecked = get(companyCheckedAtom)\n\t\treturn trueKeysToArr(companyChecked)\n\t},\n})\n\nexport const selectedRoles = selector({\n\tkey: 'filterTrueRoleChecked',\n\tget: ({ get }) => {\n\t\tconst roleChecked = get(roleCheckedAtom)\n\t\treturn trueKeysToArr(roleChecked)\n\t},\n})\n\nexport const selectedUsers = selector({\n\tkey: 'filterTrueUsersChecked',\n\tget: ({ get }) => {\n\t\tconst userChecked = get(userCheckedAtom)\n\t\treturn trueKeysToArr(userChecked)\n\t},\n})\n","import React, {useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport axios from 'axios';\nimport clsx from 'clsx';\nimport { filter, get } from 'lodash'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { lighten, makeStyles } from '@material-ui/core/styles';\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, candidateAtom } from '../../../recoil/atoms'\nimport { CSVLink, CSVDownload } from \"react-csv\";\nimport { toast } from '../../../components/Toast'\n\nimport {deleteJobs, applyJob} from '../../../api'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip\n} from \"@material-ui/core\";\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../../utils/helperFunctions'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\n\nimport Search from '../../../components/Search'\n\nfunction createData(code, title, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttactmentLink) {\n  return { code, title, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttactmentLink};\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'jobCode', numeric: false, disablePadding: true, label: 'job code' },\n  { id: 'jobTitle', numeric: false, disablePadding: true, label: 'job title' },\n  { id: 'state', numeric: false, disablePadding: true, label: 'state' },\n  { id: 'district', numeric: false, disablePadding: true, label: 'district' },\n  { id: 'zone', numeric: false, disablePadding: true, label: 'zone' },\n  { id: 'status', numeric: false, disablePadding: true, label: 'status' },\n  { id: 'noOfOpening', numeric: false, disablePadding: true, label: 'no of opening' },\n  { id: 'startDate', numeric: false, disablePadding: true, label: 'start date' },\n  { id: 'closeDate', numeric: false, disablePadding: true, label: 'close date' },\n  { id: 'industry', numeric: false, disablePadding: true, label: 'industry' },\n  { id: 'company', numeric: false, disablePadding: true, label: 'company' },\n  { id: 'vertical', numeric: false, disablePadding: true, label: 'vertical' },\n  { id: 'division', numeric: false, disablePadding: true, label: 'division' },\n  { id: 'ctcMin', numeric: false, disablePadding: true, label: 'CTC Min' },\n  { id: 'ctcMax', numeric: false, disablePadding: true, label: 'CTC Max' },\n  { id: 'CVShared', numeric: false, disablePadding: true, label: 'No. of cvs shared' },\n  { id: 'sharedToHRDate', numeric: false, disablePadding: true, label: 'shared with hr date' },\n  { id: 'JDAttachmentLink', numeric: false, disablePadding: true, label: 'jd attachment' },\n];\n\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n        //     padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label.toUpperCase()}</b>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold'\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, jobData, setFilterData, rows, handleDeleteClick, toApply, candidateApplyHandler } = props;\n  const currentUser = useRecoilValue(currentUserAtom)\n  const history = useHistory()\n  const location = useLocation().pathname\n  \n  const onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n\t\t\treturn data.jobCode.toLowerCase().includes(inputVal) || \n      data.jobTitle.toLowerCase().includes(inputVal) || \n      data.state.toLowerCase().includes(inputVal) || \n      data.district.toLowerCase().includes(inputVal) || \n      data.zone.toLowerCase().includes(inputVal) || \n      data.company.toLowerCase().includes(inputVal) || \n      data.vertical.toLowerCase().includes(inputVal) || \n      data.division.toLowerCase().includes(inputVal) || \n      data.industry.toLowerCase().includes(inputVal)\n\t\t});\n\t\tsetFilterData(filterData);\n  }\n\n  \n\n  return (\n    <>\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Jobs\n        </Typography>\n      )}\n\n      {/* search */}\n      <div style={{margin: '0 auto'}}>\n        <Search onChange={(e) => {onSearchChange(e)} } />\n      </div>\n\n\n      {numSelected > 0 ? (\n        <>\n          {\n            toApply ? \n            <Tooltip title=\"Apply\">\n              <IconButton aria-label=\"delete\">\n                <CheckCircleOutlineIcon onClick={() => candidateApplyHandler()} />\n              </IconButton>\n            </Tooltip>\n            :\n            <Tooltip title=\"Delete\">\n              <IconButton aria-label=\"delete\">\n                <DeleteIcon onClick={() => handleDeleteClick()} />\n              </IconButton>\n            </Tooltip>\n          }\n        </>\n      ) : (\n        <>\n        {get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<Tooltip title=\"Add Job\">\n              <IconButton aria-label=\"add job\" onClick={() => history.push(`${location}/add`)}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n\t\t\t\t\t\t)}\n            <CSVLink data={rows} headers={headCells.label} filename={\"jobs.csv\"}>\n              <Tooltip title=\"Download\">\n                <IconButton aria-label=\"download\">\n                  <GetAppIcon />\n                </IconButton>\n              </Tooltip>\n            </CSVLink>\n          </>\n        \n      )}\n    </Toolbar>\n    </>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\n// main function\n\nexport default function EnhancedTable({filterData,setFilterData, jobData, toApply}) {\n  const classes = useStyles();\n  const history = useHistory()\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('postedOn');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const location = useLocation().pathname\n  const rows = [];\n  const currentCandidate = useRecoilValue(candidateAtom)\n\n  const handleDeleteClick = () => {\n    axios.patch(deleteJobs, {selected}, {withCredentials: true})\n    .then(data => {\n      setSelected({})\n      alert('jobs deleted')\n    })\n    .catch(err => {\n      alert(err.message)\n    })\n  }\n\n  const candidateApplyHandler = async () => {\n      axios.post(applyJob, {\n        candidate: currentCandidate,\n        jobIds: selected\n      }, {withCredentials: true})\n      .then(data => {\n        toast.success('Jobs assigned successfully!')\n        setSelected([])\n        history.goBack()\n      })\n      .catch(err => {\n        toast.error(`Error: ${err.message}`)\n      })\n\t}\n\n\n  filterData.map(job => {\n    const {jobCode, jobTitle, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttachmentLink} = job\n          rows.push(\n            createData(jobCode, jobTitle, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttachmentLink)\n          );\n  })\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const isSelected = (code) => selected.indexOf(code) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} jobData={jobData} setFilterData={setFilterData} rows={rows} handleDeleteClick={handleDeleteClick} toApply={toApply} candidateApplyHandler={candidateApplyHandler} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy} \n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => {\n                        handleClick(event, row.code); \n                      }}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" style={{minWidth: 120}}>\n                      {toApply ? (\n                          row.code\n                        ) : (\n                          <NavLink to={`${location}/${row.code}`}>\n                            {row.code}\n                          </NavLink>\n                        )}\n\n                      </TableCell>\n                      <TableCell style={{minWidth: 200}}>{row.title}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.state}</TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.district}</TableCell>\n                      <TableCell>{row.zone}</TableCell>\n                      <TableCell>{row.status}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.noOfOpening}</TableCell>\n                      <TableCell style={{minWidth: 140}}>{formatDate(row.startDate)}</TableCell>\n                      <TableCell style={{minWidth: 140}}>{formatDate(row.closeDate)}</TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.industry}</TableCell>\n                      <TableCell>{row.company}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.vertical}</TableCell>\n                      <TableCell>{row.division}</TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.ctcMin}</TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.ctcMax}</TableCell>\n                      <TableCell style={{minWidth: 180}}>{row.CVShared}</TableCell>\n                      <TableCell style={{minWidth: 200}}>{row.sharedToHRDate}</TableCell>\n                      <TableCell style={{minWidth: 200}}><a href={row.JDAttactmentLink} target='_blank'>Link</a></TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={8} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import { AddCircle, Delete, Search } from '@material-ui/icons'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { v4 as uuid } from 'uuid'\nimport { applyJob, deleteJobs, getJobs, jobsEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport Table from '../../components/Table'\n\nimport {\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n\tjobAtom,\n\tjobCheckedAtom,\n} from '../../recoil/atoms'\nimport {\n\tfilterTrueCandidateChecked,\n\tfilterTrueJobChecked,\n} from '../../recoil/selectors'\nimport {\n\tContentContainer,\n\tControlButton,\n\tStyledCheckbox,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { toast } from '../../components/Toast'\nimport { filter, get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\nimport EnhancedTable from './components/NewTable'\n\nfunction JobPage({ toApply }) {\n\t// React Hooks\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tvar [jobData, setJobData] = useRecoilState(jobAtom)\n\tconst [checked, setChecked] = useRecoilState(jobCheckedAtom)\n\tconst [, setCandidateChecked] = useRecoilState(candidateCheckedAtom)\n\tconst ids = useRecoilValue(filterTrueJobChecked)\n\tconst candidateSelectedIds = useRecoilValue(filterTrueCandidateChecked)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [filterData, setFilterData] = useState();\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(jobsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJobData(data);\n\t\t\t\tsetFilterData(data);\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\n\tconst jobHeading = [\n\t\t<StyledCheckbox\n\t\t\ttype='checkbox'\n\t\t\tcolor='primary'\n\t\t\tonChange={() => console.log('checked')}\n\t\t/>,\n\t\t'Job Code',\n\t\t'Job Title',\n\t\t'Company',\n\t\t'City',\n\t\t'Openings',\n\t\t`Resumes`,\n\t\t`Posted On`,\n\t\t// `Assigned On`,\n\t]\n\t      \n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\n\t\tconsole.log(checked)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(deleteJobs, { ids }, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Job Deleted')\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// const candidateApplyHandler = async () => {\n\t// \ttry {\n\t// \t\tawait axios.post(\n\t// \t\t\tapplyJob,\n\t// \t\t\t{\n\t// \t\t\t\tcandidates: candidateSelectedIds,\n\t// \t\t\t\tjobs: ids,\n\t// \t\t\t\tuserId: currentUser._id,\n\t// \t\t\t},\n\t// \t\t\t{ withCredentials: true }\n\t// \t\t)\n\t// \t\tsetChecked({})\n\t// \t\tsetCandidateChecked({})\n\t// \t\thistory.goBack()\n\t// \t\ttoast.success('Candidates Assigned')\n\t// \t} catch (err) {\n\t// \t\ttoast.error('Something went wrong')\n\t// \t}\n\t// }\n\t// Renderers\n\tconst renderJobHeading = jobHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\n\n\tconst renderJobData =\n\t\tfilterData &&\n\t\tfilterData.map((job) => {\n\t\t\treturn (\n\t\t\t\t<TableRow\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: checked[job._id] ? '#0c68fa1f' : 'white',\n\t\t\t\t\t}}\n\t\t\t\t\tkey={job._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tchecked={checked[job._id]}\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonChange={() => onCheckHandler(job._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t{/* <TableData>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\tjob.jobDetails.jobCode\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<NavLink to={`${location}/${job.jobDetails.jobCode}`}>\n\t\t\t\t\t\t\t\t{job.jobDetails.jobCode}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t\t<TableData>{job.companyDetails.companyId.companyName}</TableData>\n\t\t\t\t\t<TableData>{job.jobAddress.city}</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t\t<TableData>{job.statusIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(job.createdAt)}</TableData> */}\n\t\t\t\t\t{/* <TableData>\n\t\t\t\t\t\t{new Date(job.jobOpeningInfo.assignedOn).toDateString()}\n\t\t\t\t\t</TableData> */}\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\tconst addHandler = () => {\n\t\thistory.push(`${location}/add`)\n\t}\n\n\tconst onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n\t\t\treturn data.jobCode.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.jobTitle.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.state.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.district.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.zone.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.company.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.vertical.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.division.toLowerCase().includes(inputVal) || \n\t\t\t\tdata.industry.toLowerCase().includes(inputVal)\n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\t// console.log(jobData)\n\n\treturn (\n\t\t<>\n\t\t\t{/* <Controls title={titleGenerator(ids, 'Jobs')} onSearchChange={(e) => onSearchChange(e)} search={true}>\n\t\t\t\t{ids.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\t<ControlButton\n\t\t\t\t\t\t\t\tonClick={candidateApplyHandler}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t\t\tApply\n\t\t\t\t\t\t\t</ControlButton>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={addHandler}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls> */}\n\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={ids.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tfilterData,\n\t\t\t\t\t// <Table headings={renderJobHeading}>{renderJobData}</Table>\n\t\t\t\t\t<EnhancedTable filterData = {filterData} setFilterData={setFilterData} jobData={jobData} toApply={toApply} />\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobPage\n","import { Button, MenuItem, Select } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport SearchIcon from '../assets/icons/search.svg'\nimport { themeBorder } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction SearchBar({ options }) {\n\tconst [searchCriteria, setSearchCriteria] = useState(options[0].value)\n\tconst [searchVal, setSearchVal] = useState('')\n\tconst renderOption = () =>\n\t\toptions.map(({ value, name }) => {\n\t\t\treturn <MenuItem key={uuid()} value={value}>{name}</MenuItem>\n\t\t})\n\n\n\tconst searchInputHandler = (e) => setSearchVal(e.target.value)\n\tconst searchCriteriaHandler = (e) => setSearchCriteria(e.target.value)\n\n\treturn (\n\t\t<SearchBarForm>\n\t\t\t<StyledSelect value={searchCriteria} onChange={searchCriteriaHandler}>\n\t\t\t\t{renderOption()}\n\t\t\t</StyledSelect>\n\t\t\t<SearchInput\n\t\t\t\tvalue={searchVal}\n\t\t\t\tonChange={searchInputHandler}\n\t\t\t\tplaceholder='Search Here...'\n\t\t\t/>\n\n\t\t\t<Button>\n\t\t\t\t<img src={SearchIcon} alt='Search Icon' />\n\t\t\t</Button>\n\t\t</SearchBarForm>\n\t)\n}\n\nexport default SearchBar\n\nconst StyledSelect = styled(Select)`\n\tpadding: 0px 20px;\n`\n\nconst SearchBarForm = styled.form`\n\tdisplay: flex;\n\tmargin: 10px 0px;\n\tjustify-content: space-between;\n\t${themeBorder}\n\tbackground-color: white;\n`\nconst SearchInput = styled.input`\n\tflex: 1;\n\tpadding: 0px 10px;\n\tborder-style: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { filter, get } from 'lodash'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../../recoil/atoms'\n\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip\n} from \"@material-ui/core\";\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../../utils/helperFunctions'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nimport Search from '../../../components/Search'\n\nfunction createData(code, candidateName, resumeTitle, contactNumber, email, workExp, annualSalary, currentLocation, preferredLocation, currentEmployer, designation, UGCourse, PGCourse, PostPGCourse, DOB, postalAddress, resumeID, LastActive, commentOne, commentTwo, commentThree, commentFour, commentFive) {\n  return { code, candidateName, resumeTitle, contactNumber, email, workExp, annualSalary, currentLocation, preferredLocation, currentEmployer, designation, UGCourse, PGCourse, PostPGCourse, DOB, postalAddress, resumeID, LastActive, commentOne, commentTwo, commentThree, commentFour, commentFive};\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'candidateName', numeric: false, disablePadding: true, label: 'candidate name' },\n  { id: 'resumeTitle', numeric: false, disablePadding: true, label: 'resume title' },\n  { id: 'contactNumber', numeric: false, disablePadding: true, label: 'contact no' },\n  { id: 'email', numeric: false, disablePadding: true, label: 'email' },\n  { id: 'workExp', numeric: false, disablePadding: true, label: 'work exp' },\n  { id: 'annualSalary', numeric: false, disablePadding: true, label: 'annual salary' },\n  { id: 'currentLocation', numeric: false, disablePadding: true, label: 'current location' },\n  { id: 'preferredLocation', numeric: false, disablePadding: true, label: 'preferred location' },\n  { id: 'currentEmployer', numeric: false, disablePadding: true, label: 'current employer' },\n  { id: 'designation', numeric: false, disablePadding: true, label: 'designation' },\n  { id: 'UGCourse', numeric: false, disablePadding: true, label: 'u.g. course' },\n  { id: 'PGCourse', numeric: false, disablePadding: true, label: 'p.g. course' },\n  { id: 'postPGCourse', numeric: false, disablePadding: true, label: 'post p.g. course' },\n  { id: 'DOB', numeric: false, disablePadding: true, label: 'age/DOB' },\n  { id: 'postalAddress', numeric: false, disablePadding: true, label: 'postal address' },\n  { id: 'resumeId', numeric: false, disablePadding: true, label: 'resume id'},\n  { id: 'lastActiveDate', numeric: false, disablePadding: true, label: 'Last Active' },\n  { id: 'commentOne', numeric: false, disablePadding: true, label: 'comment 1' },\n  { id: 'commentTwo', numeric: false, disablePadding: true, label: 'comment 2' },\n  { id: 'commentThree', numeric: false, disablePadding: true, label: 'comment 3' },\n  { id: 'commentFour', numeric: false, disablePadding: true, label: 'comment 4' },\n  { id: 'commentFive', numeric: false, disablePadding: true, label: 'comment 5' },\n];\n\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n        //     padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label.toUpperCase()}</b>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold'\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, jobData, setFilterData, rows } = props;\n  const currentUser = useRecoilValue(currentUserAtom)\n  const history = useHistory()\n  const location = useLocation().pathname\n  \n  const onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n                        return data['candidateName'].toLowerCase().includes(inputVal) ||\n                                data['email'].toLowerCase().includes(inputVal) ||\n                                data['currentLocation'].toLowerCase().includes(inputVal) ||\n                                data['preferredLocation'].toLowerCase().includes(inputVal) ||\n                                data['designation'].toLowerCase().includes(inputVal) ||\n                                data['currentEmployer'].toLowerCase().includes(inputVal)\n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\n  return (\n    <>\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Candidates\n        </Typography>\n      )}\n\n      {/* search */}\n      <div style={{margin: '0 auto'}}>\n        <Search onChange={(e) => {onSearchChange(e)} } />\n      </div>\n\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon onClick={() => console.log('delete button click')} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <>\n        {get(currentUser, 'roleId.permissions.candidate.create') && (\n\t\t\t\t\t\t\t<Tooltip title=\"Add Job\">\n              <IconButton aria-label=\"add job\" onClick={() => history.push(`${location}/add`)}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n\t\t\t\t\t\t)}\n            <CSVLink data={rows} headers={headCells.label} filename={\"candidates.csv\"}>\n              <Tooltip title=\"Download\">\n                <IconButton aria-label=\"download\">\n                  <GetAppIcon />\n                </IconButton>\n              </Tooltip>\n            </CSVLink>\n          </>\n        \n      )}\n    </Toolbar>\n    </>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable({filterData,setFilterData, jobData, toApply}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('postedOn');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const location = useLocation().pathname\n  const rows = [];\n\n  filterData.map(candidate => {\n        rows.push(\n                createData(candidate._id, candidate['candidateName'], candidate['resumeTitle'], candidate['contactNo'], candidate['email'], candidate['workExp'], candidate['annualSalary'], candidate['currentLocation'], candidate['preferredLocation'], candidate['currentEmployer'], candidate['designation'], candidate['UGCourse'], candidate['PGCourse'], candidate['postPGCourse'], candidate['DOB'], candidate['postalAddress'], candidate['resumeId'],  candidate['lastActiveDate'], candidate['commentOne'], candidate['commentOne'], candidate['commentTwo'], candidate['commentThree'],  candidate['commentFour'], candidate['commentFive'])\n        );\n        // console.log(rows)\n  })\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const isSelected = (code) => selected.indexOf(code) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} jobData={jobData} setFilterData={setFilterData} rows={rows} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy} \n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.code)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" style={{minWidth: 180}}>\n                      {toApply ? (\n                          row.candidateName\n                        ) : (\n                          <NavLink to={`${location}/${row.resumeID}`}>\n                            {row.candidateName}\n                          </NavLink>\n                        )}\n\n                      </TableCell>\n                      <TableCell style={{minWidth: 300}}>{row.resumeTitle}</TableCell>\n                      <TableCell style={{minWidth: 150}}>\n                              <a href={\"tel:\"+row.contactNumber}>{row.contactNumber}</a>\n                        </TableCell>\n                      <TableCell>\n                              <a href={\"mailto:\"+row.email} target=\"_blank\">{row.email}</a>\n                        </TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.workExp}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.annualSalary}</TableCell>\n                      <TableCell style={{minWidth: 180}}>{row.currentLocation}</TableCell>\n                      <TableCell style={{minWidth: 200}}>{row.preferredLocation}</TableCell>\n                      <TableCell style={{minWidth: 180}}>{row.currentEmployer}</TableCell>\n                      <TableCell>{row.designation}</TableCell>\n                      <TableCell style={{minWidth: 130}}>{row.UGCourse}</TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.PGCourse}</TableCell>\n                      <TableCell style={{minWidth: 170}}>{row.PostPGCourse}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.DOB}</TableCell>\n                      <TableCell style={{minWidth: 200}}>{row.postalAddress}</TableCell>\n                      <TableCell>\n                                {toApply ? (\n                                        row.code\n                                        ) : (\n                                        <NavLink to={`${location}/${row.resumeID}`}>\n                                        {row.resumeID}\n                                        </NavLink>\n                                )}\n                      </TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.LastActive}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentOne}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentTwo}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentThree}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentFour}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentFive}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={23} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport {\n\tapplyJob,\n\tcandidatesEndpoint,\n\tcompaniesEndpoint,\n\tgetCandidates,\n\tgetJobs,\n} from '../../api'\nimport Table from '../../components/Table'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tPageLayout,\n\tTableData,\n\tTableHead,\n\tTableRow,\n\tStyledCheckbox,\n\tContentContainer,\n\tControlButton,\n} from '../../styles'\n\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport Controls from '../../components/Controls'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\n\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n\ttrueKeysToArr,\n} from '../../utils/helperFunctions'\n\nimport { useRecoilValue } from 'recoil'\nimport { filterTrueCandidateChecked } from '../../recoil/selectors'\nimport SearchBar from '../../components/SearchBar'\nimport AddIcon from '../../assets/icons/add.svg'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { AddCircle, Delete } from '@material-ui/icons'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { v4 as uuid } from 'uuid'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\nimport NewCandidateTable from './components/NewCandidateTable'\n\n\nfunction CandidatePage() {\n\t// React Hooks\n\n\tconst [candidateData, setCandidateData] = useRecoilState(candidateAtom)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst selected = useRecoilValue(filterTrueCandidateChecked)\n\tconst [filterData, setFilterData] = useState();\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\n\tuseEffect(() => {\n\t\taxios.get(getCandidates, { withCredentials: true })\n\t\t\t.then(({ data }) => {setCandidateData(data); setFilterData(data);})\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\tconst candidateHeading = [\n\t\t'Select',\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t`Entered On`,\n\t]\n\n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\t}\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(candidatesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Candidates Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// Renderers\n\t// const renderCandidateData =\n\t// \tcandidateData &&\n\t// \tcandidateData.map((candidate) => {\n\t// \t\treturn (\n\t// \t\t\t<TableRow key={candidate._id}>\n\t// \t\t\t\t<TableData>\n\t// \t\t\t\t\t<StyledCheckbox\n\t// \t\t\t\t\t\ttype='checkbox'\n\t// \t\t\t\t\t\tchecked={checked[candidate._id]}\n\t// \t\t\t\t\t\tcolor='primary'\n\t// \t\t\t\t\t\tonChange={() => onCheckHandler(candidate._id)}\n\t// \t\t\t\t\t/>\n\t// \t\t\t\t</TableData>\n\t// \t\t\t\t<TableData>\n\t// \t\t\t\t\t<NavLink to={`${location}/${candidate.candidateCode}`}>\n\t// \t\t\t\t\t\t{candidate.candidateCode}\n\t// \t\t\t\t\t</NavLink>{' '}\n\t// \t\t\t\t</TableData>\n\t// \t\t\t\t<TableData>{candidate.basic.fullName}</TableData>\n\t// \t\t\t\t<TableData>{candidate.basic.primaryEmail}</TableData>\n\t// \t\t\t\t<TableData>{candidate.basic.mobile}</TableData>\n\t// \t\t\t\t<TableData>{candidate.address.state}</TableData>\n\t// \t\t\t\t{/* <TableData>45</TableData> */}\n\t// \t\t\t\t<TableData>{candidate.professional.industry}</TableData>\n\t// \t\t\t\t<TableData>{candidate.professional.functionalArea}</TableData>\n\t// \t\t\t\t<TableData>{formatDate(candidate.createdAt)}</TableData>\n\t// \t\t\t</TableRow>\n\t// \t\t)\n\t// \t})\n\n\tconst toPage = (link) => {\n\t\thistory.push(link)\n\t}\n\n\treturn (\n\t\t<ContentContainer>\n\t\t\t{renderWithLoader(\n\t\t\t\tfilterData,\n\t\t\t\t<NewCandidateTable filterData = {filterData} setFilterData={setFilterData} jobData={candidateData}/>\n\t\t\t)}\n\t\t</ContentContainer>\n\t\t// <>\n\t\t// \t<Controls title={titleGenerator(selected, 'Candidate Controls')}>\n\t\t// \t\t{selected.length > 0 ? (\n\t\t// \t\t\t<>\n\t\t// \t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t// \t\t\t\t\t<SMUIIconButton\n\t\t// \t\t\t\t\t\tcolor='secondary'\n\t\t// \t\t\t\t\t\tonClick={toggleModal}\n\t\t// \t\t\t\t\t\tcolor='secondary'>\n\t\t// \t\t\t\t\t\t<Delete />\n\t\t// \t\t\t\t\t</SMUIIconButton>\n\t\t// \t\t\t\t)}\n\n\t\t// \t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t// \t\t\t\t\t<ControlButton\n\t\t// \t\t\t\t\t\tvariant='contained'\n\t\t// \t\t\t\t\t\tcolor='primary'\n\t\t// \t\t\t\t\t\tonClick={() => toPage('/job/apply')}>\n\t\t// \t\t\t\t\t\tAssign\n\t\t// \t\t\t\t\t</ControlButton>\n\t\t// \t\t\t\t)}\n\t\t// \t\t\t</>\n\t\t// \t\t) : (\n\t\t// \t\t\t<>\n\t\t// \t\t\t\t{get(currentUser, 'roleId.permissions.candidate.create') && (\n\t\t// \t\t\t\t\t<SMUIIconButton\n\t\t// \t\t\t\t\t\tcolor='primary'\n\t\t// \t\t\t\t\t\tonClick={() => toPage(`${location}/add`)}>\n\t\t// \t\t\t\t\t\t<AddCircle />\n\t\t// \t\t\t\t\t</SMUIIconButton>\n\t\t// \t\t\t\t)}\n\t\t// \t\t\t</>\n\t\t// \t\t)}\n\t\t// \t\t{/* <Button variant=\"contained\" color=\"primary\">Import</Button>\n\t\t// \t\t<Button variant=\"contained\" color=\"primary\">Export</Button> */}\n\t\t// \t</Controls>\n\t\t// \t<DeleteModal\n\t\t// \t\topen={isModalOpen}\n\t\t// \t\tonClose={toggleModal}\n\t\t// \t\tcount={selected.length}\n\t\t// \t\tdeleteHandler={deleteHandler}\n\t\t// \t/>\n\t\t// \t<ContentContainer>\n\t\t// \t\t{renderWithLoader(\n\t\t// \t\t\tcandidateData,\n\t\t// \t\t\t<Table headings={renderCandidateHeading}>{renderCandidateData}</Table>\n\t\t// \t\t)}\n\t\t// \t</ContentContainer>\n\t\t// </>\n\t)\n}\n\nexport default CandidatePage\n\nconst CandidatePageContainer = styled.div`\n\tbackground-color: #0000000d;\n\twidth: 100%;\n\tpadding: 10px;\n`\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport AddIcon from '../../assets/icons/add.svg'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, roleAtom, roleCheckedAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { rolesEndpoint } from '../../api'\nimport Table from '../../components/Table'\nimport { v4 as uuid } from 'uuid'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\nimport { selectedRoles } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction RolePage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [checked, setChecked] = useRecoilState(roleCheckedAtom)\n\tconst selected = useRecoilValue(selectedRoles)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(rolesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Roles Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst roleHeading = ['Select', 'Name', 'Vendor', 'Total Users', 'Created On']\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst renderHeading = roleHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderRoleData =\n\t\troles &&\n\t\troles.map(({ _id, name, vendor, users, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{name}</TableData>\n\t\t\t\t\t<TableData>{vendor}</TableData>\n\t\t\t\t\t<TableData>{users.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Roles')}>\n\t\t\t\t{selected.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{/* <IconButton onClick={() => navHandler('add')} src={AddIcon} /> */}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\troles,\n\t\t\t\t\t<Table headings={renderHeading}>{renderRoleData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RolePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tPageLayout,\n\tTableHead,\n\tTableRow,\n\tTableData,\n\tStyledCheckbox,\n} from '../../styles'\nimport Controls from '../../components/Controls'\n\nimport { useHistory, useLocation } from 'react-router-dom'\nimport AddIcon from '../../assets/icons/add.svg'\nimport axios from 'axios'\nimport { usersEndpoint } from '../../api'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, userAtom, userCheckedAtom } from '../../recoil/atoms'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { v4 as uuid } from 'uuid'\nimport { selectedUsers } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction UserPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [users, setUsers] = useRecoilState(userAtom)\n\tconst [checked, setChecked] = useRecoilState(userCheckedAtom)\n\tconst selected = useRecoilValue(selectedUsers)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(usersEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setUsers(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst userHeading = [\n\t\t'Select',\n\t\t'Fullname',\n\t\t'Username',\n\t\t'Contact',\n\t\t'Email',\n\t\t'Assigned Role',\n\t\t'Created On',\n\t]\n\n\tconst renderUserHeading = userHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(usersEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('User Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\tconst showUsers =\n\t\tusers &&\n\t\tusers.filter((user) => {\n\t\t\tif (currentUser) {\n\t\t\t\treturn currentUser._id.toString() !== user._id.toString()\n\t\t\t}\n\t\t})\n\n\t\tconsole.log(showUsers);\n\tconst renderUserData =\n\t\tshowUsers &&\n\t\tshowUsers.map(\n\t\t\t({\n\t\t\t\t_id,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tuserName,\n\t\t\t\tcontact,\n\t\t\t\temail,\n\t\t\t\troleId,\n\t\t\t\tcreatedAt,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t\t<TableData>\n\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableData>\n\n\t\t\t\t\t\t<TableData>{`${firstName} ${lastName}`}</TableData>\n\t\t\t\t\t\t<TableData>{userName}</TableData>\n\t\t\t\t\t\t<TableData>{contact}</TableData>\n\t\t\t\t\t\t<TableData>{email}</TableData>\n\t\t\t\t\t\t<TableData>{roleId.name}</TableData>\n\t\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t\t</TableRow>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Users')}>\n\t\t\t\t{selected.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tusers,\n\t\t\t\t\t<Table headings={renderUserHeading}>{renderUserData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserPage\n","import { IconButton, InputLabel, MenuItem } from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport axios from 'axios'\nimport 'date-fns'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { companiesEndpoint, jobEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { companyAtom, currentUserAtom, jobAtom } from '../../../recoil/atoms'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\nimport { toast } from '../../../components/Toast'\n\nimport {states} from '../../../statesList'\n\nfunction JobInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst jobId = get(match, 'params.id', '')\n\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\n\tconst jobs = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [job, setJob] = useState(\n\t\tjobs && jobs.find((job) => job.jobDetails.jobCode === jobId)\n\t)\n\n\tuseEffect(() => {\n\t\tif (!job) {\n\t\t\taxios\n\t\t\t\t.get(`${jobEndpoint}/${jobId}`)\n\t\t\t\t.then(({ data }) => setJob(data))\n\t\t\t\t.catch((e) => console.log(e))\n\t\t}\n\t}, [])\n\n\tconst [jobTitle, setJobTitle] = useState(\n\t\tget(job, 'jobOpeningInfo.jobTitle', '')\n\t)\n\tconst [jobType, setJobType] = useState(get(job, 'jobOpeningInfo.jobType', ''))\n\tconst [industry, setIndustry] = useState(\n\t\tget(job, 'jobOpeningInfo.industry', '')\n\t)\n\tconst [noOfOpening, setNoOfOpening] = useState(\n\t\tget(job, 'jobOpeningInfo.noOfOpenings')\n\t)\n\n\tconst [salaryFrom, setSalaryFrom] = useState(\n\t\tget(job, 'jobOpeningInfo.salary.from')\n\t)\n\n\tconst [salaryTo, setSalaryTo] = useState(\n\t\tget(job, 'jobOpeningInfo.salary.to')\n\t)\n\n\t//companydetails\n\tconst [companyId, setCompanyId] = useState(\n\t\tget(job, 'companyDetails.companyId._id', '')\n\t)\n\n\tconst [companyName, setCompanyName] = useState(\n\t\tget(job, 'companyDetails.companyName', '')\n\t)\n\n\tconst [isCompanyDetailsVisible, setIsCompanyDetailsVisible] = useState(\n\t\tget(job, 'companyDetails.isCompanyDetailsVisible', true)\n\t)\n\t//jobaddress\n\tconst [jobLocation, setJobLocation] = useState(\n\t\tget(job, 'jobAddress.jobLocation')\n\t)\n\tconst [city, setCity] = useState(get(job, 'jobAddress.city', ''))\n\tconst [zone, setZone] = useState(get(job, 'jobAddress.zone'))\n\tconst [state, setState] = useState(get(job, 'jobAddress.state', ''))\n\tconst [pincode, setPincode] = useState(get(job, 'jobAddress.pincode'))\n\tconst [country, setCountry] = useState(get(job, 'jobAddress.country', ''))\n\n\t//jobdetails\n\tconst [jobDescription, setJobDescription] = useState(\n\t\tget(job, 'jobDetails.jobDescription', '')\n\t)\n\n\tconst [eligibility, setEligibility] = useState(\n\t\tget(job, 'jobDetails.eligibility', [])\n\t)\n\tconst [eligibilityVal, setEligibilityVal] = useState()\n\n\tconst [responsibilities, setResponsibilities] = useState(\n\t\tget(job, 'jobDetails.responsibilities', [])\n\t)\n\tconst [responsibilitiesVal, setResponsibilitiesVal] = useState()\n\n\tconst [benefits, setBenefits] = useState(get(job, 'jobDetails.benefits', []))\n\tconst [benefitsVal, setBenefitsVal] = useState()\n\n\tconst [additionalInformation, setAdditionalInformation] = useState(\n\t\tget(job, 'jobDetails.additionalInformation', '')\n\t)\n\tconst [targetDate, setTargetDate] = useState(\n\t\tpickerDateFormat(get(job, 'jobDetails.targetDate'))\n\t)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\t//functions\n\n\t//handlers\n\tconst saveHandler = async (isEdit) => {\n\t\tconst newJobData = {\n\t\t\tjobOpeningInfo: {\n\t\t\t\tjobTitle,\n\t\t\t\tjobType,\n\t\t\t\tindustry,\n\t\t\t\tsalary: {\n\t\t\t\t\tfrom: salaryFrom,\n\t\t\t\t\tto: salaryTo\n\t\t\t\t},\n\t\t\t\tassignedOn: new Date(),\n\t\t\t\tnoOfOpenings: Number(noOfOpening),\n\t\t\t},\n\t\t\tcompanyDetails: {\n\t\t\t\tcompanyId,\n\t\t\t\tcompanyName,\n\t\t\t\tisCompanyDetailsVisible,\n\t\t\t},\n\t\t\tjobAddress: {\n\t\t\t\tjobLocation,\n\t\t\t\tcity,\n\t\t\t\tzone,\n\t\t\t\tstate,\n\t\t\t\tpincode,\n\t\t\t\tcountry,\n\t\t\t},\n\t\t\tjobDetails: {\n\t\t\t\tjobCode: codeGenerator(jobTitle, industry, companyId),\n\t\t\t\tjobDescription,\n\t\t\t\tadditionalInformation,\n\t\t\t\ttargetDate,\n\t\t\t\teligibility,\n\t\t\t\tresponsibilities,\n\t\t\t\tbenefits,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\t\ttry {\n\t\t\tif (isEdit) {\n\t\t\t\tawait axios.patch(`${jobEndpoint}/${jobId}`, newJobData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\n\t\t\t\ttoast.success('Job Edited')\n\t\t\t\thistory.goBack()\n\t\t\t} else {\n\t\t\t\tawait axios.post(jobEndpoint, newJobData, { withCredentials: true })\n\t\t\t\ttoast.success('New Job Added')\n\t\t\t\thistory.goBack()\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst renderCompaniesOption =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName }) => {\n\t\t\treturn (\n\t\t\t\t<MenuItem key={_id} value={_id}>\n\t\t\t\t\t{companyName}\n\t\t\t\t</MenuItem>\n\t\t\t)\n\t\t})\n\n\tconst addCompanyHandler = () => {\n\t\thistory.push('/company/add')\n\t}\n\n\treturn (\n\t\t<JobInputContainer>\n\t\t\t{/* Control */}\n\t\t\t<Controls title='Job Control'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.permissions.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.job.update')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tonClick={() => saveHandler(edit)}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Opening Info</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='industry'>Industry</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}>\n\t\t\t\t\t\t\t{/* {\n\t\t\t\t\t\t\t\tindustries.map((data, i) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={i} value={data.name}>{data.name}</MenuItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t} */}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={noOfOpening}\n\t\t\t\t\t\tonChange={(e) => setNoOfOpening(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='No. of Opening'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobtype'>Job type</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobType}\n\t\t\t\t\t\t\tlabel='Job type'\n\t\t\t\t\t\t\tonChange={(e) => setJobType(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Full-time'>Full-Time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Part-time'>Part-time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Freelancing'>Freelancing</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={salaryFrom}\n\t\t\t\t\t\tonChange={(e) => setSalaryFrom(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Salary from'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={salaryTo}\n\t\t\t\t\t\tonChange={(e) => setSalaryTo(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Salary To'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='company'>Company</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabelId='company'\n\t\t\t\t\t\t\tvalue={companyId}\n\t\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t\t\tonChange={(e) => setCompanyId(e.target.value)}>\n\t\t\t\t\t\t\t{renderCompaniesOption}\n\n\t\t\t\t\t\t\t<MenuItem value='add New' onClick={addCompanyHandler}>\n\t\t\t\t\t\t\t\t+ Add New Company\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<CheckBoxContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isCompanyDetailsVisible}\n\t\t\t\t\t\t\tonChange={(e) => setIsCompanyDetailsVisible(e.target.checked)}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CheckBoxLabel>Company Details Visible</CheckBoxLabel>\n\t\t\t\t\t</CheckBoxContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Address</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t\tlabel='City'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='state'>State</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstates.map(data => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={data.key} value={data.name}>{data.name}</MenuItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobLocation'>Job Location</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobLocation}\n\t\t\t\t\t\t\tonChange={(e) => setJobLocation(e.target.value)}\n\t\t\t\t\t\t\tlabel='Job Location'>\n\t\t\t\t\t\t\t<MenuItem value='On Location'>On Location</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Remote'>Remote</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='zone'>Zone</InputLabel>\n\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={zone}\n\t\t\t\t\t\t\tonChange={(e) => setZone(e.target.value)}\n\t\t\t\t\t\t\tlabel='Zone'>\n\t\t\t\t\t\t\t<MenuItem value='North'>North</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='East'>East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='West'>West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South'>South</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-East'>North-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-West'>North-West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-East'>South-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-West'>South-West</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Details</CardTitle>\n\n\t\t\t\t\t{eligibility.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(eligibility, setEligibility)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, eligibilityVal, eligibility, setEligibility)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={eligibilityVal}\n\t\t\t\t\t\t\tonChange={(e) => setEligibilityVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Eligibility'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{responsibilities.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(responsibilities, setResponsibilities)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tresponsibilitiesVal,\n\t\t\t\t\t\t\t\tresponsibilities,\n\t\t\t\t\t\t\t\tsetResponsibilities\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Responsibilities'\n\t\t\t\t\t\t\tvalue={responsibilitiesVal}\n\t\t\t\t\t\t\tonChange={(e) => setResponsibilitiesVal(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{benefits.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(benefits, setBenefits)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, benefitsVal, benefits, setBenefits)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Benefits'\n\t\t\t\t\t\t\tvalue={benefitsVal}\n\t\t\t\t\t\t\tonChange={(e) => setBenefitsVal(e.target.value)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={jobDescription}\n\t\t\t\t\t\tonChange={(e) => setJobDescription(e.target.value)}\n\t\t\t\t\t\tlabel='Job Description'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={additionalInformation}\n\t\t\t\t\t\tonChange={(e) => setAdditionalInformation(e.target.value)}\n\t\t\t\t\t\tlabel='Additional Information'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tdefaultValue={targetDate}\n\t\t\t\t\t\t\tlabel='Target Date'\n\t\t\t\t\t\t\tonChange={(e) => setTargetDate(e.target.value)}\n\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\tplaceholder='Target Date'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\n\t\t\t{/* inputs */}\n\t\t\t{toast}\n\t\t\t{/* {isSaved && <Redirect to='/job' />} */}\n\t\t</JobInputContainer>\n\t)\n}\n\nexport default JobInput\n\nconst JobInputContainer = styled.div``\n\nconst CheckBoxContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\nconst CheckBoxLabel = styled.p`\n\t${RemoveSpaces}\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport { useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../../recoil/atoms'\nimport {Modal, Button, IconButton, Tooltip} from '@material-ui/core'\nimport {\n\tCard,\n\tCardTitle,\n\tCategoryTitle,\n        Content,\n\tContentContainer,\n\tControlButton,\n\tInputContainer,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n        StyledTextField,\n} from '../../../styles'\nimport { toast } from '../../../components/Toast'\nimport CloseIcon from '@material-ui/icons/Close';\nimport { Close } from '@material-ui/icons'\n\nconst BulkUpload = ({setBulkUpload, createBulk}) => {\n\n        const currentUser = useRecoilValue(currentUserAtom)\n        const [selectedFile, setSelectedFile] = useState(null)\n\n\n        const onFileChange = e => {\n                setSelectedFile(e.target.files[0])\n        }\n\n        const onFileUpload = () => {\n                if(!selectedFile) {\n                        toast.error('Please select a file')\n                }\n                else {\n                        const formData = new FormData()\n                        formData.append(\n                                \"myFile\",\n                                selectedFile,\n                                selectedFile.name\n                        )\n\n                        console.log(selectedFile)\n\n                        axios({\n                                method: 'post',\n                                url: createBulk,\n                                data: formData,\n                                withCredentials: true,\n                                headers: {'Content-Type': 'multipart/form-data'}\n                        })\n                        .then(() => {\n                                toast.success('Data Uploaded Successfully')\n                                setSelectedFile(null)\n                                setBulkUpload(false)\n                        })\n                        .catch(err => {\n                                toast.error(`Error: ${err.message}`)\n                        })\n                }\n        }\n\n        const fileData = () => { \n\t\n                if (selectedFile) { \n                        \n                        return ( \n                        <div> \n                                <h2>File Details:</h2> \n                                <p>File Name: {selectedFile.name}</p> \n                                {/* <p>File Type: {selectedFile.type}</p>  */}\n                                <p> \n                                Last Modified:{\" \"} \n                                {selectedFile.lastModifiedDate.toDateString()} \n                                </p> \n                        </div> \n                        )\n                }\n                }\n\n        return (\n                <ContentContainer>\n                <Card style={{position: 'relative', paddingBottom: 40}}>\n                        <div style={{position: 'absolute', right: 10}}>\n                                <Tooltip title=\"Close\">\n                                        <IconButton onClick={() => setBulkUpload(false)}>\n                                                <Close />\n                                        </IconButton>\n                                </Tooltip>\n                        </div>\n                      <h2>Bulk Upload</h2>\n                      <input type = 'file' onChange = {onFileChange} accept=\"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"/>\n                      <Button onClick={onFileUpload} variant='contained' color='primary'>Upload!</Button>\n                      {fileData()}\n                </Card>\n                </ContentContainer>\n        )\n}\n\nexport default BulkUpload\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport * as yup from 'yup'\nimport {useFormik} from 'formik'\nimport 'date-fns'\nimport { get } from 'lodash'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilValue, useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport { companiesEndpoint, jobEndpoint, createBulkJob } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { companyAtom, currentUserAtom, jobAtom, singlejobAtom } from '../../../recoil/atoms'\nimport { IconButton, InputLabel, MenuItem, Tooltip, Grid, TextField } from '@material-ui/core'\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport { AddCircle } from '@material-ui/icons'\nimport PublishIcon from '@material-ui/icons/Publish'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n        SMUITextField,\n        SMUIAutocomplete\n} from '../../../styles/StyledMaterialUI'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\nimport { toast } from '../../../components/Toast'\nimport BulkUpload from '../../Candidate/components/BulkUpload'\nimport {jobStatus, industries, companies, verticals, divisions} from '../../../jobsDataList'\nimport {states, districts, zones} from '../../../statesList'\n\nfunction NewJobInput(props) {\n\n        const {edit} = props\n        const history = useHistory()\n        const currentUser = useRecoilValue(currentUserAtom)\n        const [loading, setLoading] = useState(false)\n        const [bulkUpload, setBulkUpload] = useState(false)\n        const [singleJobData, setSingleJobData] = useRecoilState(singlejobAtom)\n\n        const formValidation = yup.object({\n                jobCode: yup.string('Enter job code').required('Job Code required'),\n                jobTitle: yup.string('Enter job title / requirement name').required('Job title required'),\n                state: yup.string('Select state'),\n                district: yup.string('Selete district'),\n                zone: yup.string('Select zone'),\n                status: yup.string('Enter job status'),\n                noOfOpening: yup.string('Enter total number of opening for this job'),\n                startDate: yup.string('Select starting date'),\n                closeDate: yup.string('Select closing date'),\n                industry: yup.string('Select Industry'),\n                company: yup.string('Select company'),\n                vertical: yup.string('Select vertical'),\n                division: yup.string('Select division'),\n                ctcMin: yup.string('Enter minimum CTC'),\n                ctcMax: yup.string('Enter maximum CTC'),\n                CVShared: yup.number('Enter number of CVs shared for this job'),\n                sharedToHRDate: yup.string('Enter Date when shared with HR'),\n                JDAttachmentLink: yup.string('Enter atachment link')\n        })\n\n        const {jobCode, jobTitle, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttachmentLink} = singleJobData || {}\n\n        const formik = useFormik({\n                initialValues:\n                edit ? \n                        {\n                                jobCode,\n                                jobTitle,\n                                state,\n                                district,\n                                zone,\n                                status,\n                                noOfOpening,\n                                startDate: pickerDateFormat(startDate),\n                                closeDate: pickerDateFormat(closeDate),\n                                industry,\n                                company,\n                                vertical,\n                                division,\n                                ctcMin,\n                                ctcMax,\n                                CVShared,\n                                sharedToHRDate,\n                                JDAttachmentLink\n                        } :\n                        {\n                                jobCode: '',\n                                jobTitle: '',\n                                state: '',\n                                district: '',\n                                zone: '',\n                                status: '',\n                                noOfOpening: '',\n                                startDate: '',\n                                closeDate: '',\n                                industry: '',\n                                company: '',\n                                vertical: '',\n                                division: '',\n                                ctcMin: '',\n                                ctcMax: '',\n                                CVShared: '',\n                                sharedToHRDate: '',\n                                JDAttachmentLink: ''\n                        },\n                validationSchema: formValidation,\n                onSubmit: (values, {resetForm}) => {\n                        // alert(`submit: ${JSON.stringify(values)}`)\n                        setLoading(true)\n                        !edit ? \n                        axios.post(jobEndpoint, values, {withCredentials: true})\n                        .then(data => {\n                                setLoading(false)\n                                toast.success('New job added')\n                                resetForm({values: ''})\n                        })\n                        .catch(err => {\n                                setLoading(false)\n                                toast.error(`Error: ${err.message}`)\n                        }) : \n                        axios.patch(`${jobEndpoint}/${jobCode}`, values, {withCredentials: true})\n                        .then(data => {\n                                setLoading(false);\n                                toast.success(`job updated`)\n                                resetForm({values: ''})\n                                setSingleJobData(data.data)\n                                setTimeout(() => {history.goBack()}, 1000)\n                        })\n                        .catch(err => {\n                                setLoading(false)\n                                toast.error(`Error: ${err.message}`)\n                        })\n                }\n        })\n\n        return (\n                <>\n                {\n                        bulkUpload ? <BulkUpload setBulkUpload={setBulkUpload} createBulk={createBulkJob} /> : null\n                }\n                        <form onSubmit={formik.handleSubmit}>\n                        <Controls title='Add New Job'>\n                                {\n                                        !edit ? (\n                                                <Tooltip title=\"Excel bulk upload\">\n                                                        <IconButton ><PublishIcon onClick={() => setBulkUpload(true)} /></IconButton>\n                                                </Tooltip>\n                                        ) : null\n                                }\n\t\t\t\t<ControlButton color='secondary' onClick={() => formik.resetForm()}>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.candidate.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.candidate.create')) && (\n\t\t\t\t\t<ControlButton\n                                                type='submit'\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n                        <ContentContainer>\n                                <Card>\n                                        <CardTitle>Job Information</CardTitle>\n\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='Job Code'\n                                                        name='jobCode'\n                                                        id='jobCode'\n                                                        value={formik.values.jobCode}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.jobCode && Boolean(formik.errors.jobCode)}\n                                                                        helperText={formik.touched.jobCode && formik.errors.jobCode}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='Job Title'\n                                                        name='jobTitle'\n                                                        id='jobTitle'\n                                                        value={formik.values.jobTitle}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.jobTitle && Boolean(formik.errors.jobTitle)}\n                                                                        helperText={formik.touched.jobTitle && formik.errors.jobTitle}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='State'\n                                                        name='state'\n                                                        id='state'\n                                                        value={formik.values.state}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.state && Boolean(formik.errors.state)}\n                                                                        helperText={formik.touched.state && formik.errors.state}\n                                                />\n                                                <SMUITextField\n                                                                label=\"District\" \n                                                                variant=\"outlined\"\n                                                                name='district'\n                                                                id='district'\n                                                                value={formik.values.district}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.district && Boolean(formik.errors.district)}\n                                                                helperText={formik.touched.district && formik.errors.district}\n                                                        />\n                                                <SMUITextField \n                                                                label=\"Zone\" \n                                                                variant=\"outlined\"\n                                                                name='zone'\n                                                                id='zone'\n                                                                value={formik.values.zone}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.zone && Boolean(formik.errors.zone)}\n                                                                helperText={formik.touched.zone && formik.errors.zone} \n                                                        />\n                                                <SMUITextField \n                                                        label=\"Job status\" \n                                                        variant=\"outlined\"\n                                                        name='status'\n                                                        id='status'\n                                                        value={formik.values.status}\n                                                        onChange={formik.handleChange}\n                                                        error={formik.touched.status && Boolean(formik.errors.status)}\n                                                        helperText={formik.touched.status && formik.errors.status}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='No. of openings'\n                                                        name='noOfOpening'\n                                                        id='noOfOpening'\n                                                        type=\"number\"\n                                                        value={formik.values.noOfOpening}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.noOfOpening && Boolean(formik.errors.noOfOpening)}\n                                                                        helperText={formik.touched.noOfOpening && formik.errors.noOfOpening}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='Start date'\n                                                        name='startDate'\n                                                        id='startDate'\n                                                        type=\"date\"\n                                                        defaultValue={formik.values.startDate}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.startDate && Boolean(formik.errors.startDate)}\n                                                                        helperText={formik.touched.startDate && formik.errors.startDate}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='Close date'\n                                                        name='closeDate'\n                                                        id='closeDate'\n                                                        type=\"date\"\n                                                        defaultValue={formik.values.closeDate}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.closeDate && Boolean(formik.errors.closeDate)}\n                                                                        helperText={formik.touched.closeDate && formik.errors.closeDate}\n                                                />\n                                                <SMUITextField \n                                                                label=\"Industry\" \n                                                                variant=\"outlined\"\n                                                                name='industry'\n                                                                id='industry'\n                                                                value={formik.values.industry}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.industry && Boolean(formik.errors.industry)}\n                                                                helperText={formik.touched.industry && formik.errors.industry}\n                                                        />\n                                                <SMUITextField\n                                                                label=\"Company\" \n                                                                variant=\"outlined\"\n                                                                name='company'\n                                                                id='company'\n                                                                value={formik.values.company}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.company && Boolean(formik.errors.company)}\n                                                                helperText={formik.touched.company && formik.errors.company}\n                                                        />\n                                                <SMUITextField\n                                                                label=\"Vertical\" \n                                                                variant=\"outlined\"\n                                                                name='vertical'\n                                                                id='vertical'\n                                                                value={formik.values.vertical}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.verticals && Boolean(formik.errors.vertical)}\n                                                                helperText={formik.touched.verticals && formik.errors.vertical}\n                                                        />\n                                                <SMUITextField\n                                                        label=\"Division\" \n                                                        variant=\"outlined\"\n                                                        name='division'\n                                                        id='division'\n                                                        value={formik.values.division}\n                                                        onChange={formik.handleChange}\n                                                        error={formik.touched.vertical && Boolean(formik.errors.division)}\n                                                        helperText={formik.touched.vertical && formik.errors.division}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='CTC Min'\n                                                        name='ctcMin'\n                                                        id='ctcMin'\n                                                        value={formik.values.ctcMin}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.ctcMin && Boolean(formik.errors.ctcMin)}\n                                                                        helperText={formik.touched.ctcMin && formik.errors.ctcMin}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='CTC Max'\n                                                        name='ctcMax'\n                                                        id='ctcMax'\n                                                        value={formik.values.ctcMax}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.ctcMax && Boolean(formik.errors.ctcMax)}\n                                                                        helperText={formik.touched.ctcMax && formik.errors.ctcMax}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='No. of CVs shared'\n                                                        name='CVShared'\n                                                        id='CVShared'\n                                                        type='number'\n                                                        value={formik.values.CVShared}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.CVShared && Boolean(formik.errors.CVShared)}\n                                                                        helperText={formik.touched.CVShared && formik.errors.CVShared}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='Shared with HR'\n                                                        name='sharedToHRDate'\n                                                        id='sharedToHRDate'\n                                                        value={formik.values.sharedToHRDate}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.sharedToHRDate && Boolean(formik.errors.sharedToHRDate)}\n                                                                        helperText={formik.touched.sharedToHRDate && formik.errors.sharedToHRDate}\n                                                />\n                                                <SMUITextField\n                                                        style={{width: '100%'}}\n                                                        variant='outlined'\n                                                        label='JD attactment link'\n                                                        name='JDAttachmentLink'\n                                                        id='JDAttachmentLink    '\n                                                        value={formik.values.JDAttachmentLink}\n                                                                        onChange={formik.handleChange}\n                                                                        error={formik.touched.JDAttachmentLink && Boolean(formik.errors.JDAttachmentLink)}\n                                                                        helperText={formik.touched.JDAttachmentLink && formik.errors.JDAttachmentLink}\n                                                />\n                                </Card>\n                        </ContentContainer>\n                        </form>\n                </>\n        )\n}\n\nexport default NewJobInput\n","import React from 'react'\nimport JobInput from './components/JobInput'\nimport styled from 'styled-components'\nimport { PageLayout } from '../../styles'\nimport NewJobInput from './components/NewJobInput'\n\nfunction AddJob() {\n\treturn (\n\t\t<>\n\t\t\t<NewJobInput />\n\t\t\t{/* <JobInput /> */}\n\t\t</>\n\t)\n}\n\nexport default AddJob\n\n\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { useRecoilState } from 'recoil'\nimport { Card } from '../styles'\nimport styled from 'styled-components'\nimport { v4 as uuid } from 'uuid'\n\n\nexport default function PageTab({ atom, labels }) {\n\tconst [value, setValue] = useRecoilState(atom)\n\n\tconst handleChange = (_event, newValue) => {\n\t\tsetValue(newValue)\n\t}\n\n\tconst renderLabels = labels.map((item) => <Tab key={uuid()} label={item} />)\n\treturn (\n\t\t<TabBG>\n\t\t\t<Tabs\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tindicatorColor='primary'\n\t\t\t\ttextColor='primary'\n\t\t\t\t// centered\n\t\t\t>\n\t\t\t\t{renderLabels}\n\t\t\t</Tabs>\n\t\t</TabBG>\n\t)\n}\n\nconst TabBG = styled(Card)`\n\tpadding: 0px;\n\tmargin: 0px;\n\twidth: fit-content;\n`\n","export const stages = [\n\t'Shortlisted',\n\t'Assessment',\n\t'Hiring manager review',\n\t'Interview 1',\n\t'Interview 2',\n\t'Interview 3',\n\t'Salary Fitment',\n\t'Offer',\n\t'Documentation',\n\t'Joining',\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n\tCard,\n\tCategory,\n\tCategoryGrid,\n\tCategoryMainTitle,\n\tCategoryTitle,\n\tContent,\n\tDataContainer,\n\tDataContent,\n\tDataTitle,\n\tthemeBorder,\n\tTitle,\n} from '../../../styles'\nimport JobDetails from '../JobDetails'\nimport { v4 as uuid } from 'uuid'\nimport { formatDate } from '../../../utils/helperFunctions'\n\nfunction JobInfo({ job }) {\n\tconst { companyDetails, jobAddress, jobDetails, jobOpeningInfo } = job || {}\n\tconst { companyName, companyAddress } = companyDetails || {}\n\tconst { city, country, jobLocation, pincode, state, zone } = jobAddress || {}\n\tconst {\n\t\teligibility,\n\t\tresponsibilities,\n\t\tbenefits,\n\t\tjobCode,\n\t\tadditionalInformation,\n\t\tjobDescription,\n\t\ttargetDate,\n\t} = jobDetails || {}\n\n\tconst { assignedOn, industry, jobTitle, jobType, noOfOpenings, salary } =\n\t\tjobOpeningInfo || {}\n\n\tconst renderList = (arr) =>\n\t\tarr.map((item) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{item}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Opening Info</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Type</Title>\n\t\t\t\t\t\t<Content>{jobType}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Openings</Title>\n\t\t\t\t\t\t<Content>{noOfOpenings}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Salary P.A</Title>\n\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsalary ? <>{salary.from} - {salary.to}</> : <>Not specified</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Location</Title>\n\t\t\t\t\t\t<Content>{jobLocation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>City</Title>\n\t\t\t\t\t\t<Content>{city}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Zone</Title>\n\t\t\t\t\t\t<Content>{zone}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Details</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Code</Title>\n\t\t\t\t\t\t<Content>{jobCode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Description</Title>\n\t\t\t\t\t\t<Content>{jobDescription}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Additional Information</Title>\n\t\t\t\t\t\t<Content>{additionalInformation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Target Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(targetDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Eligibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(eligibility)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Responsibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(responsibilities)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Benifits</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(benefits)}</CategoryGrid>\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default JobInfo\n","import React from 'react'\nimport styled from 'styled-components'\nimport { Card, Category, CategoryGrid, CategoryMainTitle, Content, DataContainer, RemoveSpaces, Title } from '../../../styles'\nimport { v4 as uuid } from 'uuid'\nimport { formatDate } from '../../../utils/helperFunctions'\n\nconst NewJobInfo = ({data}) => {\n\tconst {jobCode, jobTitle, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttachmentLink} = data || {}\n\t\n        return (\n                <Card>\n                        <CategoryMainTitle>Job Info</CategoryMainTitle>\n                        <CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Code</Title>\n\t\t\t\t\t\t<Content>{jobCode}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>District</Title>\n\t\t\t\t\t\t<Content>{district}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Zone</Title>\n\t\t\t\t\t\t<Content>{zone}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Status</Title>\n\t\t\t\t\t\t<Content>{status}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>No. of Opening</Title>\n\t\t\t\t\t\t<Content>{noOfOpening}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Start Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(startDate)}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Close Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(closeDate)}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Company</Title>\n\t\t\t\t\t\t<Content>{company}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Vertical</Title>\n\t\t\t\t\t\t<Content>{vertical}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Division</Title>\n\t\t\t\t\t\t<Content>{division}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>CTC Min</Title>\n\t\t\t\t\t\t<Content>{ctcMin}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>CTC Max</Title>\n\t\t\t\t\t\t<Content>{ctcMax}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>No. of CVs Shared</Title>\n\t\t\t\t\t\t<Content>{CVShared}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Shared With HR Date</Title>\n\t\t\t\t\t\t<Content>{sharedToHRDate}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>JD Attactment</Title>\n\t\t\t\t\t\t<Content><a href={JDAttachmentLink} target='_blank'>Link</a></Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n                </Card>\n        )\n}\n\nexport default NewJobInfo;","import axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { useRecoilValue, useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport { jobEndpoint } from '../../api'\nimport ArrowBG from '../../assets/icons/arrow.svg'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport PageTab from '../../components/PageTab'\nimport Table from '../../components/Table'\nimport { currentUserAtom, jobAtom, jobTab, singlejobAtom } from '../../recoil/atoms'\n\nimport {\n\tCard,\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tRemoveSpaces,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport { counter, renderWithLoader } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport JobInfo from './components/JobInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport NewJobInfo from './components/NewJobInfo'\n\n\nfunction JobDetails({ match }) {\n\tconst history = useHistory()\n\tconst id = match.params.id\n\tconst jobTabIndex = useRecoilValue(jobTab)\n\tconst labels = ['PipeLine', 'Applied Candidates', 'Job Details']\n\tconst [job, setJob] = useRecoilState(singlejobAtom)\n\tconst jobFullData = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst selectedJob = jobFullData\n\t\t? jobFullData.find((job) => job.jobCode === id)\n\t\t: job\n\n\tconst stageDataCount = counter(\n\t\tget(selectedJob, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJob(data)\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst candidateData = get(selectedJob, 'statusIds', []).map(\n\t\t(item) => item.candidateId\n\t)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\ttoast.success('Job Deleted')\n\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\t\t\ttoast.error(`Error: ${err.message}`)\n\t\t}\n\t}\n\n\tconst editNavHandler = () => {\n\t\thistory.push(`/job/edit/${id}`)\n\t}\n\n\tconst candidateHeading = [\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t'Status',\n\t]\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderCandidateData = get(selectedJob, 'statusIds', []).map(\n\t\t({ candidateId, currentStage, _id }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={candidateId._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<NavLink to={`/applied/${_id}`}>\n\t\t\t\t\t\t\t{candidateId.candidateCode}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.fullName}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.primaryEmail}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.mobile}</TableData>\n\t\t\t\t\t<TableData>{candidateId.address.state}</TableData>\n\t\t\t\t\t{/* <TableData>45</TableData> */}\n\t\t\t\t\t<TableData>{candidateId.professional.industry}</TableData>\n\t\t\t\t\t<TableData>{candidateId.professional.functionalArea}</TableData>\n\t\t\t\t\t<TableData>{currentStage.stageName}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{renderWithLoader(\n\t\t\t\t\t\t\tcandidateData,\n\t\t\t\t\t\t\t<Table headings={renderCandidateHeading}>\n\t\t\t\t\t\t\t\t{renderCandidateData}\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\t// return <JobInfo job={selectedJob} />\n\t\t\t\treturn <NewJobInfo data={selectedJob} />\n\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls\n\t\t\t\ttitle={get(selectedJob, 'jobTitle', 'Loading..')}>\n\t\t\t\t{/* <Controls title='Details'> */}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t<IconButton onClick={toggleModal}>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.update') && (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={editNavHandler}>\n\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<DeleteModal\n\t\t\t\t\topen={isModalOpen}\n\t\t\t\t\tonClose={toggleModal}\n\t\t\t\t\tcount={1}\n\t\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t\t/>\n\t\t\t\t<PageTab atom={jobTab} labels={labels} />\n\t\t\t\t{renderTabBody(jobTabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobDetails\n","import {\n\tButton,\n\tIconButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n} from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { candidateEndpoint, createCandidate } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tCategoryTitle,\n\tContentContainer,\n\tControlButton,\n\tInputContainer,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tStyledTextField,\n} from '../../../styles'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\n\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { useRecoilValue } from 'recoil'\nimport { candidateAtom, currentUserAtom } from '../../../recoil/atoms'\nimport { get } from 'lodash'\nimport { useHistory } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport { toast } from '../../../components/Toast'\n\nfunction CandidateInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst candidateCode = get(match, 'params.id', '')\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState(\n\t\tcandidates &&\n\t\t\tcandidates.find((candidate) => candidate.candidateCode === candidateCode)\n\t)\n\n\tconst { basic, address, professional } = candidate || {}\n\n\tconst {\n\t\tfullName: _fullName,\n\t\tprimaryEmail: _primaryEmail,\n\t\tsecondaryEmail: _secondaryEmail,\n\t\tmobile: _mobile,\n\t\tpan: _pan,\n\t\tdateOfBirth: _dateOfBirth,\n\t} = basic || {}\n\n\tconst {\n\t\tcountry: _country,\n\t\tpincode: _pincode,\n\t\tstate: _state,\n\t\tstreetName: _streetName,\n\t} = address || {}\n\n\tconst {\n\t\tcurrentSalary: _currentSalary,\n\t\teducation: _education,\n\t\texpected: _expected,\n\t\texperience: _experience,\n\t\tfunctionalArea: _functionalArea,\n\t\tindustry: _industry,\n\t\tskillSet: _skillSet,\n\t} = professional || {}\n\n\t// Basic\n\tconst [fullName, setFullName] = useState(_fullName)\n\n\tconst [primaryEmail, setPrimaryEmail] = useState(_primaryEmail)\n\tconst [secondaryEmail, setSecondaryEmail] = useState(_secondaryEmail)\n\tconst [mobile, setMobile] = useState(_mobile)\n\tconst [pan, setPan] = useState(_pan)\n\tconst [dateOfBirth, setDateOfBirth] = useState(pickerDateFormat(_dateOfBirth))\n\n\t// Address\n\tconst [streetName, setStreetName] = useState(_streetName)\n\tconst [state, setState] = useState(_state)\n\tconst [country, setCountry] = useState(_country)\n\tconst [pincode, setPincode] = useState(_pincode)\n\n\t// Professional\n\tconst [experience, setExperience] = useState(_experience || [])\n\tconst [education, setEducation] = useState(_education || [])\n\tconst [skillSet, setSkillSet] = useState(_skillSet || [])\n\tconst [skillSetVal, setSkillSetVal] = useState()\n\n\tconst [currentSalary, setCurrentSalary] = useState(_currentSalary)\n\tconst [expected, setExpected] = useState(_expected)\n\tconst [industry, setIndustry] = useState(_industry)\n\tconst [functionalArea, setFunctionalArea] = useState(_functionalArea)\n\n\tconst [jobTitle, setJobTitle] = useState()\n\tconst [company, setCompany] = useState()\n\tconst [summary, setSummary] = useState()\n\tconst [fromDate, setFromDate] = useState(pickerDateFormat())\n\tconst [tillDate, setTillDate] = useState(pickerDateFormat())\n\n\tconst [qualificationName, setQualificationName] = useState()\n\tconst [instituteName, setInstituteName] = useState()\n\tconst [studiedFromDate, setStudiedFromDate] = useState(pickerDateFormat())\n\tconst [studiedTillDate, setStudiedTillDate] = useState(pickerDateFormat())\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${candidateEndpoint}/${candidateCode}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\t\n\tconst addExpHandler = () => {\n\t\tconst data = {\n\t\t\tjobTitle,\n\t\t\tcompany,\n\t\t\tsummary,\n\t\t\tfromDate,\n\t\t\ttillDate,\n\t\t}\n\n\t\tconst tempExp = [...experience]\n\t\ttempExp.push(data)\n\t\tsetExperience(tempExp)\n\t}\n\n\tconst addEduHandler = () => {\n\t\tconst data = {\n\t\t\tqualificationName,\n\t\t\tinstituteName,\n\t\t\tstudiedFromDate,\n\t\t\tstudiedTillDate,\n\t\t}\n\n\t\tconst tempEdu = [...education]\n\t\ttempEdu.push(data)\n\t\tsetEducation(tempEdu)\n\t}\n\n\tconst saveHandler = async () => {\n\t\tconst candidateData = {\n\t\t\tbasic: {\n\t\t\t\tfullName,\n\t\t\t\tprimaryEmail,\n\t\t\t\tsecondaryEmail,\n\t\t\t\tmobile,\n\t\t\t\tpan,\n\t\t\t\tdateOfBirth: new Date(dateOfBirth),\n\t\t\t},\n\n\t\t\tprofessional: {\n\t\t\t\texperience,\n\t\t\t\teducation,\n\t\t\t\tskillSet,\n\t\t\t\tcurrentSalary: Number(currentSalary),\n\t\t\t\texpected: Number(expected),\n\t\t\t\tindustry,\n\t\t\t\tfunctionalArea,\n\t\t\t},\n\t\t\tcandidateCode: codeGenerator(fullName, pan, mobile),\n\t\t\tstatus: 'New',\n\t\t\tstage: 'Not Applied',\n\n\t\t\taddress: {\n\t\t\t\tstreetName,\n\t\t\t\tstate,\n\t\t\t\tcountry,\n\t\t\t\tpincode,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tawait axios.patch(\n\t\t\t\t\t`${candidateEndpoint}/${candidateCode}`,\n\t\t\t\t\tcandidateData,\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t)\n\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('Candidate Edited')\n\t\t\t} else {\n\t\t\t\tawait axios.post(candidateEndpoint, candidateData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('New Candidate Added')\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate Controls'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.candidate.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.candidate.create')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={saveHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Basic</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={fullName}\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\n\t\t\t\t\t\tlabel='Full Name'\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={[primaryEmail]}\n\t\t\t\t\t\tonChange={(e) => setPrimaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Primary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={secondaryEmail}\n\t\t\t\t\t\tonChange={(e) => setSecondaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Secondary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={mobile}\n\t\t\t\t\t\tonChange={(e) => setMobile(e.target.value)}\n\t\t\t\t\t\tlabel='Mobile No.'\n\t\t\t\t\t/> \n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pan}\n\t\t\t\t\t\tonChange={(e) => setPan(e.target.value)}\n\t\t\t\t\t\tlabel='PAN No'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Date of Birth'\n\t\t\t\t\t\tdefaultValue={dateOfBirth}\n\t\t\t\t\t\tonChange={(e) => setDateOfBirth(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Address</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={streetName}\n\t\t\t\t\t\tonChange={(e) => setStreetName(e.target.value)}\n\t\t\t\t\t\tlabel='Street Name'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}\n\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Professional</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={currentSalary}\n\t\t\t\t\t\tonChange={(e) => setCurrentSalary(e.target.value)}\n\t\t\t\t\t\tlabel='Current Salary'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={expected}\n\t\t\t\t\t\tonChange={(e) => setExpected(e.target.value)}\n\t\t\t\t\t\tlabel='Expected Salary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='industry'>Industry</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Finance'>Finance</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Marketing'>Marketing</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='functionalArea'>Functional Area</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Functional Area'\n\t\t\t\t\t\t\tvalue={functionalArea}\n\t\t\t\t\t\t\tonChange={(e) => setFunctionalArea(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Software'>Software</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Accounting'>Accounting</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t{skillSet.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(skillSet, setSkillSet)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, skillSetVal, skillSet, setSkillSet)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={skillSetVal}\n\t\t\t\t\t\t\tonChange={(e) => setSkillSetVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Skill Set'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</MultipleItemInputContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Experience</CardTitle>\n\n\t\t\t\t\t{experience.map(\n\t\t\t\t\t\t({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Job Title</h1>\n\t\t\t\t\t\t\t\t\t<p>{jobTitle}</p>\n\t\t\t\t\t\t\t\t\t<h1>Company</h1>\n\t\t\t\t\t\t\t\t\t<p>{company}</p>\n\t\t\t\t\t\t\t\t\t<h1>Summary</h1>\n\t\t\t\t\t\t\t\t\t<p>{summary}</p>\n\t\t\t\t\t\t\t\t\t<h1>From Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{fromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Till Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{tillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={company}\n\t\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\n\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={summary}\n\t\t\t\t\t\tonChange={(e) => setSummary(e.target.value)}\n\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='From Date'\n\t\t\t\t\t\tvalue={fromDate}\n\t\t\t\t\t\tonChange={(e) => setFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={tillDate}\n\t\t\t\t\t\tonChange={(e) => setTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addExpHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Education</CardTitle>\n\n\t\t\t\t\t{education.map(\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\tqualificationName,\n\t\t\t\t\t\t\tinstituteName,\n\t\t\t\t\t\t\tstudiedFromDate,\n\t\t\t\t\t\t\tstudiedTillDate,\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Qualification</h1>\n\t\t\t\t\t\t\t\t\t<p>{qualificationName}</p>\n\t\t\t\t\t\t\t\t\t<h1>Institute</h1>\n\t\t\t\t\t\t\t\t\t<p>{instituteName}</p>\n\n\t\t\t\t\t\t\t\t\t<h1>Studied From</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedFromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Studied Till</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedTillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={qualificationName}\n\t\t\t\t\t\tonChange={(e) => setQualificationName(e.target.value)}\n\t\t\t\t\t\tlabel='Qualification Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={instituteName}\n\t\t\t\t\t\tonChange={(e) => setInstituteName(e.target.value)}\n\t\t\t\t\t\tlabel='Institute Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Studied From Date'\n\t\t\t\t\t\tvalue={studiedFromDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Studied Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={studiedTillDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addEduHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateInput\n","import React,{useEffect, useState} from 'react'\nimport axios from 'axios'\nimport * as yup from 'yup'\nimport {useFormik} from 'formik'\nimport { candidateEndpoint, createCandidate } from '../../../api'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\nimport {createBulkCandidate} from '../../../api/index'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tCategoryTitle,\n\tContentContainer,\n\tControlButton,\n\tInputContainer,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n        StyledTextField,\n} from '../../../styles'\nimport {\n\tButton,\n\tIconButton,\n\tInputLabel,\n\tMenuItem,\n        Select,\n        Tooltip,\n} from '@material-ui/core'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { useRecoilValue } from 'recoil'\nimport { candidateAtom, currentUserAtom } from '../../../recoil/atoms'\nimport { get } from 'lodash'\nimport { useHistory } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport { toast } from '../../../components/Toast'\nimport PublishIcon from '@material-ui/icons/Publish';\nimport BulkUpload from './BulkUpload'\n\nconst NewCandidateInput = () => {\n        const history = useHistory()\n        const currentUser = useRecoilValue(currentUserAtom)\n        const [loading, setLoading] = useState(false)\n        const [bulkUpload, setBulkUpload] = useState(false)\n\n        const phoneRegExp = /^((\\\\+[1-9]{1,4}[ \\\\-]*)|(\\\\([0-9]{2,3}\\\\)[ \\\\-]*)|([0-9]{2,4})[ \\\\-]*)*?[0-9]{3,4}?[ \\\\-]*[0-9]{3,4}?$/;\n\n        const formValidation = yup.object({\n                candidateName: yup.string('Enter Your full name').required('Full Name required'), \n                contactNo: yup.string().matches(phoneRegExp, 'Contact number is not valid')\n                                .max(10, 'Invalid contact number')\n                                .min(10, 'Invalid contact number')\n                                .required('Contact number required'),\n                email: yup.string('Enter your Email').email('Invalid Email').required('Email required'),\n                DOB: yup.string('Select DOB'),\n                postalAddress: yup.string('Enter your postal address').required('Address required'),\n                resumeTitle: yup.string('Enter resume title'),\n                resumeId: yup.string('Enter your resume Id'),\n                workExp: yup.string('Enter your work experiance'),\n                annualSalary: yup.string('Enter your current annual salary'),\n                currentLocation: yup.string('Enter your current location'),\n                preferredLocation: yup.string('Enter your preferred location'),\n                currentEmployer: yup.string(`Enter your current employer's name`),\n                designation: yup.string('Enter your current designation'),\n                UGCourse: yup.string('Enter your Graduation name'),\n                PGCourse: yup.string('Enter your post graduation name'),\n                postPGCourse: yup.string('Enter your post p.g course name'),\n                lastActive: yup.string('Select your last active date'),\n                commentOne: yup.string(),\n                commentTwo: yup.string(),\n                commentThree: yup.string(),\n                commentFour: yup.string(),\n                commentFive: yup.string()\n        })\n\n        const formik = useFormik({\n                initialValues: {\n                        candidateName: '',\n                        contactNo: '',\n                        email: '',\n                        DOB: '',\n                        postalAddress: '',\n                        resumeTitle: '',\n                        resumeId: '',\n                        workExp: '',\n                        annualSalary: '',\n                        currentLocation: '',\n                        preferredLocation: '',\n                        currentEmployer: '',\n                        designation: '',\n                        UGCourse: '',\n                        PGCourse: '',\n                        postPGCourse: '',\n                        lastActive: '',\n                        commentOne: '',\n                        commentTwo: '',\n                        commentThree: '',\n                        commentFour: '',\n                        commentFive: '',\n                        source: currentUser._id\n                },\n                validationSchema: formValidation,\n                onSubmit: (values, {resetForm}) => {\n                        // const candidateCode = codeGenerator(values.candidateName, values.currentLocation, values.contactNo);\n                        // values.candidateCode = candidateCode\n                        // console.log(`submit: ${JSON.stringify(values)}`)\n                        setLoading(true)\n                        axios.post(candidateEndpoint, values, {withCredentials: true})\n                        .then(data => {\n                                setLoading(false)\n                                toast.success('New Candidate Added')\n                                resetForm({values: ''})\n\n                                console.log(data)\n                        })\n                        .catch(err => {\n                                setLoading(false)\n                                toast.error(`Error: ${err.message}`)\n                        })\n                }\n        })\n\n        return (\n                <>\n                {\n                        bulkUpload ? <BulkUpload setBulkUpload={setBulkUpload} createBulk={createBulkCandidate} /> : null\n                }\n                <form onSubmit={formik.handleSubmit}>\n                        <Controls title='Add New Candidate'>\n                                <Tooltip title=\"Excel bulk upload\">\n                                        <IconButton onClick={() => setBulkUpload(true)}><PublishIcon /></IconButton>\n                                </Tooltip>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.candidate.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.candidate.create')) && (\n\t\t\t\t\t<ControlButton\n                                                type='submit'\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n                        <ContentContainer>\n                                <Card>\n                                        <CardTitle>Personal Information</CardTitle>\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Full Name'\n                                                name='candidateName'\n                                                id='candidateName'\n                                                value={formik.values.candidateName}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.candidateName && Boolean(formik.errors.candidateName)}\n                                                                helperText={formik.touched.candidateName && formik.errors.candidateName}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Contact No.'\n                                                name='contactNo'\n                                                id='contactNo'\n                                                value={formik.values.contactNo}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.contactNo && Boolean(formik.errors.contactNo)}\n                                                                helperText={formik.touched.contactNo && formik.errors.contactNo}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Email'\n                                                type='email'\n                                                name='email'\n                                                id='email'\n                                                value={formik.values.email}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.email && Boolean(formik.errors.email)}\n                                                                helperText={formik.touched.email && formik.errors.email}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Date of Birth'\n                                                type='date'\n                                                name='DOB'\n                                                id='DOB'\n                                                value={formik.values.DOB}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.DOB && Boolean(formik.errors.DOB)}\n                                                                helperText={formik.touched.DOB && formik.errors.DOB}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Postal Address'\n                                                multiline\n                                                rows={4}\n                                                name='postalAddress'\n                                                id='postalAddress'\n                                                value={formik.values.postalAddress}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.postalAddress && Boolean(formik.errors.postalAddress)}\n                                                                helperText={formik.touched.postalAddress && formik.errors.postalAddress}\n                                        />\n                                </Card>\n                                <Card>\n                                        <CardTitle>Professional Information</CardTitle>\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Resume Title'\n                                                name='resumeTitle'\n                                                id='resumeTitle'\n                                                value={formik.values.resumeTitle}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.resumeTitle && Boolean(formik.errors.resumeTitle)}\n                                                                helperText={formik.touched.resumeTitle && formik.errors.resumeTitle}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Resume Id'\n                                                name='resumeId'\n                                                id='resumeId'\n                                                value={formik.values.resumeId}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.resumeId && Boolean(formik.errors.resumeId)}\n                                                                helperText={formik.touched.resumeId && formik.errors.resumeId}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Work Exp'\n                                                name='workExp'\n                                                id='wordExp'\n                                                value={formik.values.workExp}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.workExp && Boolean(formik.errors.workExp)}\n                                                                helperText={formik.touched.workExp && formik.errors.workExp}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Annual Salary'\n                                                name='annualSalary'\n                                                id='annualSalary'\n                                                value={formik.values.annualSalary}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.annualSalary && Boolean(formik.errors.annualSalary)}\n                                                                helperText={formik.touched.annualSalary && formik.errors.annualSalary}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Current Location'\n                                                name='currentLocation'\n                                                id='currentLocation'\n                                                value={formik.values.currentLocation}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.currentLocation && Boolean(formik.errors.currentLocation)}\n                                                                helperText={formik.touched.currentLocation && formik.errors.currentLocation}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Preferred Location'\n                                                name='preferredLocation'\n                                                id='preferredLocation'\n                                                value={formik.values.preferredLocation}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.preferredLocation && Boolean(formik.errors.preferredLocation)}\n                                                                helperText={formik.touched.preferredLocation && formik.errors.preferredLocation}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Current Employer'\n                                                name='currentExmployer'\n                                                id='currentEmployer'\n                                                value={formik.values.currentEmployer}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.currentEmployer && Boolean(formik.errors.currentEmployer)}\n                                                                helperText={formik.touched.currentEmployer && formik.errors.currentEmployer}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Designation'\n                                                name='designation'\n                                                id='designation'\n                                                value={formik.values.designation}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.designation && Boolean(formik.errors.designation)}\n                                                                helperText={formik.touched.designation && formik.errors.designation}\n                                        />\n                                </Card>\n                                <Card>\n                                        <CardTitle>Education</CardTitle>\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='U.G. Course'\n                                                name='UGCourse'\n                                                id='UGCourse'\n                                                value={formik.values.UGCourse}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.UGCourse && Boolean(formik.errors.UGCourse)}\n                                                                helperText={formik.touched.UGCourse && formik.errors.UGCourse}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='P.G. Course'\n                                                name='PGCourse'\n                                                id='PGCourse'\n                                                value={formik.values.PGCourse}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.PGCourse && Boolean(formik.errors.PGCourse)}\n                                                                helperText={formik.touched.PGCourse && formik.errors.PGCourse}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Post P.G. Course'\n                                                name='postPGCourse'\n                                                id='postPGCourse'\n                                                value={formik.values.postPGCourse}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.postPGCourse && Boolean(formik.errors.postPGCourse)}\n                                                                helperText={formik.touched.postPGCourse && formik.errors.postPGCourse}\n                                        />\n                                </Card>\n                                <Card>\n                                        <CardTitle>General</CardTitle>\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Last Active'\n                                                type=\"date\"\n                                                name='lastActive'\n                                                id='lastActive'\n                                                value={formik.values.lastActive}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.lastActive && Boolean(formik.errors.lastActive)}\n                                                                helperText={formik.touched.lastActive && formik.errors.lastActive}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Comment 1'\n                                                multiline\n                                                rows={2}\n                                                name='commentOne'\n                                                id='commentOne'\n                                                value={formik.values.commentOne}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.commentOne && Boolean(formik.errors.commentOne)}\n                                                                helperText={formik.touched.commentOne && formik.errors.commentOne}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Comment 2'\n                                                multiline\n                                                rows={2}\n                                                name='commentTwo'\n                                                id='commentTwo'\n                                                value={formik.values.commentTwo}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.commentTwo && Boolean(formik.errors.commentTwo)}\n                                                                helperText={formik.touched.commentTwo && formik.errors.commentTwo}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Comment 3'\n                                                multiline\n                                                rows={2}\n                                                name='commentThree'\n                                                id='commentThree'\n                                                value={formik.values.commentThree}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.commentThree && Boolean(formik.errors.commentThree)}\n                                                                helperText={formik.touched.commentThree && formik.errors.commentThree}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Comment 4'\n                                                multiline\n                                                rows={2}\n                                                name='commentFour'\n                                                id='commentFour'\n                                                value={formik.values.commentFour}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.commentFour && Boolean(formik.errors.commentFour)}\n                                                                helperText={formik.touched.commentFour && formik.errors.commentFour}\n                                        />\n                                        <SMUITextField\n                                                variant='outlined'\n                                                label='Comment 5'\n                                                multiline\n                                                rows={2}\n                                                name='commentFive'\n                                                id='commentFive'\n                                                value={formik.values.commentFive}\n                                                                onChange={formik.handleChange}\n                                                                error={formik.touched.commentFive && Boolean(formik.errors.commentFive)}\n                                                                helperText={formik.touched.commentFive && formik.errors.commentFive}\n                                        />\n                                </Card>\n                        </ContentContainer>\n                        </form>\n                </>\n        )\n}\n\nexport default NewCandidateInput\n","import React from 'react'\nimport { PageLayout } from '../../styles'\nimport CandidateInput from './components/CandidateInput'\nimport NewCandidateInput from './components/NewCandidateInput'\n\nfunction AddCandidate() {\n\treturn (\n\t\t<>\n\t\t\t<NewCandidateInput />\n\t\t\t{/* <CandidateInput /> */}\n\t\t</>\n\t)\n}\n\nexport default AddCandidate\n","import React from 'react'\nimport {Table, TableBody, TableCell, TableContainer, TableHead, TableRow, Paper} from '@material-ui/core'\nimport {formatDate, renderWithLoader, titleGenerator} from '../../../utils/helperFunctions'\n\nconst AppliedJobsTable = ({data}) => {\n        const jobs = data.jobs || {}\n        const rows = []\n        const heads = ['Job Code', 'Job Title', 'State', 'District', 'Zone', 'Status', 'No. of Openings', 'Start Date', 'Close Date', 'Industry', 'Company', 'Vertical', 'Division', 'CTC Min', 'CTC Max', 'No. od CVs Shared', 'Shared with HR Date', 'JD Attachment']\n\n        const createData = (code, title, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttactmentLink) => {\n                return { code, title, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttactmentLink };\n        }\n\n        jobs.map((job, i) => {\n                const {jobCode, jobTitle, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttachmentLink} = job\n                rows.push(\n                        createData(jobCode, jobTitle, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttachmentLink)\n                );\n        })\n\n        console.log(rows)\n\n        return (\n                <TableContainer component={Paper} elevation={1} square>\n                        <Table aria-label=\"Applied Jobs Table\">\n                                <TableHead>\n                                        <TableRow>\n                                                {\n                                                        heads.map((head, i) => (\n                                                                <TableCell key={i} style={tableHeadStyle}>{head}</TableCell>\n                                                        ))\n                                                }\n                                        </TableRow>\n                                </TableHead>\n                                <TableBody>\n                                        {\n                                                rows.map((row, i) => {\n                                                        const {code, title, state, district, zone, status, noOfOpening, startDate, closeDate, industry, company, vertical, division, ctcMin, ctcMax, CVShared, sharedToHRDate, JDAttactmentLink} = row\n                                                        return (\n                                                                <TableRow key={i}>\n                                                                        <TableCell component=\"th\" scope=\"row\">{code}</TableCell>\n                                                                        <TableCell>{title}</TableCell>\n                                                                        <TableCell>{state}</TableCell>\n                                                                        <TableCell>{district}</TableCell>\n                                                                        <TableCell>{zone}</TableCell>\n                                                                        <TableCell>{status}</TableCell>\n                                                                        <TableCell>{noOfOpening}</TableCell>\n                                                                        <TableCell>{formatDate(startDate)}</TableCell>\n                                                                        <TableCell>{formatDate(closeDate)}</TableCell>\n                                                                        <TableCell>{industry}</TableCell>\n                                                                        <TableCell>{company}</TableCell>\n                                                                        <TableCell>{vertical}</TableCell>\n                                                                        <TableCell>{division}</TableCell>\n                                                                        <TableCell>{ctcMin}</TableCell>\n                                                                        <TableCell>{ctcMax}</TableCell>\n                                                                        <TableCell>{CVShared}</TableCell>\n                                                                        <TableCell>{sharedToHRDate}</TableCell>\n                                                                        <TableCell align=\"center\"><a href={`${JDAttactmentLink}`}>Link</a></TableCell>\n                                                                </TableRow>\n                                                        )\n                                                })\n                                        }\n                                </TableBody>\n                        </Table>\n                </TableContainer>\n        )\n}\n\nexport default AppliedJobsTable\n\nconst tableHeadStyle = {\n        textTransform: 'uppercase',\n        fontWeight: 'bold',\n        minWidth: 150\n}","import React from 'react'\nimport { Card, Category, CategoryGrid, CategoryMainTitle, Content, DataContainer, RemoveSpaces, Title } from '../../../styles'\nimport styled from 'styled-components'\nimport { get } from 'lodash'\nimport { formatDate } from '../../../utils/helperFunctions'\nimport { v4 as uuid } from 'uuid'\n\nfunction CandidateInfo({ data }) {\n\tconst { basic, professional, address, source } = data || {}\n\tconst { fullName, primaryEmail, secondaryEmail, mobile, pan, dateOfBirth } =\n\t\tbasic || {}\n\n\t\n\tconst {\n\t\texperience,\n\t\teducation,\n\t\tskillSet,\n\t\tcurrentSalary,\n\t\texpected,\n\t\tindustry,\n\t\tfunctionalArea,\n\t} = professional || {}\n\n\tconst { streetName, state, country, pincode } = address || {}\n\n\tconst renderExperience =\n\t\texperience &&\n\t\texperience.map(({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\treturn (\n\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Company</Title>\n\t\t\t\t\t\t<Content>{company}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Summary</Title>\n\t\t\t\t\t\t<Content>{summary}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>From Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(fromDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Till Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(tillDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t)\n\t\t})\n\n\tconst renderSkill =\n\t\tskillSet &&\n\t\tskillSet.map((skill) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{skill}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\tconst renderEducation =\n\t\teducation &&\n\t\teducation.map(\n\t\t\t({\n\t\t\t\tqualificationName,\n\t\t\t\tinstituteName,\n\t\t\t\tstudiedFromDate,\n\t\t\t\tstudiedTillDate,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Qualification</Title>\n\t\t\t\t\t\t\t<Content>{qualificationName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Institute</Title>\n\t\t\t\t\t\t\t<Content>{instituteName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Start Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedFromDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>End Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedTillDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Basic</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Fullname</Title>\n\t\t\t\t\t\t<Content>{fullName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Primary Email</Title>\n\t\t\t\t\t\t<Content>{primaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Secondary Email</Title>\n\t\t\t\t\t\t<Content>{secondaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Mobile</Title>\n\t\t\t\t\t\t<Content>{mobile}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>PAN Number</Title>\n\t\t\t\t\t\t<Content>{pan}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Date Of Birth</Title>\n\t\t\t\t\t\t<Content>{formatDate(dateOfBirth)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Street Name</Title>\n\t\t\t\t\t\t<Content>{streetName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>SkillSet</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderSkill}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Professional</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Functional Area</Title>\n\t\t\t\t\t\t<Content>{functionalArea}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Current Salary</Title>\n\t\t\t\t\t\t<Content>{currentSalary}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Expected Salary</Title>\n\t\t\t\t\t\t<Content>{expected}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t\t{renderExperience}\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Education</CategoryMainTitle>\n\t\t\t\t{renderEducation}\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default CandidateInfo\n\n\n","import React from 'react'\nimport { Card, Category, CategoryGrid, CategoryMainTitle, Content, DataContainer, RemoveSpaces, Title } from '../../../styles'\nimport styled from 'styled-components'\nimport { get } from 'lodash'\nimport { formatDate } from '../../../utils/helperFunctions'\nimport { v4 as uuid } from 'uuid'\nimport { EmailRounded } from '@material-ui/icons'\n\nfunction CandidateInfo({ data }) {\n        const {\n          candidateName,\n          contactNo,\n          email,\n          DOB,\n          postalAddress,\n          resumeTitle,\n          resumeID,\n          workExp,\n          annualSalary,\n          currentLocation,\n          preferredLocation,\n          currentEmployer,\n          designation,\n          PGCourse,\n          UGCourse,\n          postPGCourse,\n\t  lastActiveDate,\n\t  commentOne,\n\t  commentTwo,\n\t  commentThree,\n\t  commentFour,\n\t  commentFive\n\t} = data || {};\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Personal</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Name</Title>\n\t\t\t\t\t\t<Content>{candidateName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Contact Number</Title>\n\t\t\t\t\t\t<Content>{contactNo}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Email</Title>\n\t\t\t\t\t\t<Content><a href={`mailto:${email}`} target=\"_blank\">{email}</a></Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Date Of Birth</Title>\n\t\t\t\t\t\t<Content>{DOB}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Postal Address</Title>\n\t\t\t\t\t\t<Content>{postalAddress}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Professional</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Resume Title</Title>\n\t\t\t\t\t\t<Content>{resumeTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Resume ID</Title>\n\t\t\t\t\t\t<Content>{resumeID}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Work Experience</Title>\n\t\t\t\t\t\t<Content>{workExp}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Annual Salary</Title>\n\t\t\t\t\t\t<Content>{annualSalary}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Current Location</Title>\n\t\t\t\t\t\t<Content>{currentLocation}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Preferred Location</Title>\n\t\t\t\t\t\t<Content>{preferredLocation}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Current Employer</Title>\n\t\t\t\t\t\t<Content>{currentEmployer}</Content>\n\t\t\t\t\t</DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Designation</Title>\n\t\t\t\t\t\t<Content>{designation}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t\t{}\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Education</CategoryMainTitle>\n                                <CategoryGrid>\n                                        <DataContainer>\n                                                <Title>U.G. Course</Title>\n                                                <Content>{UGCourse}</Content>\n                                        </DataContainer>\n                                        <DataContainer>\n                                                <Title>P.G. Course</Title>\n                                                <Content>{PGCourse}</Content>\n                                        </DataContainer>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Post P.G. Course</Title>\n\t\t\t\t\t\t<Content>{postPGCourse}</Content>\n\t\t\t\t\t</DataContainer>\n                                </CategoryGrid>\n\t\t\t</Category>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>General</CategoryMainTitle>\n                                <CategoryGrid>\n                                        <DataContainer>\n\t\t\t\t\t\t<Title>Last Active Date</Title>\n\t\t\t\t\t\t<Content>{lastActiveDate}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Comment 1</Title>\n\t\t\t\t\t\t<Content>{commentOne}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Comment 2</Title>\n\t\t\t\t\t\t<Content>{commentTwo}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Comment 3</Title>\n\t\t\t\t\t\t<Content>{commentThree}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Comment 4</Title>\n\t\t\t\t\t\t<Content>{commentFour}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Comment 5</Title>\n\t\t\t\t\t\t<Content>{commentFive}</Content>\n\t\t\t\t\t</DataContainer>\n                                </CategoryGrid>\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default CandidateInfo\n\n\n","import { IconButton, Tooltip } from '@material-ui/core'\nimport { Delete, PlaylistAdd, Edit } from '@material-ui/icons'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcandidateTab,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport AppliedJobsTable from './components/AppliedJobsTable'\nimport CandidateInfo from './components/CandidateInfo'\nimport NewCandidateInfo from './components/NewCandidateInfo'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport {\n\tcounter,\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport Table from '../../components/Table'\nimport { stages } from '../../utils/sharedVariables'\n\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction CandidateDetails({ match }) {\n\tconst id = match.params.id\n\tconst history = useHistory()\n\tconst tabLabels = ['Pipeline', 'Applied Jobs', 'Candidate Details']\n\tconst tabIndex = useRecoilValue(candidateTab)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${candidateEndpoint}/${id}`, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Deleted')\n\t\t} catch (err) {\n\t\t\ttoast.error(`Error: ${err.message}`)\n\t\t}\n\t}\n\n\tconst [candidate, setCandidate] = useRecoilState(candidateAtom)\n\n\n\tuseEffect(() => {\n\t\taxios.get(`${candidateEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetCandidate(data)\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst navHandler = () => {\n\t\thistory.push(`/candidate/edit/${id}`)\n\t}\n\n\tconst assignHandler = () => {\n\t\tsetChecked({ [candidate._id]: true })\n\t\thistory.push('/job/apply')\n\t}\n\n\tconst headings = ['Job Code', 'Job Title', 'Openings', 'Status', 'Posted on']\n\tconst renderHeading = headings.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\tconst renderData = get(candidate, 'statusIds', []).map((status) => {\n\t\treturn (\n\t\t\t<TableRow key={status._id}>\n\t\t\t\t<TableData>{status.jobId.jobDetails.jobCode}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t<TableData>{status.currentStage.stageName}</TableData>\n\t\t\t\t<TableData>{formatDate(status.jobId.createdAt)}</TableData>\n\t\t\t</TableRow>\n\t\t)\n\t})\n\n\tconst stageDataCount = counter(\n\t\tget(candidate, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t// <>\n\t\t\t\t\t// \t{renderWithLoader(\n\t\t\t\t\t// \t\tcandidate,\n\t\t\t\t\t// \t\t<Table headings={renderHeading}>{renderData}</Table>\n\t\t\t\t\t// \t)}\n\t\t\t\t\t// </>\n\t\t\t\t\t<AppliedJobsTable match={match} data={candidate} />\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\treturn <NewCandidateInfo data={candidate} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={candidate ? candidate.candidateName : 'Loading...'}>\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t\t\t\t<Tooltip title='Delete'>\n\t\t\t\t\t\t<IconButton onClick={toggleModal}>\n\t\t\t\t\t\t<Delete />\n\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<Tooltip title='Assign to jobs'>\n\t\t\t\t\t\t<IconButton onClick={assignHandler}>\n\t\t\t\t\t\t\t<PlaylistAdd />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<Tooltip title='Edit Candidate'>\n\t\t\t\t\t\t<IconButton>\n\t\t\t\t\t\t\t<Edit />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</Tooltip>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={1}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={candidateTab} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateDetails\n","import React from 'react'\nimport JobPage from './JobPage'\nimport styled from 'styled-components'\nfunction ApplyJobList() {\n\treturn (\n\t\t<ApplyJobListContainer>\n\t\t\t<JobPage toApply />\n\t\t</ApplyJobListContainer>\n\t)\n}\n\nexport default ApplyJobList\n\nconst ApplyJobListContainer = styled.div`\n\twidth: 100%;\n\t\n`\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../recoil/atoms'\nimport {\n\tCard,\n\tCategoryMainTitle,\n\tCategory,\n\tCategoryGrid,\n\tDataContainer,\n\tTitle,\n\tContent,\n} from '../../styles'\nimport { formatDate } from '../../utils/helperFunctions'\n\nfunction ProfilePage() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { firstName, lastName, userName, email, contact, roleId, createdAt } =\n\t\tcurrentUser || {}\n\tconst { name } = roleId || {}\n\n\treturn (\n\t\t<>\n\t\t\t<Card>\n\t\t\t\t<Category>\n\t\t\t\t\t<CategoryMainTitle>Profile</CategoryMainTitle>\n\t\t\t\t\t<CategoryGrid>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>First Name</Title>\n\t\t\t\t\t\t\t<Content>{firstName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Last Name</Title>\n\t\t\t\t\t\t\t<Content>{lastName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Username</Title>\n\t\t\t\t\t\t\t<Content>{userName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Email</Title>\n\t\t\t\t\t\t\t<Content>{email}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Contact</Title>\n\t\t\t\t\t\t\t<Content>{contact}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Role</Title>\n\t\t\t\t\t\t\t<Content>{name}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Created At</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(createdAt)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t</Category>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n\nexport default ProfilePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n\tModalBody,\n\tModalTitle,\n\tModalWarning,\n\tModalText,\n\tModalButtonContainer,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport { IconButton } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport {\n\tcompanyAtom,\n\tcompanyCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport axios from 'axios'\nimport { companiesEndpoint } from '../../api'\nimport { v4 as uuid } from 'uuid'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport { selectedCompanies } from '../../recoil/selectors'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { SMUIButton, SMUIIconButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\n\nfunction CompanyPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\tconst [checked, setChecked] = useRecoilState(companyCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst selectedCompany = useRecoilValue(selectedCompanies)\n\n\tuseEffect(() => {\n\t\taxios.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\t\n\tconst companyHeading = [\n\t\t'Select',\n\t\t'Company Name',\n\t\t'Company Address',\n\t\t'Jobs Assigned',\n\t\t'Created On',\n\t]\n\n\tconst renderCompanyHeading = companyHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteManyHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(companiesEndpoint, selectedCompany, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Companies deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.success('Something went wrong')\n\t\t}\n\t}\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst renderCompanyData =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName, companyAddress, jobIds, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{companyName}</TableData>\n\t\t\t\t\t<TableData>{companyAddress}</TableData>\n\t\t\t\t\t<TableData>{jobIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Company'>\n\t\t\t\t{selectedCompany.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<SMUIModal open={isModalOpen} onClose={toggleModal}>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<ModalTitle>{selectedCompany.length} Items Selected</ModalTitle>\n\t\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t\t<SMUIButton onClick={toggleModal}>Cancel</SMUIButton>\n\t\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\t\tonClick={deleteManyHandler}\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</SMUIButton>\n\t\t\t\t\t</ModalButtonContainer>\n\t\t\t\t</ModalBody>\n\t\t\t</SMUIModal>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tcompanies,\n\t\t\t\t\t<Table headings={renderCompanyHeading}>{renderCompanyData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyPage\n","import styled from 'styled-components'\nimport { Button, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tContentContainer,\n\tRemoveSpaces,\n\tControlButton,\n} from '../../../styles'\nimport axios from 'axios'\nimport { companyEndpoint } from '../../../api'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from '../../../components/Toast'\n\nfunction CompanyInput() {\n\tconst history = useHistory()\n\tconst [companyName, setCompanyName] = useState('')\n\tconst [companyAddress, setCompanyAddress] = useState('')\n\n\tconst AddCompanyHandler = async () => {\n\t\tconst companyData = {\n\t\t\tcompanyName,\n\t\t\tcompanyAddress,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(companyEndpoint, companyData, { withCredentials: true })\n\t\t\ttoast.success('Company Added')\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Company'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={AddCompanyHandler}\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tvariant='contained'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<Title>Company Details</Title>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={companyName}\n\t\t\t\t\t\tonChange={(e) => setCompanyName(e.target.value)}\n\t\t\t\t\t\tlabel='Company Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvalue={companyAddress}\n\t\t\t\t\t\tonChange={(e) => setCompanyAddress(e.target.value)}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tlabel='Company Address'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyInput\n\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nconst CompanyTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\tfont-size: 0.8em;\n\t}\n`\n","import React from 'react'\nimport CompanyInput from './components/CompanyInput'\nimport styled from 'styled-components'\nfunction AddCompany() {\n\treturn (\n\t\t<>\n\t\t\t<CompanyInput />\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n\nconst AddCompanyContainer = styled.div`\n\t/* height: 100vh; */\n`\n","import { SMUIButton, SMUITextField } from '../../../styles/StyledMaterialUI'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces, StyledTextField } from '../../../styles'\nimport { Button, TextField, CircularProgress } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport {\n\tcredentialAtom,\n\tcurrentUserAtom,\n\tisAuthAtom,\n\tloading\n} from '../../../recoil/atoms'\nimport { useHistory } from 'react-router-dom'\nimport { loginEndpoint } from '../../../api'\n\nimport axios from 'axios'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\nimport { toast } from '../../../components/Toast'\n\nfunction SigninForm() {\n\tconst history = useHistory()\n\n\tconst [user, setUser] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [isAuth, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst submitHandler = async (e) => {\n\t\te.preventDefault()\n\t\tconst cred = { user, password }\n\t\tconst data = encryptObj(cred)\n\t\ttry {\n\t\t\tsetIsLoading(true);\n\t\t\tconst resData = await axios.post(\n\t\t\t\tloginEndpoint,\n\t\t\t\t{ data },\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\tif (resData.data.userData) {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetIsAuth(true)\n\t\t\t\tsetCurrentUser(resData.data.userData)\n\t\t\t\thistory.push('/dashboard')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetIsLoading(false);\n\t\t\ttoast.error('Invalid Credentials')\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<SigninFormContainer onSubmit={submitHandler}>\n\t\t\t<SiginFormTitle>SOS Dashboard</SiginFormTitle>\n\t\t\t<SiginFormDesc>Welcome Back, Please enter your credentials</SiginFormDesc>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={user}\n\t\t\t\tonChange={(e) => setUser(e.target.value)}\n\t\t\t\tlabel='Email / Username'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='text'\n\t\t\t/>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\tlabel='Password'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='password'\n\t\t\t/>\n\t\t\t<SignInButton type='submit' variant='contained' color='primary'>\n\t\t\t\t{/* Sign In */}\n\t\t\t\t{\n\t\t\t\t\tisLoading ? <CircularProgress size={24} style={{color: 'white'}} /> : \"Sign In\"\n\t\t\t\t}\n\t\t\t</SignInButton>\n\t\t</SigninFormContainer>\n\t)\n}\n\nexport default SigninForm\n\nconst SiginFormTitle = styled.h1`\n\t${RemoveSpaces};\n\tpadding-bottom: 5px;\n`\n\nconst SiginFormDesc = styled.p`\n\t${RemoveSpaces};\n\tpadding-bottom: 30px;\n`\n\nconst SigninInput = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t}\n`\n\nconst SignInButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px 0px;\n\n\t\t/* padding: 15px; */\n\t}\n`\n\nconst SigninFormContainer = styled.form`\n\tdisplay: flex;\n\tflex: 1;\n\tpadding: 70px;\n\tflex-direction: column;\n\ttext-align: left;\n\tjustify-content: space-around;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport SigninForm from './components/SigninForm'\nimport AuthIcon from '../../assets/icons/auth.svg'\n\nfunction Signin() {\n\treturn (\n\t\t<SigninContainer>\n\t\t\t{/* Image */}\n\t\t\t<AuthImage src={AuthIcon} />\n\n\t\t\t{/* SiginForm */}\n\t\t\t<SigninForm />\n\t\t</SigninContainer>\n\t)\n}\n\nexport default Signin\n\nconst SigninContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: space-around;\n\theight: 100%;\n`\n\nconst AuthImage = styled.img`\n\twidth: 500px;\n\tflex: 1;\n\tpadding: 70px;\n`\n","import { Button } from '@material-ui/core'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\nimport axios from 'axios'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { logoutEndpoint } from '../api'\nimport { currentUserAtom, isAuthAtom } from '../recoil/atoms'\nimport { RemoveSpaces, themeBorder } from '../styles/index'\nimport { toast } from './Toast'\n\nfunction Navbar() {\n\tconst [anchorEl, setAnchorEl] = useState(null)\n\tconst [, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst history = useHistory()\n\tconst handleClick = (event) => setAnchorEl(event.currentTarget)\n\tconst handleClose = () => setAnchorEl(null)\n\n\tconst navHandler = () => {\n\t\thistory.push(`/profile`)\n\t\thandleClose()\n\t}\n\n\tconst logoutHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.post(logoutEndpoint, {}, { withCredentials: true })\n\t\t\tsetIsAuth(false)\n\t\t\thandleClose()\n\t\t\thistory.push(`/`)\n\t\t} catch (e) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<NavbarContainer>\n\t\t\t<Logo>\n\t\t\t\tSwitch <LogoHighlight>On Success</LogoHighlight>\n\t\t\t</Logo>\n\n\t\t\t<Button startIcon={<AccountCircleOutlinedIcon />} onClick={handleClick}>\n\t\t\t\t{currentUser && currentUser.firstName}\n\t\t\t</Button>\n\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}>\n\t\t\t\t<MenuItem onClick={navHandler}>Profile</MenuItem>\n\t\t\t\t<MenuItem onClick={logoutHandler}>Logout</MenuItem>\n\t\t\t</Menu>\n\t\t</NavbarContainer>\n\t)\n}\n\nexport default Navbar\n\nconst NavbarContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tposition: sticky;\n\tpadding: 10px 20px;\n\t${themeBorder}\n\tborder-radius: 0px;\n\tjustify-content: space-between;\n`\nconst Logo = styled.h4`\n\t${RemoveSpaces};\n\tcolor: blue;\n`\n\nconst LogoHighlight = styled.span`\n\tcolor: orange;\n`\n","import { Checkbox, TextField } from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { roleEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport { SMUITextField } from '../../../styles/StyledMaterialUI'\n\nimport { toast } from '../../../components/Toast'\nimport { useHistory } from 'react-router-dom'\n\nfunction RoleInput() {\n\tconst history = useHistory()\n\n\tconst [name, setName] = useState('')\n\tconst [vendor, setVendor] = useState('')\n\n\tconst defaultPermissions = {\n\t\tjob: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tcandidate: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tuser: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\trole: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t}\n\n\tconst [permissions, setPermissions] = useState(defaultPermissions)\n\n\tuseEffect(() => {}, [])\n\n\tconst resetHandler = () => {}\n\n\tconst submitHandler = async () => {\n\t\tconsole.log({ permissions })\n\t\tconst roleData = {\n\t\t\tname,\n\t\t\tvendor,\n\t\t\tpermissions,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(roleEndpoint, roleData, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New Role Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst checkHandler = (e, role, type) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp[type] = checked\n\t\tif (\n\t\t\t!(\n\t\t\t\ttype === 'read' &&\n\t\t\t\t(permissionsTemp['delete'] || permissionsTemp['update'])\n\t\t\t)\n\t\t) {\n\t\t\tif ((type === 'delete' && checked) || (type === 'update' && checked)) {\n\t\t\t\tpermissionsTemp['read'] = checked\n\t\t\t}\n\t\t\tsetPermissions({\n\t\t\t\t...permissions,\n\t\t\t\t[role]: permissionsTemp,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst selectAllHandler = (e, role) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp.read = checked\n\t\tpermissionsTemp.create = checked\n\t\tpermissionsTemp.update = checked\n\t\tpermissionsTemp.delete = checked\n\t\tsetPermissions({\n\t\t\t...permissions,\n\t\t\t[role]: permissionsTemp,\n\t\t})\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Role'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={submitHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Role Details</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={vendor}\n\t\t\t\t\t\tonChange={(e) => setVendor(e.target.value)}\n\t\t\t\t\t\tlabel='Vendor'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Permissions</CardTitle>\n\t\t\t\t\t<PermissionTable>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'job')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Jobs</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'candidate')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Candidates</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'role')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Roles</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'user')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>User</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</PermissionTable>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RoleInput\n\nconst RoleTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 5px 0px;\n\t}\n`\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 10px 0px;\n`\n\nconst PermissionTable = styled.table`\n\twidth: 100%;\n\ttext-align: left;\n\tborder-collapse: collapse;\n`\nconst PermissionTableRow = styled.tr`\n\tdisplay: flex;\n`\n\nconst PermissionTableData = styled.td`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst PermissionTableHead = styled.th`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst Content = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 10px;\n`\n","import React from 'react'\nimport Controls from '../../components/Controls'\nimport RoleInput from './components/RoleInput'\n\nfunction AddRole() {\n    return (\n        <div>\n          <RoleInput/>\n        </div>\n    )\n}\n\nexport default AddRole\n","import {\n\tInputLabel,\n\tMenuItem\n} from '@material-ui/core'\nimport axios from 'axios'\nimport passwordGenerator from 'generate-password'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport { rolesEndpoint, userEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { toast } from '../../../components/Toast'\nimport { roleAtom } from '../../../recoil/atoms'\nimport {\n\tCard, ContentContainer, ControlButton,\n\n\n\n\tRemoveSpaces, StyledCheckbox\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField\n} from '../../../styles/StyledMaterialUI'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\n//------------\n\nfunction UserInput() {\n\tconst history = useHistory()\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [roleId, setRoleId] = useState('')\n\n\tconst [firstName, setFirstName] = useState('')\n\tconst [lastName, setLastName] = useState('')\n\tconst [userName, setUserName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [contact, setContact] = useState('')\n\tconst [isAutoGenerated, setIsAutoGenerated] = useState('')\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst saveUserHandler = async () => {\n\t\tconst userData = {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tuserName,\n\t\t\tpassword,\n\t\t\temail,\n\t\t\tcontact,\n\t\t\troleId,\n\t\t}\n\t\tconst data = encryptObj(userData)\n\n\t\ttry {\n\t\t\tawait axios.post(userEndpoint, { data }, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New User Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('New User Added')\n\t\t}\n\t}\n\n\tconst autoGeneratePassword = (e) => {\n\t\tconst checked = e.target.checked\n\n\t\tsetIsAutoGenerated(checked)\n\t\tif (checked) {\n\t\t\tconst password = passwordGenerator.generate({\n\t\t\t\tlength: 14,\n\t\t\t\tnumbers: true,\n\t\t\t\tsymbols: true,\n\t\t\t\texcludeSimilarCharacters: true,\n\t\t\t})\n\t\t\tsetPassword(password)\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add User'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={saveUserHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='role'>Role</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Role'\n\t\t\t\t\t\t\tvalue={roleId}\n\t\t\t\t\t\t\tonChange={(e) => setRoleId(e.target.value)}>\n\t\t\t\t\t\t\t{roles &&\n\t\t\t\t\t\t\t\troles.map((role) => {\n\t\t\t\t\t\t\t\t\treturn <MenuItem key={role._id} value={role._id}>{role.name}</MenuItem>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tdisabled={isAutoGenerated}\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t/>\n\t\t\t\t\t<AutoGeneratorPassContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isAutoGenerated}\n\t\t\t\t\t\t\tonChange={autoGeneratePassword}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AutoGeneratorLabel>Auto Generated</AutoGeneratorLabel>\n\t\t\t\t\t</AutoGeneratorPassContainer>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\n\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\n\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={contact}\n\t\t\t\t\t\tonChange={(e) => setContact(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Contact No.'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserInput\n\nconst AutoGeneratorPassContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\n\nconst AutoGeneratorLabel = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React from 'react'\nimport UserInput from './components/UserInput'\n\nfunction AddUser() {\n    return (\n        <>\n            <UserInput/>\n        </>\n    )\n}\n\nexport default AddUser\n","import React, {useState, useEffect} from 'react'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport JobInput from './components/JobInput'\nimport NewJobInput from './components/NewJobInput'\n\nfunction EditJob(props) {\n\treturn (\n\t\t<>\n\t\t\t{/* <JobInput edit {...props} /> */}\n\t\t\t<NewJobInput edit={true} {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditJob\n","import { MenuItem } from '@material-ui/core'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Timeline, TimelineEvent } from 'react-event-timeline'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint, statusEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tappliedCandidateTabAtom,\n\tcandidateAtom,\n\tcurrentUserAtom,\n\tstatusAtom,\n} from '../../recoil/atoms'\n\nimport { Card, ContentContainer, ControlButton } from '../../styles'\nimport { SMUISelect } from '../../styles/StyledMaterialUI'\nimport { formatDate } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport CandidateInfo from './components/CandidateInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction AppliedCandidate({ match }) {\n\tconst { id } = match.params\n\n\tconst history = useHistory()\n\tconst tabIndex = useRecoilValue(appliedCandidateTabAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [status, setStatus] = useRecoilState(statusAtom)\n\tconst [selectedStage, setSelectedStage] = useState(newStageGenerator()[0])\n\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState()\n\tconst { candidateId } = status || {}\n\tconst singleCandidate = () =>\n\t\tcandidates\n\t\t\t? candidates.find((candidate) => candidate._id.toString() === candidateId)\n\t\t\t: candidate\n\n\t//new stage --> stages\n\t//Current stage -> new stage\n\n\tuseEffect(() => {\n\t\taxios.get(`${statusEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setStatus(data))\n\t\t\t.catch((e) => console.log(e))\n\n\t\taxios.get(`${candidateEndpoint}/${candidateId}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t\t// setSelectedStage(get(status, 'currentStage.stageName', ''))\n\t}, [candidateId])\n\n\tconst changeStageHangler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(\n\t\t\t\t`${statusEndpoint}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tstageName: selectedStage,\n\t\t\t\t\tuserId: currentUser._id,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Stage Change')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst tabLabels = ['Timeline', 'Candidate Details']\n\n\tconst renderTimelineData = get(status, 'stages', []).map(\n\t\t({ stageName, createdAt, userId }) => {\n\t\t\treturn (\n\t\t\t\t<TimelineEvent\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\ttitle={`${stageName} set by ${userId.firstName} ${userId.lastName}`}\n\t\t\t\t\tcreatedAt={formatDate(createdAt)}></TimelineEvent>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Timeline>{renderTimelineData}</Timeline>\n\t\t\t\t\t</Card>\n\t\t\t\t)\n\t\t\tcase 1:\n\t\t\t\treturn <CandidateInfo data={singleCandidate()} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\t// const renderStageOption =\n\t// \tstatus &&\n\t// \tstages\n\t// \t\t.filter((stage) => stage !== status.currentStage.stageName)\n\t// \t\t.map((stage) => {\n\t// \t\t\treturn <MenuItem value={stage}>{stage}</MenuItem>\n\t// \t\t})\n\n\tfunction newStageGenerator() {\n\t\tconst currentStatus = status && status.currentStage.stageName\n\t\tconst index = stages.indexOf(currentStatus)\n\t\tconst newStages = stages.slice(index + 1)\n\t\treturn newStages\n\t}\n\n\tconst renderStageOption = newStageGenerator().map((stage) => {\n\t\treturn <MenuItem key={uuid()} value={stage}>{stage}</MenuItem>\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate'>\n\t\t\t\t<SMUISelect\n\t\t\t\t\tvalue={selectedStage}\n\t\t\t\t\tonChange={(e) => setSelectedStage(e.target.value)}>\n\t\t\t\t\t{renderStageOption}\n\t\t\t\t</SMUISelect>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={changeStageHangler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSet\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={appliedCandidateTabAtom} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default AppliedCandidate\n","import React from 'react'\nimport CandidateInput from './components/CandidateInput'\n\nfunction EditCandidate(props) {\n\treturn (\n\t\t<>\n\t\t\t<CandidateInput edit {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditCandidate\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Sidebar from './components/Sidebar'\nimport { HashRouter, Switch, Route, useHistory } from 'react-router-dom'\nimport DashboardPage from './pages/Dashboard'\nimport JobPage from './pages/Job/JobPage'\nimport CandidatePage from './pages/Candidate'\nimport RolePage from './pages/Role'\nimport UserPage from './pages/User'\nimport AddJob from './pages/Job/AddJob'\nimport JobDetails from './pages/Job/JobDetails'\nimport AddCandidate from './pages/Candidate/AddCandidate'\n// import CandidateDetails from './pages/Candidate/CandidateDetails'\nimport CandidateDetails from './pages/Candidate/NewCandidateDetails'\nimport ApplyJobList from './pages/Job/ApplyJobList'\nimport ProfilePage from './pages/Profile'\nimport CompanyPage from './pages/Company'\nimport AddCompany from './pages/Company/AddCompany'\nimport Signin from './pages/Signin'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { credentialAtom, currentUserAtom, isAuthAtom } from './recoil/atoms'\nimport Navbar from './components/Navbar'\nimport AddRole from './pages/Role/AddRole'\nimport AddUser from './pages/User/AddUser'\nimport EditJob from './pages/Job/EditJob'\nimport axios from 'axios'\nimport { verifyEndpoint } from './api'\nimport AppliedCandidate from './pages/Candidate/AppliedCandidate'\nimport EditCandidate from './pages/Candidate/EditCandidate'\nimport Loader from './components/Loader'\n\nfunction App() {\n\tconst [isAuth, setAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n\n\t// CurrentUser Null --> skeleton\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.post(verifyEndpoint, {}, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetAuth(true)\n\t\t\t\tsetCurrentUser(data.userData)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tsetAuth(false)\n\t\t\t\tsetCurrentUser({})\n\t\t\t})\n\t}, [])\n\n\tconst routes = (\n\t\t<Switch>\n\t\t\t<Route path='/dashboard' exact component={DashboardPage} />\n\t\t\t<Route path='/job/add' component={AddJob} />\n\t\t\t<Route path='/job/apply' component={ApplyJobList} />\n\t\t\t<Route path='/job/edit/:id' component={EditJob} />\n\t\t\t<Route path='/job/:id' component={JobDetails} />\n\t\t\t<Route path='/job' component={JobPage} />\n\n\t\t\t<Route path='/candidate/add' component={AddCandidate} />\n\t\t\t<Route path='/candidate/edit/:id' component={EditCandidate} />\n\n\t\t\t<Route path='/candidate/:id' component={CandidateDetails} />\n\t\t\t<Route path='/candidate' component={CandidatePage} />\n\n\t\t\t<Route path='/company/add' component={AddCompany} />\n\t\t\t<Route path='/company' component={CompanyPage} />\n\n\t\t\t<Route path='/role/add' component={AddRole} />\n\t\t\t<Route path='/role' component={RolePage} />\n\n\t\t\t<Route path='/user/add' component={AddUser} />\n\t\t\t<Route path='/user' component={UserPage} />\n\n\t\t\t<Route path='/profile' component={ProfilePage} />\n\t\t\t<Route path='/applied/:id' component={AppliedCandidate} />\n\t\t</Switch>\n\t)\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t{currentUser ? (\n\t\t\t\t<HashRouter>\n\t\t\t\t\t{isAuth ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t\t<ComponentContainer>{routes}</ComponentContainer>\n\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Route path='/' exact component={Signin} />\n\t\t\t\t\t)}\n\t\t\t\t</HashRouter>\n\t\t\t) : (\n\t\t\t\t<Loader />\n\t\t\t)}\n\t\t</AppContainer>\n\t)\n}\n\nexport default App\n\nconst AppContainer = styled.div`\n\ttext-align: center;\n\theight: 100%;\n`\nconst Layout = styled.div`\n\tdisplay: flex;\n\theight: 90%;\n\twidth: 100%;\n`\n\nconst ComponentContainer = styled.div`\n\tflex: 1;\n\tbackground-color: #0000000d;\n\t/* height: 100%; */\n\toverflow-y: auto;\n\tscroll-behavior: smooth;\n\t/* padding: 10px; */\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { RecoilRoot } from 'recoil'\n\n\n\nReactDOM.render(\n\t\t<RecoilRoot>\n\t\t\t<App />\n\t\t</RecoilRoot>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}