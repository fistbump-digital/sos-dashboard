{"version":3,"sources":["assets/icons/add.svg","assets/icons/candidate.svg","assets/icons/company.svg","assets/icons/dashboard.svg","assets/icons/job.svg","assets/icons/role.svg","assets/icons/user.svg","assets/icons/dual-ball-loader.svg","assets/icons/search.svg","assets/icons/auth.svg","assets/icons/arrow.svg","components/Loader.js","styles/index.js","components/Table/index.js","components/TableSkeletonLoader.js","utils/helperFunctions.js","recoil/atoms.js","components/Sidebar.js","components/PieChart.js","api/index.js","components/Toast.js","components/ChartSkeleton.js","pages/Dashboard/index.js","components/Search.js","components/Controls.js","styles/StyledMaterialUI.js","components/Modals/DeleteModal.js","recoil/selectors.js","pages/Job/JobPage.js","components/SearchBar.js","pages/Candidate/index.js","pages/Role/index.js","pages/User/index.js","pages/Job/components/JobInput.js","pages/Job/AddJob.js","components/PageTab.js","utils/sharedVariables.js","pages/Job/components/JobInfo.js","pages/Job/JobDetails.js","pages/Candidate/components/CandidateInput.js","pages/Candidate/AddCandidate.js","pages/Candidate/components/CandidateInfo.js","pages/Candidate/CandidateDetails.js","pages/Job/ApplyJobList.js","pages/Profile/index.js","pages/Company/index.js","pages/Company/components/CompanyInput.js","pages/Company/AddCompany.js","pages/Signin/components/SigninForm.js","pages/Signin/index.js","components/Navbar.js","pages/Role/components/RoleInput.js","pages/Role/AddRole.js","pages/User/components/UserInput.js","pages/User/AddUser.js","pages/Job/EditJob.js","pages/Candidate/AppliedCandidate.js","pages/Candidate/EditCandidate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","LoaderContainer","LoaderIconContainer","src","LoaderIcon","styled","div","img","RemoveSpaces","css","themeBorder","MultipleItemInputContainer","form","Card","CardTitle","h5","StyledNavlink","NavLink","TableRow","tr","TableData","td","TableHead","th","ItemListContainer","h3","label","TextField","ul","ItemList","li","ContentContainer","p","ControlButton","Button","StyledCheckbox","input","ModalBody","ModalTitle","h4","ModalWarning","ModalText","ModalButtonContainer","PipelineContainer","PipelineCard","PipelineTitle","PipelineStat","Category","CategoryGrid","DataContainer","CategoryMainTitle","h1","Title","Content","Table","headings","children","TableContainer","TableHeadContainer","TableHeadingRow","TableBody","table","tbody","thead","TableSkeletonLoader","renderTableHeading","renderTableBody","limit","i","push","key","uuid","loopHead","loopBody","codeGenerator","field1","field2","field3","abbreviator","str","strArr","split","length","substring","toUpperCase","code","charCode","codeDigit","charCodeAt","compressedFields","join","charCodeLeft","charCodeRight","addValToArr","e","val","data","setData","preventDefault","includes","tempData","renderArr","map","item","onClick","dataTemp","filter","removeValFromArr","trueKeysToArr","obj","Object","keys","id","titleGenerator","arr","title","count","renderWithLoader","component","encryptObj","objStr","JSON","stringify","cryptojs","AES","encrypt","process","toString","formatDate","date","dateArr","Date","toDateString","shift","counter","countObj","pickerDateFormat","dateStr","toISOString","jobAtom","atom","default","candidateAtom","companyAtom","roleAtom","userAtom","statsAtom","jobCheckedAtom","candidateCheckedAtom","companyCheckedAtom","roleCheckedAtom","userCheckedAtom","jobTab","candidateTab","appliedCandidateTabAtom","isAuthAtom","email","password","currentUserAtom","statusAtom","Sidebar","permissions","useRecoilValue","roleId","activeLinkStyle","color","backgroundColor","fontWeight","boxShadow","SidebarContainer","MenuItem","uniqueID","activeStyle","to","NavIcon","DashboardIcon","get","JobIcon","CandidateIcon","CompanyIcon","RoleIcon","UserIcon","PieChart","labels","chartData","datasets","ChartContainer","API_URI","deleteJobs","getCandidates","applyJob","jobEndpoint","jobsEndpoint","candidateEndpoint","candidatesEndpoint","companyEndpoint","companiesEndpoint","roleEndpoint","rolesEndpoint","userEndpoint","usersEndpoint","loginEndpoint","logoutEndpoint","verifyEndpoint","statusEndpoint","statsEndpoint","toast","configure","position","POSITION","BOTTOM_RIGHT","autoClose","pauseOnFocusLoss","toastId","draggablePercent","ChartSkeleton","ChartCard","TitleContainer","width","circle","height","DashboardPage","useRecoilState","stats","setStats","useEffect","axios","withCredentials","then","catch","error","console","log","PieContainer","job","assigned","unassigned","ChartTitle","total","candidate","applied","unapplied","Search","onChange","SearchDiv","InputBase","placeholder","inputProps","Controls","onSearchChange","search","ControlContainer","ControlTitle","ControlSearch","ControlButtonContainer","SMUIButton","SMUITextField","SMUISelect","Select","SMUIFormControl","FormControl","SMUIIconButton","IconButton","SMUIModal","Modal","DeleteModal","open","onClose","deleteHandler","variant","filterTrueJobChecked","selector","checkedJob","filterTrueCandidateChecked","checkedCandidate","selectedCompanies","companyChecked","selectedRoles","roleChecked","selectedUsers","userChecked","JobPage","toApply","history","useHistory","location","useLocation","pathname","jobData","setJobData","checked","setChecked","setCandidateChecked","ids","candidateSelectedIds","currentUser","useState","isModalOpen","setIsModalOpen","filterData","setFilterData","toggleModal","jobHeading","type","a","patch","success","candidateApplyHandler","post","candidates","jobs","userId","_id","goBack","renderJobHeading","heading","renderJobData","style","newData","onCheckHandler","jobDetails","jobCode","jobOpeningInfo","jobTitle","companyDetails","companyId","companyName","jobAddress","city","noOfOpenings","statusIds","createdAt","inputVal","target","value","toLowerCase","Delete","AddCircle","CandidatePage","candidateData","setCandidateData","selected","renderCandidateHeading","renderCandidateData","candidateCode","basic","fullName","primaryEmail","mobile","address","state","professional","industry","functionalArea","toPage","link","RolePage","roles","setRoles","renderHeading","renderRoleData","name","vendor","users","checkHandler","UserPage","setUsers","renderUserHeading","showUsers","user","renderUserData","firstName","lastName","userName","contact","JobInput","edit","match","jobId","companies","setCompanies","find","setJob","setJobTitle","jobType","setJobType","setIndustry","noOfOpening","setNoOfOpening","setCompanyId","isCompanyDetailsVisible","setIsCompanyDetailsVisible","jobLocation","setJobLocation","setCity","zone","setZone","setState","pincode","setPincode","country","setCountry","jobDescription","setJobDescription","eligibility","setEligibility","eligibilityVal","setEligibilityVal","responsibilities","setResponsibilities","responsibilitiesVal","setResponsibilitiesVal","benefits","setBenefits","benefitsVal","setBenefitsVal","additionalInformation","setAdditionalInformation","targetDate","setTargetDate","saveHandler","isEdit","newJobData","assignedOn","Number","source","renderCompaniesOption","JobInputContainer","InputLabel","labelId","CheckBoxContainer","CheckBoxLabel","onSubmit","multiline","rows","rowsMax","defaultValue","AddJob","PageTab","setValue","renderLabels","Tab","TabBG","Tabs","_event","newValue","indicatorColor","textColor","stages","JobInfo","companyAddress","renderList","JobDetails","params","jobTabIndex","jobFullData","selectedJob","stageDataCount","statusId","currentStage","stageName","renderPipeline","stage","candidateId","delete","index","renderTabBody","CandidateInput","setCandidate","_fullName","_primaryEmail","_secondaryEmail","secondaryEmail","_mobile","_pan","pan","_dateOfBirth","dateOfBirth","_country","_pincode","_state","_streetName","streetName","_currentSalary","currentSalary","_education","education","_expected","expected","_experience","experience","_functionalArea","_industry","_skillSet","skillSet","setFullName","setPrimaryEmail","setSecondaryEmail","setMobile","setPan","setDateOfBirth","setStreetName","setExperience","setEducation","setSkillSet","skillSetVal","setSkillSetVal","setCurrentSalary","setExpected","setFunctionalArea","company","setCompany","summary","setSummary","fromDate","setFromDate","tillDate","setTillDate","qualificationName","setQualificationName","instituteName","setInstituteName","studiedFromDate","setStudiedFromDate","studiedTillDate","setStudiedTillDate","status","tempExp","tempEdu","AddCandidate","CandidateInfo","renderExperience","renderSkill","skill","renderEducation","CandidateDetails","tabIndex","singleCandidate","renderData","ApplyJobList","ApplyJobListContainer","ProfilePage","CompanyPage","selectedCompany","renderCompanyHeading","deleteManyHandler","renderCompanyData","jobIds","CompanyInput","setCompanyName","setCompanyAddress","AddCompanyHandler","companyData","CompanyTextField","AddCompany","SigninForm","setUser","setPassword","setIsAuth","setCurrentUser","isLoading","setIsLoading","submitHandler","resData","userData","SigninFormContainer","SiginFormTitle","SiginFormDesc","SigninInput","required","SignInButton","CircularProgress","size","Signin","SigninContainer","AuthImage","AuthIcon","Navbar","anchorEl","setAnchorEl","handleClose","logoutHandler","NavbarContainer","Logo","LogoHighlight","startIcon","event","currentTarget","Menu","keepMounted","Boolean","span","RoleInput","setName","setVendor","create","update","read","role","setPermissions","roleData","permissionsTemp","selectAllHandler","PermissionTable","PermissionTableRow","PermissionTableHead","PermissionTableData","AddRole","UserInput","setRoleId","setFirstName","setLastName","setUserName","setEmail","setContact","isAutoGenerated","setIsAutoGenerated","saveUserHandler","disabled","AutoGeneratorPassContainer","passwordGenerator","generate","numbers","symbols","excludeSimilarCharacters","AutoGeneratorLabel","AddUser","EditJob","props","AppliedCandidate","setStatus","newStageGenerator","selectedStage","setSelectedStage","changeStageHangler","renderTimelineData","currentStatus","indexOf","slice","renderStageOption","EditCandidate","App","isAuth","setAuth","routes","path","exact","AppContainer","Layout","ComponentContainer","isLocalhost","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.ac04744b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.15cf12ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.5138f324.svg\";","module.exports = __webpack_public_path__ + \"static/media/company.5c37dd19.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.3949fa5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.df887e14.svg\";","module.exports = __webpack_public_path__ + \"static/media/role.9f9a7329.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.a0b238c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/dual-ball-loader.d6d67d34.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.19142cc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/auth.910669c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.dc486541.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport LoaderIcon from '../assets/icons/dual-ball-loader.svg'\n\nfunction Loader() {\n\treturn (\n\t\t<LoaderContainer>\n\t\t\t<LoaderIconContainer src={LoaderIcon} />\n\t\t</LoaderContainer>\n\t)\n}\n\nexport default Loader\n\nconst LoaderContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n`\n\nconst LoaderIconContainer = styled.img`\n\twidth: 100px;\n`\n","import styled, { css } from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport {\n\tButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tTextField,\n} from '@material-ui/core'\n\nexport const RemoveSpaces = css`\n\tmargin: 0px;\n\tpadding: 0px;\n`\n\nexport const themeBorder = css`\n\tborder: 1px solid #0000003b;\n\tborder-radius: 6px;\n`\n\nexport const MultipleItemInputContainer = styled.form`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n`\n\nexport const Card = styled.div`\n\tpadding: 10px 20px;\n\t/* border-radius: 3px; */\n\t/* border: 1px solid #0000003b; */\n\tbackground-color: white;\n\tmargin-bottom: 10px;\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nexport const CardTitle = styled.h5`\n\ttext-align: left;\n\tcolor: #333;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nexport const StyledNavlink = styled(NavLink)`\n\twidth: 150px;\n\tpadding: 6px 10px;\n\tborder-radius: 0.25rem;\n\tdisplay: flex;\n\talign-items: center;\n\tcolor: black;\n\ttext-decoration: none;\n\tfont-weight: 400;\n\t&:focus {\n\t\tcolor: black;\n\t}\n\t&:hover {\n\t\tcolor: black;\n\t}\n`\n\nexport const TableRow = styled.tr`\n\t/* cursor: pointer; */\n\ttransition: all 0.5s;\n\t&:hover {\n\t\tbackground-color: #eef0f7;\n\t}\n`\n\nexport const TableData = styled.td`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n`\n\nexport const TableHead = styled.th`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n\tcolor: #000000c2;\n`\nexport const PageLayout = styled.div`\n\t/* width: 100%; */\n\tpadding: 10px;\n`\n\nexport const InputContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\talign-items: flex-start;\n`\n\nexport const CategoryContainer = styled.div``\n\nexport const CategoryTitle = styled.h3`\n\t${RemoveSpaces};\n`\n\nexport const Label = styled.label``\n\nexport const StyledTextField = styled(TextField)`\n\twidth: 100%;\n\tmargin: 10px;\n`\n\nexport const ItemListContainer = styled.ul`\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n\tdisplay: flex;\n\tpadding: 10px;\n\tborder: 1px dashed #0000003b;\n\tbackground-color: #0000000d;\n\tborder-radius: 6px;\n\tmargin: 20px 0px;\n\tflex-flow: wrap;\n`\n\nexport const ItemList = styled.li`\n\tmargin: 5px;\n\tpadding: 5px 10px;\n\tborder-radius: 6px;\n\tbackground-color: white;\n\tborder: 1px solid #0000003b;\n`\nexport const DataTitle = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n`\n\nexport const DataContent = styled.p`\n\t${RemoveSpaces};\n\ttext-align: left;\n`\n\nexport const ContentContainer = styled.div`\n\tpadding: 10px;\n`\n\nexport const IconButton = styled.img`\n\twidth: 28px;\n\tcursor: pointer;\n`\n\nexport const ControlButton = styled(Button)`\n\t&& {\n\t\tmargin: 5px;\n\t\tpadding: 2px 10px;\n\t}\n`\n\nexport const StyledCheckbox = styled.input`\n\twidth: 18px;\n\theight: 18px;\n`\n\n// Modal\n\nexport const ModalBody = styled.div`\n\tbackground-color: white;\n\tmargin-top: 50px;\n\tpadding: 20px;\n\tborder-radius: 5px;\n`\nexport const ModalTitle = styled.h4`\n\t${RemoveSpaces};\n\tpadding-bottom: 10px;\n`\n\nexport const ModalWarning = styled.p`\n\t${RemoveSpaces}\n\tpadding: 10px;\n\tfont-weight: bold;\n\tborder: 2px solid red;\n\tborder-radius: 5px;\n\tborder-left: 10px solid red;\n`\n\nexport const ModalText = styled.p`\n\t${RemoveSpaces};\n\tpadding-top: 10px;\n`\n\nexport const ModalButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-top: 20px;\n`\n\n//Pipeline\nexport const PipelineContainer = styled(Card)`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\trow-gap: 1em;\n\tpadding: 50px;\n`\nexport const PipelineCard = styled.div`\n\tdisplay: flex;\n\tpadding: 20px;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: #4caf5029;\n\tmargin: 0px;\n\theight: 50px;\n\ttransition: all 0.3s;\n\tclip-path: polygon(90% 0, 100% 50%, 90% 100%, 0% 100%, 10% 50%, 0% 0%);\n\n\t&:hover {\n\t\tbackground-color: #ffc10726;\n\t\ttransform: translateX(10px);\n\t}\n`\nexport const PipelineTitle = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-weight: lighter;\n\tfont-size: 1.25em;\n`\n\nexport const PipelineStat = styled.p`\n\t${RemoveSpaces};\n\tpadding-right: 10px;\n\n\tfont-size: 2em;\n\tfont-weight: bold;\n\tcolor: #333;\n`\n\n//\nexport const Category = styled.div`\n\tpadding: 20px;\n`\n\nexport const CategoryGrid = styled.div`\n\tdisplay: grid;\n\tgap: 1em;\n\tgrid-template-columns: repeat(2, 1fr);\n\tpadding-bottom: 20px;\n`\n\nexport const DataContainer = styled.div`\n\ttext-align: left;\n`\nexport const CategoryMainTitle = styled.h1`\n\t${RemoveSpaces};\n\ttext-align: left;\n\tcolor: #333;\n\tfont-size: 1.5em;\n\tpadding-bottom: 15px;\n`\n\nexport const Title = styled.h3`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1em;\n`\n\nexport const Content = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1.2em;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { themeBorder } from '../../styles'\n\nfunction Table({ headings, children }) {\n\treturn (\n\t\t<TableContainer>\n\t\t\t<TableHeadContainer>\n\t\t\t\t<TableHeadingRow>{headings}</TableHeadingRow>\n\t\t\t</TableHeadContainer>\n\t\t\t<TableBody>{children}</TableBody>\n\t\t</TableContainer>\n\t)\n}\n\nexport default Table\n\nconst TableHeadingRow = styled.tr`\n\tbackground-color: #eef0f7;\n\tcolor: #eee;\n`\n\nconst TableContainer = styled.table`\n\tpadding: 5px;\n\tborder: 0;\n\twidth: 100%;\n\tbackground-color: white;\n\t/* box-shadow: 2px 3px 20px 0px #00000017; */\n\t/* border-collapse: collapse; */\n\toverflow: scroll;\n\t/* ${themeBorder}; */\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nconst TableBody = styled.tbody``\n\nconst TableHeadContainer = styled.thead``\n","import React from 'react'\nimport Table from './Table'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { TableData, TableHead, TableRow } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction TableSkeletonLoader() {\n\tlet renderTableHeading = []\n\tlet renderTableBody = []\n\n\tconst loopHead = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableHeading.push(\n\t\t\t\t<TableHead key={uuid()}>\n\t\t\t\t\t<Skeleton />\n\t\t\t\t</TableHead>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst loopBody = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableBody.push(\n\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t}\n\n\tloopHead(6)\n\tloopBody(6)\n\n\treturn <Table headings={renderTableHeading}>{renderTableBody}</Table>\n}\n\nexport default TableSkeletonLoader\n","import React from 'react'\nimport Loader from '../components/Loader'\nimport { Card, ItemList, TableData, TableHead, TableRow } from '../styles'\nimport cryptojs from 'crypto-js'\nimport { v4 as uuid } from 'uuid'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport TableSkeletonLoader from '../components/TableSkeletonLoader'\n\nexport const codeGenerator = (field1, field2, field3) => {\n\t//Helper Function\n\tconst abbreviator = (str, limit) => {\n\t\tconst strArr = str.split(' ')\n\t\tif (strArr.length === 1) {\n\t\t\treturn str.substring(0, limit).toUpperCase()\n\t\t} else {\n\t\t\tlet code = ''\n\t\t\tfor (let letter of strArr) {\n\t\t\t\tcode += letter[0]\n\t\t\t}\n\t\t\treturn code.substring(0, limit).toUpperCase()\n\t\t}\n\t}\n\n\tconst charCode = (str) => {\n\t\tlet codeDigit = 0\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tcodeDigit += str.charCodeAt(i) - 64\n\t\t}\n\t\treturn codeDigit\n\t}\n\n\t// Converting full string to short form\n\tconst compressedFields = [\n\t\tabbreviator(field1, 2),\n\t\tabbreviator(field2, 2),\n\t\tabbreviator(field3, 2),\n\t].join('')\n\n\t// Char code of field\n\tconst charCodeLeft = charCode(field1)\n\tconst charCodeRight = charCode(field2)\n\n\treturn `${compressedFields}${charCodeLeft}${charCodeRight}`\n}\n\nexport const addValToArr = (e, val, data, setData) => {\n\te.preventDefault()\n\tif (!data.includes(val)) {\n\t\tconst tempData = [...data]\n\t\ttempData.push(val)\n\t\tsetData(tempData)\n\t}\n}\n\nconst removeValFromArr = (item, data, setData) => {\n\tlet dataTemp = [...data]\n\tdataTemp = dataTemp.filter((val) => val !== item)\n\tsetData(dataTemp)\n}\n\nexport const renderArr = (data, setData) =>\n\tdata.map((item) => (\n\t\t<ItemList\n\t\t\tonClick={() => removeValFromArr(item, data, setData)}\n\t\t\tkey={uuid()}>\n\t\t\t{item} X\n\t\t</ItemList>\n\t))\n\nexport const trueKeysToArr = (obj) => {\n\tconst ids = Object.keys(obj)\n\treturn ids.filter((id) => obj[id] === true)\n}\n\nexport const titleGenerator = (arr, title) => {\n\tconst count = arr.length\n\tif (count > 0) {\n\t\treturn `${count} Selected`\n\t} else {\n\t\treturn title\n\t}\n}\n\nexport const renderWithLoader = (val, component) =>\n\tval ? (\n\t\tcomponent\n\t) : (\n\t\t<TableSkeletonLoader/>\n\t)\n\nexport const encryptObj = (obj) => {\n\tconst objStr = JSON.stringify(obj)\n\treturn cryptojs.AES.encrypt(\n\t\tobjStr,\n\t\tprocess.env.REACT_APP_ENCRYPTION_SECRET_KEY\n\t).toString()\n}\n\nexport const formatDate = (date) => {\n\tconst dateArr = new Date(date).toDateString().split(' ')\n\tdateArr.shift()\n\treturn dateArr.join(' ')\n}\n\nexport const counter = (arr) => {\n\tconst countObj = {}\n\tfor (const item of arr) {\n\t\tif (countObj[item]) {\n\t\t\tcountObj[item] += 1\n\t\t} else {\n\t\t\tcountObj[item] = 1\n\t\t}\n\t}\n\n\treturn countObj\n}\n\nexport const pickerDateFormat = (dateStr) => {\n\tif (dateStr) return new Date(dateStr).toISOString().split('T')[0]\n\treturn new Date().toISOString().split('T')[0]\n}\n","import { atom, selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\n\nexport const jobAtom = atom({\n\tkey: 'jobs',\n\tdefault: null,\n})\n\nexport const candidateAtom = atom({\n\tkey: 'candidates',\n\tdefault: null,\n})\n\nexport const companyAtom = atom({\n\tkey: 'companies',\n\tdefault: null,\n})\n\nexport const roleAtom = atom({\n\tkey: 'roles',\n\tdefault: null,\n})\n\nexport const userAtom = atom({\n\tkey: 'users',\n\tdefault: null,\n})\n\nexport const statsAtom = atom({\n\tkey: 'stats',\n\tdefault: null\n})\n\n//--------------\n\nexport const jobCheckedAtom = atom({\n\tkey: 'jobChecked',\n\tdefault: {},\n})\n\nexport const candidateCheckedAtom = atom({\n\tkey: 'candidateChecked',\n\tdefault: {},\n})\n\nexport const companyCheckedAtom = atom({\n\tkey: 'companyChecked',\n\tdefault: {},\n})\n\nexport const roleCheckedAtom = atom({\n\tkey: 'roleChecked',\n\tdefault: {},\n})\n\nexport const userCheckedAtom = atom({\n\tkey: 'userChecked',\n\tdefault: {},\n})\n\n//------------\n\nexport const jobTab = atom({\n\tkey: 'jobTab',\n\tdefault: 0,\n})\n\nexport const candidateTab = atom({\n\tkey: 'candidateTab',\n\tdefault: 2,\n})\n\nexport const appliedCandidateTabAtom = atom({\n\tkey: 'appliedCandidateTabAtom',\n\tdefault: 0,\n})\n\n// -------------\nexport const credentialAtom = atom({\n\tkey: 'cred',\n\tdefault: { email: '', password: '' },\n})\n\nexport const isAuthAtom = atom({\n\tkey: 'isAuth',\n\tdefault: true,\n})\n\nexport const currentUserAtom = atom({\n\tkey: 'currentUser',\n\tdefault: null,\n})\n\nexport const statusAtom = atom({\n\tkey: 'status',\n\tdefault: null,\n})\n","import { get } from 'lodash'\nimport React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { v4 as uniqueID } from 'uuid'\nimport CandidateIcon from '../assets/icons/candidate.svg'\nimport CompanyIcon from '../assets/icons/company.svg'\nimport DashboardIcon from '../assets/icons/dashboard.svg'\nimport JobIcon from '../assets/icons/job.svg'\nimport RoleIcon from '../assets/icons/role.svg'\nimport UserIcon from '../assets/icons/user.svg'\nimport { currentUserAtom } from '../recoil/atoms'\nimport { StyledNavlink } from '../styles'\n\n\n\nfunction Sidebar() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { roleId } = currentUser || {}\n\tconst { permissions } = roleId || {}\n\n\t// const { job, candidate, role, user } = permissions || {}\n\n\n\tconst activeLinkStyle = {\n\t\tcolor: '#0168fa',\n\t\tbackgroundColor: '#EEF0F7',\n\t\tfontWeight: '500',\n\t\tboxShadow: 'inset 1px 1px 3px 0px #016afa2e',\n\t}\n\n\n\treturn (\n\t\t<SidebarContainer>\n\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/dashboard'>\n\t\t\t\t\t<NavIcon src={DashboardIcon} />\n\t\t\t\t\tDashboard\n\t\t\t\t</StyledNavlink>\n\t\t\t</MenuItem>\n\n\t\t\t{get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/job'>\n\t\t\t\t\t\t<NavIcon src={JobIcon} />\n\t\t\t\t\t\tJob\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'candidate.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/candidate'>\n\t\t\t\t\t\t<NavIcon src={CandidateIcon} />\n\t\t\t\t\t\tCandidate\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/company'>\n\t\t\t\t\t\t<NavIcon src={CompanyIcon} />\n\t\t\t\t\t\tCompany\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'role.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/role'>\n\t\t\t\t\t\t<NavIcon src={RoleIcon} />\n\t\t\t\t\t\tRole\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'user.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/user'>\n\t\t\t\t\t\t<NavIcon src={UserIcon} />\n\t\t\t\t\t\tUser\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\t\t</SidebarContainer>\n\t)\n}\n\nexport default Sidebar\n\nconst SidebarContainer = styled.ul`\n\tbackground-color: white;\n\tlist-style: none;\n\tmargin: 0px;\n\tpadding: 0px;\n\tborder: 1px solid #0000003b;\n\tborder-top: 0px;\n\tpadding: 10px;\n\ttext-align: left;\n\t/* overflow-y: scroll; */\n`\n\nconst MenuItem = styled.li``\n\nconst NavIcon = styled.img`\n\tmargin-right: 10px;\n`\n","import React from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\n\nfunction PieChart({ labels, data }) {\n\tconst chartData = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tdata,\n\t\t\t\tbackgroundColor: ['#007bff', '#FFA500'],\n\t\t\t},\n\t\t],\n\t\tlabels,\n\t}\n\n\treturn (\n\t\t<ChartContainer>\n\t\t\t<Pie data={chartData} />\n\t\t</ChartContainer>\n\t)\n}\n\nexport default PieChart\n\nconst ChartContainer = styled.div`\n\t/* width: 400px; */\n`\n","const STAGE = process.env.NODE_ENV === 'production' ? true : false\n\nexport const API_URI = STAGE\n\t? 'https://sos-node.herokuapp.com'\n\t: 'http://localhost:4000'\n\nexport const createJob = `${API_URI}/job`\nexport const getJobs = `${API_URI}/jobs`\n\nexport const getJob = `${API_URI}/job`\nexport const deleteJob = `${API_URI}/job`\nexport const deleteJobs = `${API_URI}/jobs`\n\nexport const createCandidate = `${API_URI}/candidate`\nexport const getCandidates = `${API_URI}/candidates`\n\nexport const applyJob = `${API_URI}/apply`\n\nexport const jobEndpoint = `${API_URI}/job`\nexport const jobsEndpoint = `${API_URI}/jobs`\n\nexport const candidateEndpoint = `${API_URI}/candidate`\nexport const candidatesEndpoint = `${API_URI}/candidates`\n\nexport const companyEndpoint = `${API_URI}/company`\nexport const companiesEndpoint = `${API_URI}/companies`\n\nexport const roleEndpoint = `${API_URI}/role`\nexport const rolesEndpoint = `${API_URI}/roles`\n\nexport const userEndpoint = `${API_URI}/user`\nexport const usersEndpoint = `${API_URI}/users`\n\nexport const loginEndpoint = `${API_URI}/login`\nexport const logoutEndpoint = `${API_URI}/logout`\nexport const verifyEndpoint = `${API_URI}/verify`\n\nexport const statusEndpoint = `${API_URI}/status`\n\nexport const statsEndpoint = `${API_URI}/stats`\n\n// export const getPublicJobs = `${API_URI}/public-jobs`\n","import { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { v4 as uuid } from 'uuid'\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify'\n\ntoast.configure({\n\tposition: toast.POSITION.BOTTOM_RIGHT,\n\tautoClose: 3000,\n\tpauseOnFocusLoss: false,\n\ttoastId: uuid(),\n\t// transition: Slide,\n\tdraggablePercent: 60,\n})\n\nexport { toast }\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport styled from 'styled-components'\nimport { Card } from '../styles'\n\nfunction ChartSkeleton() {\n\treturn (\n\t\t<ChartCard>\n\t\t\t<TitleContainer>\n\t\t\t\t<Skeleton width={100} />\n\t\t\t\t<Skeleton width={100} />\n\t\t\t</TitleContainer>\n\t\t\t<Skeleton circle={true} height={200} width={200} />\n\t\t\t<Skeleton width={300} />\n\t\t</ChartCard>\n\t)\n}\n\nexport default ChartSkeleton\n\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n\nconst TitleContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n`\n","import React, { useEffect } from 'react'\nimport PieChart from '../../components/PieChart'\nimport { Card, ContentContainer, PageLayout, Title } from '../../styles'\nimport styled from 'styled-components'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { statsAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { statsEndpoint } from '../../api'\nimport { toast } from '../../components/Toast'\nimport Skeleton from 'react-loading-skeleton'\nimport ChartSkeleton from '../../components/ChartSkeleton'\n\nfunction DashboardPage() {\n\tconst [stats, setStats] = useRecoilState(statsAtom)\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(statsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setStats(data))\n\t\t\t.catch((e) => toast.error('Something went wrong'))\n\t}, [])\n\n\tconsole.log({ stats })\n\n\treturn (\n\t\t<>\n\t\t\t<ContentContainer>\n\t\t\t\t<PieContainer>\n\t\t\t\t\t{stats ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Assigned Jobs', 'Unassigned Jobs']}\n\t\t\t\t\t\t\t\t\tdata={[stats.stats.job.assigned, stats.stats.job.unassigned]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>{stats.stats.job.total} Jobs</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Applied Candidates', 'Candidates Not Applied']}\n\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.applied,\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.unapplied,\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>\n\t\t\t\t\t\t\t\t\t{stats.stats.candidate.total} Candidates\n\t\t\t\t\t\t\t\t</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</PieContainer>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default DashboardPage\n\nconst PieContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\n\nconst ChartTitle = styled.h3`\n\tcolor: #333;\n`\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {InputBase} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction Search({onChange}) {\n        return (\n                <SearchDiv>\n                        <>\n                                <SearchIcon />\n                        </>\n                        <InputBase \n                                placeholder=\"Search…\"\n                                inputProps={{ 'aria-label': 'search' }} \n                                onChange={onChange}\n                        />\n                </SearchDiv>\n        )\n}\n\nexport default Search\n\nconst SearchDiv = styled.div`\n        padding: 4px 10px;\n        display: flex;\n        align-items: center;\n        color: #ABABAB;\n        background-color: #EEF0F7;\n        border-radius: 4px;\n`;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces } from '../styles'\nimport Search from '../components/Search'\n\nfunction Controls({ title, children, onSearchChange, search }) {\n\treturn (\n\t\t<ControlContainer>\n\t\t\t<ControlTitle>{title}</ControlTitle>\n\t\t\t{\n\t\t\t\tsearch ? <ControlSearch><Search onChange={onSearchChange} /></ControlSearch> : null\n\t\t\t}\n\t\t\t<ControlButtonContainer>{children}</ControlButtonContainer>\n\t\t</ControlContainer>\n\t)\n}\n\nexport default Controls\n\nconst ControlContainer = styled.div`\n\tposition: sticky;\n\ttop: 0px;\n\tz-index: 10;\n\tpadding: 10px 20px;\n\tbackground-color: white;\n\tdisplay: flex;\n\tborder: 1px solid #0000003b;\n\tborder-top: none;\n\tborder-left: none;\n\t/* border-radius: 6px; */\n\talign-items: center;\n\tjustify-content: space-between;\n`\n\nconst ControlTitle = styled.h4`\n\t${RemoveSpaces}\n\tcolor: #333;\n`\n\nconst ControlSearch = styled.div`\n\tmargin: 0 auto;\t\n`\n\nconst ControlButtonContainer = styled.div`\n\tdisplay: flex;\n`\n","import styled from 'styled-components'\nimport {\n\tButton,\n\tFormControl,\n\tIconButton,\n\tModal,\n\tSelect,\n\tTextField,\n} from '@material-ui/core'\n\nexport const SMUIButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px;\n\t\tpadding: 5px 20px;\n\t}\n`\nexport const SMUITextField = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t\twidth: 100%;\n\t}\n`\nexport const SMUISelect = styled(Select)`\n\t&& {\n\t\twidth: 100%;\n\t\t/* margin: 10px 0px; */\n\t\t/* padding: 5px 0px; */\n\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIFormControl = styled(FormControl)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIIconButton = styled(IconButton)`\n\t&&{\n\t\tpadding: 0px;\n\t}\n`\n\nexport const SMUIModal = styled(Modal)`\n\t&& {\n\t\tposition: fixed;\n\t\ttop: auto;\n\t\tbottom: auto;\n\t\tleft: auto;\n\t\tmargin: 0 auto;\n\t\tright: auto;\n\t\twidth: 500px;\n\t\toutline: none;\n\t\tborder-style: none;\n\t}\n\t&&:focus {\n\t\toutline: none;\n\t}\n`\n","import React from 'react'\nimport {\n\tModalBody,\n\tModalButtonContainer,\n\n\tModalText, ModalTitle,\n\n\tModalWarning\n} from '../../styles'\nimport { SMUIButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nfunction DeleteModal({ open, onClose, count, deleteHandler }) {\n\treturn (\n\t\t<SMUIModal open={open} onClose={onClose}>\n\t\t\t<ModalBody>\n\t\t\t\t<ModalTitle>{count} Items Selected</ModalTitle>\n\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t<SMUIButton onClick={onClose}>Cancel</SMUIButton>\n\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\tonClick={deleteHandler}\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</SMUIButton>\n\t\t\t\t</ModalButtonContainer>\n\t\t\t</ModalBody>\n\t\t</SMUIModal>\n\t)\n}\n\nexport default DeleteModal\n","import { selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\nimport {\n\tcandidateCheckedAtom,\n\tcompanyCheckedAtom,\n\tjobCheckedAtom,\n\troleCheckedAtom,\n\tuserCheckedAtom,\n} from './atoms'\n\nexport const filterTrueJobChecked = selector({\n\tkey: 'filterTrueJobChecked',\n\tget: ({ get }) => {\n\t\tconst checkedJob = get(jobCheckedAtom)\n\t\treturn trueKeysToArr(checkedJob)\n\t},\n})\n\nexport const filterTrueCandidateChecked = selector({\n\tkey: 'filterTrueCandidateChecked',\n\tget: ({ get }) => {\n\t\tconst checkedCandidate = get(candidateCheckedAtom)\n\t\treturn trueKeysToArr(checkedCandidate)\n\t},\n})\n\nexport const selectedCompanies = selector({\n\tkey: 'filterTrueCompanyChecked',\n\tget: ({ get }) => {\n\t\tconst companyChecked = get(companyCheckedAtom)\n\t\treturn trueKeysToArr(companyChecked)\n\t},\n})\n\nexport const selectedRoles = selector({\n\tkey: 'filterTrueRoleChecked',\n\tget: ({ get }) => {\n\t\tconst roleChecked = get(roleCheckedAtom)\n\t\treturn trueKeysToArr(roleChecked)\n\t},\n})\n\nexport const selectedUsers = selector({\n\tkey: 'filterTrueUsersChecked',\n\tget: ({ get }) => {\n\t\tconst userChecked = get(userCheckedAtom)\n\t\treturn trueKeysToArr(userChecked)\n\t},\n})\n","import { AddCircle, Delete, Search } from '@material-ui/icons'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { v4 as uuid } from 'uuid'\nimport { applyJob, deleteJobs, getJobs, jobsEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport Table from '../../components/Table'\n\nimport {\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n\tjobAtom,\n\tjobCheckedAtom,\n} from '../../recoil/atoms'\nimport {\n\tfilterTrueCandidateChecked,\n\tfilterTrueJobChecked,\n} from '../../recoil/selectors'\nimport {\n\tContentContainer,\n\tControlButton,\n\tStyledCheckbox,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { toast } from '../../components/Toast'\nimport { filter, get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction JobPage({ toApply }) {\n\t// React Hooks\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tvar [jobData, setJobData] = useRecoilState(jobAtom)\n\tconst [checked, setChecked] = useRecoilState(jobCheckedAtom)\n\tconst [, setCandidateChecked] = useRecoilState(candidateCheckedAtom)\n\tconst ids = useRecoilValue(filterTrueJobChecked)\n\tconst candidateSelectedIds = useRecoilValue(filterTrueCandidateChecked)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [filterData, setFilterData] = useState();\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(jobsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJobData(data);\n\t\t\t\tsetFilterData(data);\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\n\tconst jobHeading = [\n\t\t<StyledCheckbox\n\t\t\ttype='checkbox'\n\t\t\tcolor='primary'\n\t\t\tonChange={() => console.log('checked')}\n\t\t/>,\n\t\t'Job Code',\n\t\t'Job Title',\n\t\t'Company',\n\t\t'City',\n\t\t'Openings',\n\t\t`Resumes`,\n\t\t`Posted On`,\n\t\t// `Assigned On`,\n\t]\n\n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(deleteJobs, { ids }, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Job Deleted')\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst candidateApplyHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\tapplyJob,\n\t\t\t\t{\n\t\t\t\t\tcandidates: candidateSelectedIds,\n\t\t\t\t\tjobs: ids,\n\t\t\t\t\tuserId: currentUser._id,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\tsetChecked({})\n\t\t\tsetCandidateChecked({})\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidates Assigned')\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// Renderers\n\tconst renderJobHeading = jobHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderJobData =\n\t\tfilterData &&\n\t\tfilterData.map((job) => {\n\t\t\treturn (\n\t\t\t\t<TableRow\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: checked[job._id] ? '#0c68fa1f' : 'white',\n\t\t\t\t\t}}\n\t\t\t\t\tkey={job._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tchecked={checked[job._id]}\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonChange={() => onCheckHandler(job._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\tjob.jobDetails.jobCode\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<NavLink to={`${location}/${job.jobDetails.jobCode}`}>\n\t\t\t\t\t\t\t\t{job.jobDetails.jobCode}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t\t<TableData>{job.companyDetails.companyId.companyName}</TableData>\n\t\t\t\t\t<TableData>{job.jobAddress.city}</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t\t<TableData>{job.statusIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(job.createdAt)}</TableData>\n\t\t\t\t\t{/* <TableData>\n\t\t\t\t\t\t{new Date(job.jobOpeningInfo.assignedOn).toDateString()}\n\t\t\t\t\t</TableData> */}\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\tconst addHandler = () => {\n\t\thistory.push(`${location}/add`)\n\t}\n\n\tconst onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n\t\t\treturn data.jobOpeningInfo.jobTitle.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.companyDetails.companyId.companyName.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobDetails.jobCode.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobAddress.city.toLowerCase().includes(inputVal) \n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\tconsole.log(jobData)\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(ids, 'Jobs')} onSearchChange={(e) => onSearchChange(e)} search={true}>\n\t\t\t\t{ids.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\t<ControlButton\n\t\t\t\t\t\t\t\tonClick={candidateApplyHandler}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t\t\tApply\n\t\t\t\t\t\t\t</ControlButton>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={addHandler}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={ids.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tfilterData,\n\t\t\t\t\t<Table headings={renderJobHeading}>{renderJobData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobPage\n","import { Button, MenuItem, Select } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport SearchIcon from '../assets/icons/search.svg'\nimport { themeBorder } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction SearchBar({ options }) {\n\tconst [searchCriteria, setSearchCriteria] = useState(options[0].value)\n\tconst [searchVal, setSearchVal] = useState('')\n\tconst renderOption = () =>\n\t\toptions.map(({ value, name }) => {\n\t\t\treturn <MenuItem key={uuid()} value={value}>{name}</MenuItem>\n\t\t})\n\n\n\tconst searchInputHandler = (e) => setSearchVal(e.target.value)\n\tconst searchCriteriaHandler = (e) => setSearchCriteria(e.target.value)\n\n\treturn (\n\t\t<SearchBarForm>\n\t\t\t<StyledSelect value={searchCriteria} onChange={searchCriteriaHandler}>\n\t\t\t\t{renderOption()}\n\t\t\t</StyledSelect>\n\t\t\t<SearchInput\n\t\t\t\tvalue={searchVal}\n\t\t\t\tonChange={searchInputHandler}\n\t\t\t\tplaceholder='Search Here...'\n\t\t\t/>\n\n\t\t\t<Button>\n\t\t\t\t<img src={SearchIcon} alt='Search Icon' />\n\t\t\t</Button>\n\t\t</SearchBarForm>\n\t)\n}\n\nexport default SearchBar\n\nconst StyledSelect = styled(Select)`\n\tpadding: 0px 20px;\n`\n\nconst SearchBarForm = styled.form`\n\tdisplay: flex;\n\tmargin: 10px 0px;\n\tjustify-content: space-between;\n\t${themeBorder}\n\tbackground-color: white;\n`\nconst SearchInput = styled.input`\n\tflex: 1;\n\tpadding: 0px 10px;\n\tborder-style: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n`\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport {\n\tapplyJob,\n\tcandidatesEndpoint,\n\tcompaniesEndpoint,\n\tgetCandidates,\n\tgetJobs,\n} from '../../api'\nimport Table from '../../components/Table'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tPageLayout,\n\tTableData,\n\tTableHead,\n\tTableRow,\n\tStyledCheckbox,\n\tContentContainer,\n\tControlButton,\n} from '../../styles'\n\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport Controls from '../../components/Controls'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\n\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n\ttrueKeysToArr,\n} from '../../utils/helperFunctions'\n\nimport { useRecoilValue } from 'recoil'\nimport { filterTrueCandidateChecked } from '../../recoil/selectors'\nimport SearchBar from '../../components/SearchBar'\nimport AddIcon from '../../assets/icons/add.svg'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { AddCircle, Delete } from '@material-ui/icons'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { v4 as uuid } from 'uuid'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\n\nfunction CandidatePage() {\n\t// React Hooks\n\n\tconst [candidateData, setCandidateData] = useRecoilState(candidateAtom)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst selected = useRecoilValue(filterTrueCandidateChecked)\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\n\tuseEffect(() => {\n\t\taxios.get(getCandidates, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidateData(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\tconst candidateHeading = [\n\t\t'Select',\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t`Entered On`,\n\t]\n\n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\t}\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(candidatesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Candidates Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// Renderers\n\tconst renderCandidateData =\n\t\tcandidateData &&\n\t\tcandidateData.map((candidate) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={candidate._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tchecked={checked[candidate._id]}\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonChange={() => onCheckHandler(candidate._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<NavLink to={`${location}/${candidate.candidateCode}`}>\n\t\t\t\t\t\t\t{candidate.candidateCode}\n\t\t\t\t\t\t</NavLink>{' '}\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{candidate.basic.fullName}</TableData>\n\t\t\t\t\t<TableData>{candidate.basic.primaryEmail}</TableData>\n\t\t\t\t\t<TableData>{candidate.basic.mobile}</TableData>\n\t\t\t\t\t<TableData>{candidate.address.state}</TableData>\n\t\t\t\t\t{/* <TableData>45</TableData> */}\n\t\t\t\t\t<TableData>{candidate.professional.industry}</TableData>\n\t\t\t\t\t<TableData>{candidate.professional.functionalArea}</TableData>\n\t\t\t\t\t<TableData>{formatDate(candidate.createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\tconst toPage = (link) => {\n\t\thistory.push(link)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Candidate Controls')}>\n\t\t\t\t{selected.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton\n\t\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\t\tonClick={toggleModal}\n\t\t\t\t\t\t\t\tcolor='secondary'>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t\t\t<ControlButton\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={() => toPage('/job/apply')}>\n\t\t\t\t\t\t\t\tAssign\n\t\t\t\t\t\t\t</ControlButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={() => toPage(`${location}/add`)}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{/* <Button variant=\"contained\" color=\"primary\">Import</Button>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\">Export</Button> */}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tcandidateData,\n\t\t\t\t\t<Table headings={renderCandidateHeading}>{renderCandidateData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidatePage\n\nconst CandidatePageContainer = styled.div`\n\tbackground-color: #0000000d;\n\twidth: 100%;\n\tpadding: 10px;\n`\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport AddIcon from '../../assets/icons/add.svg'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, roleAtom, roleCheckedAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { rolesEndpoint } from '../../api'\nimport Table from '../../components/Table'\nimport { v4 as uuid } from 'uuid'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\nimport { selectedRoles } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction RolePage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [checked, setChecked] = useRecoilState(roleCheckedAtom)\n\tconst selected = useRecoilValue(selectedRoles)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(rolesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Roles Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst roleHeading = ['Select', 'Name', 'Vendor', 'Total Users', 'Created On']\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst renderHeading = roleHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderRoleData =\n\t\troles &&\n\t\troles.map(({ _id, name, vendor, users, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{name}</TableData>\n\t\t\t\t\t<TableData>{vendor}</TableData>\n\t\t\t\t\t<TableData>{users.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Roles')}>\n\t\t\t\t{selected.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{/* <IconButton onClick={() => navHandler('add')} src={AddIcon} /> */}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\troles,\n\t\t\t\t\t<Table headings={renderHeading}>{renderRoleData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RolePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tPageLayout,\n\tTableHead,\n\tTableRow,\n\tTableData,\n\tStyledCheckbox,\n} from '../../styles'\nimport Controls from '../../components/Controls'\n\nimport { useHistory, useLocation } from 'react-router-dom'\nimport AddIcon from '../../assets/icons/add.svg'\nimport axios from 'axios'\nimport { usersEndpoint } from '../../api'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, userAtom, userCheckedAtom } from '../../recoil/atoms'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { v4 as uuid } from 'uuid'\nimport { selectedUsers } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction UserPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [users, setUsers] = useRecoilState(userAtom)\n\tconst [checked, setChecked] = useRecoilState(userCheckedAtom)\n\tconst selected = useRecoilValue(selectedUsers)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(usersEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setUsers(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst userHeading = [\n\t\t'Select',\n\t\t'Fullname',\n\t\t'Username',\n\t\t'Contact',\n\t\t'Email',\n\t\t'Assigned Role',\n\t\t'Created On',\n\t]\n\n\tconst renderUserHeading = userHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(usersEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('User Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\tconst showUsers =\n\t\tusers &&\n\t\tusers.filter((user) => {\n\t\t\tif (currentUser) {\n\t\t\t\treturn currentUser._id.toString() !== user._id.toString()\n\t\t\t}\n\t\t})\n\tconst renderUserData =\n\t\tshowUsers &&\n\t\tshowUsers.map(\n\t\t\t({\n\t\t\t\t_id,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tuserName,\n\t\t\t\tcontact,\n\t\t\t\temail,\n\t\t\t\troleId,\n\t\t\t\tcreatedAt,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t\t<TableData>\n\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableData>\n\n\t\t\t\t\t\t<TableData>{`${firstName} ${lastName}`}</TableData>\n\t\t\t\t\t\t<TableData>{userName}</TableData>\n\t\t\t\t\t\t<TableData>{contact}</TableData>\n\t\t\t\t\t\t<TableData>{email}</TableData>\n\t\t\t\t\t\t<TableData>{roleId.name}</TableData>\n\t\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t\t</TableRow>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Users')}>\n\t\t\t\t{selected.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tusers,\n\t\t\t\t\t<Table headings={renderUserHeading}>{renderUserData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserPage\n","import { IconButton, InputLabel, MenuItem } from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport axios from 'axios'\nimport 'date-fns'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { companiesEndpoint, jobEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { companyAtom, currentUserAtom, jobAtom } from '../../../recoil/atoms'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\nimport { toast } from '../../../components/Toast'\n\nfunction JobInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst jobId = get(match, 'params.id', '')\n\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\n\tconst jobs = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [job, setJob] = useState(\n\t\tjobs && jobs.find((job) => job.jobDetails.jobCode === jobId)\n\t)\n\n\tuseEffect(() => {\n\t\tif (!job) {\n\t\t\taxios\n\t\t\t\t.get(`${jobEndpoint}/${jobId}`)\n\t\t\t\t.then(({ data }) => setJob(data))\n\t\t\t\t.catch((e) => console.log(e))\n\t\t}\n\t}, [])\n\n\tconst [jobTitle, setJobTitle] = useState(\n\t\tget(job, 'jobOpeningInfo.jobTitle', '')\n\t)\n\tconst [jobType, setJobType] = useState(get(job, 'jobOpeningInfo.jobType', ''))\n\tconst [industry, setIndustry] = useState(\n\t\tget(job, 'jobOpeningInfo.industry', '')\n\t)\n\tconst [noOfOpening, setNoOfOpening] = useState(\n\t\tget(job, 'jobOpeningInfo.noOfOpenings')\n\t)\n\n\t//companydetails\n\tconst [companyId, setCompanyId] = useState(\n\t\tget(job, 'companyDetails.companyId._id', '')\n\t)\n\n\tconst [isCompanyDetailsVisible, setIsCompanyDetailsVisible] = useState(\n\t\tget(job, 'companyDetails.isCompanyDetailsVisible', true)\n\t)\n\t//jobaddress\n\tconst [jobLocation, setJobLocation] = useState(\n\t\tget(job, 'jobAddress.jobLocation')\n\t)\n\tconst [city, setCity] = useState(get(job, 'jobAddress.city', ''))\n\tconst [zone, setZone] = useState(get(job, 'jobAddress.zone'))\n\tconst [state, setState] = useState(get(job, 'jobAddress.state', ''))\n\tconst [pincode, setPincode] = useState(get(job, 'jobAddress.pincode'))\n\tconst [country, setCountry] = useState(get(job, 'jobAddress.country', ''))\n\n\t//jobdetails\n\tconst [jobDescription, setJobDescription] = useState(\n\t\tget(job, 'jobDetails.jobDescription', '')\n\t)\n\n\tconst [eligibility, setEligibility] = useState(\n\t\tget(job, 'jobDetails.eligibility', [])\n\t)\n\tconst [eligibilityVal, setEligibilityVal] = useState()\n\n\tconst [responsibilities, setResponsibilities] = useState(\n\t\tget(job, 'jobDetails.responsibilities', [])\n\t)\n\tconst [responsibilitiesVal, setResponsibilitiesVal] = useState()\n\n\tconst [benefits, setBenefits] = useState(get(job, 'jobDetails.benefits', []))\n\tconst [benefitsVal, setBenefitsVal] = useState()\n\n\tconst [additionalInformation, setAdditionalInformation] = useState(\n\t\tget(job, 'jobDetails.additionalInformation', '')\n\t)\n\tconst [targetDate, setTargetDate] = useState(\n\t\tpickerDateFormat(get(job, 'jobDetails.targetDate'))\n\t)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\t//functions\n\n\t//handlers\n\tconst saveHandler = async (isEdit) => {\n\t\tconst newJobData = {\n\t\t\tjobOpeningInfo: {\n\t\t\t\tjobTitle,\n\t\t\t\tjobType,\n\t\t\t\tindustry,\n\t\t\t\tassignedOn: new Date(),\n\t\t\t\tnoOfOpenings: Number(noOfOpening),\n\t\t\t},\n\t\t\tcompanyDetails: {\n\t\t\t\tcompanyId,\n\t\t\t\tisCompanyDetailsVisible,\n\t\t\t},\n\t\t\tjobAddress: {\n\t\t\t\tjobLocation,\n\t\t\t\tcity,\n\t\t\t\tzone,\n\t\t\t\tstate,\n\t\t\t\tpincode,\n\t\t\t\tcountry,\n\t\t\t},\n\t\t\tjobDetails: {\n\t\t\t\tjobCode: codeGenerator(jobTitle, industry, companyId),\n\t\t\t\tjobDescription,\n\t\t\t\tadditionalInformation,\n\t\t\t\ttargetDate,\n\t\t\t\teligibility,\n\t\t\t\tresponsibilities,\n\t\t\t\tbenefits,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\t\ttry {\n\t\t\tif (isEdit) {\n\t\t\t\tawait axios.patch(`${jobEndpoint}/${jobId}`, newJobData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\n\t\t\t\ttoast.success('Job Edited')\n\t\t\t\thistory.goBack()\n\t\t\t} else {\n\t\t\t\tawait axios.post(jobEndpoint, newJobData, { withCredentials: true })\n\t\t\t\ttoast.success('New Job Added')\n\t\t\t\thistory.goBack()\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst renderCompaniesOption =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName }) => {\n\t\t\treturn (\n\t\t\t\t<MenuItem key={_id} value={_id}>\n\t\t\t\t\t{companyName}\n\t\t\t\t</MenuItem>\n\t\t\t)\n\t\t})\n\n\tconst addCompanyHandler = () => {\n\t\thistory.push('/company/add')\n\t}\n\n\treturn (\n\t\t<JobInputContainer>\n\t\t\t{/* Control */}\n\t\t\t<Controls title='Job Control'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.permissions.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.job.update')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tonClick={() => saveHandler(edit)}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Opening Info</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}\n\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={noOfOpening}\n\t\t\t\t\t\tonChange={(e) => setNoOfOpening(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='No. of Opening'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobtype'>Job type</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobType}\n\t\t\t\t\t\t\tlabel='Job type'\n\t\t\t\t\t\t\tonChange={(e) => setJobType(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Full-time'>Full-Time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Part-time'>Part-time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Freelancing'>Part-time</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='company'>Company</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabelId='company'\n\t\t\t\t\t\t\tvalue={companyId}\n\t\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t\t\tonChange={(e) => setCompanyId(e.target.value)}>\n\t\t\t\t\t\t\t{renderCompaniesOption}\n\n\t\t\t\t\t\t\t<MenuItem value='add New' onClick={addCompanyHandler}>\n\t\t\t\t\t\t\t\t+ Add New Company\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<CheckBoxContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isCompanyDetailsVisible}\n\t\t\t\t\t\t\tonChange={(e) => setIsCompanyDetailsVisible(e.target.checked)}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CheckBoxLabel>Company Details Visible</CheckBoxLabel>\n\t\t\t\t\t</CheckBoxContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Address</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t\tlabel='City'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}\n\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobLocation'>Job Location</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobLocation}\n\t\t\t\t\t\t\tonChange={(e) => setJobLocation(e.target.value)}\n\t\t\t\t\t\t\tlabel='Job Location'>\n\t\t\t\t\t\t\t<MenuItem value='On Location'>On Location</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Remote'>Remote</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='zone'>Zone</InputLabel>\n\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={zone}\n\t\t\t\t\t\t\tonChange={(e) => setZone(e.target.value)}\n\t\t\t\t\t\t\tlabel='Zone'>\n\t\t\t\t\t\t\t<MenuItem value='North'>North</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='East'>East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='West'>West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South'>South</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-East'>North-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-West'>North-West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-East'>South-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-West'>South-West</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Details</CardTitle>\n\n\t\t\t\t\t{eligibility.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(eligibility, setEligibility)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, eligibilityVal, eligibility, setEligibility)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={eligibilityVal}\n\t\t\t\t\t\t\tonChange={(e) => setEligibilityVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Eligibility'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{responsibilities.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(responsibilities, setResponsibilities)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tresponsibilitiesVal,\n\t\t\t\t\t\t\t\tresponsibilities,\n\t\t\t\t\t\t\t\tsetResponsibilities\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Responsibilities'\n\t\t\t\t\t\t\tvalue={responsibilitiesVal}\n\t\t\t\t\t\t\tonChange={(e) => setResponsibilitiesVal(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{benefits.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(benefits, setBenefits)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, benefitsVal, benefits, setBenefits)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Benefits'\n\t\t\t\t\t\t\tvalue={benefitsVal}\n\t\t\t\t\t\t\tonChange={(e) => setBenefitsVal(e.target.value)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={jobDescription}\n\t\t\t\t\t\tonChange={(e) => setJobDescription(e.target.value)}\n\t\t\t\t\t\tlabel='Job Description'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={additionalInformation}\n\t\t\t\t\t\tonChange={(e) => setAdditionalInformation(e.target.value)}\n\t\t\t\t\t\tlabel='Additional Information'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tdefaultValue={targetDate}\n\t\t\t\t\t\t\tlabel='Target Date'\n\t\t\t\t\t\t\tonChange={(e) => setTargetDate(e.target.value)}\n\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\tplaceholder='Target Date'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\n\t\t\t{/* inputs */}\n\t\t\t{toast}\n\t\t\t{/* {isSaved && <Redirect to='/job' />} */}\n\t\t</JobInputContainer>\n\t)\n}\n\nexport default JobInput\n\nconst JobInputContainer = styled.div``\n\nconst CheckBoxContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\nconst CheckBoxLabel = styled.p`\n\t${RemoveSpaces}\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React from 'react'\nimport JobInput from './components/JobInput'\nimport styled from 'styled-components'\nimport { PageLayout } from '../../styles'\n\nfunction AddJob() {\n\treturn (\n\t\t<>\n\t\t\t<JobInput />\n\t\t</>\n\t)\n}\n\nexport default AddJob\n\n\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { useRecoilState } from 'recoil'\nimport { Card } from '../styles'\nimport styled from 'styled-components'\nimport { v4 as uuid } from 'uuid'\n\n\nexport default function PageTab({ atom, labels }) {\n\tconst [value, setValue] = useRecoilState(atom)\n\n\tconst handleChange = (_event, newValue) => {\n\t\tsetValue(newValue)\n\t}\n\n\tconst renderLabels = labels.map((item) => <Tab key={uuid()} label={item} />)\n\treturn (\n\t\t<TabBG>\n\t\t\t<Tabs\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tindicatorColor='primary'\n\t\t\t\ttextColor='primary'\n\t\t\t\t// centered\n\t\t\t>\n\t\t\t\t{renderLabels}\n\t\t\t</Tabs>\n\t\t</TabBG>\n\t)\n}\n\nconst TabBG = styled(Card)`\n\tpadding: 0px;\n\tmargin: 0px;\n\twidth: fit-content;\n`\n","export const stages = [\n\t'Shortlisted',\n\t'Assessment',\n\t'Hiring manager review',\n\t'Interview 1',\n\t'Interview 2',\n\t'Interview 3',\n\t'Salary Fitment',\n\t'Offer',\n\t'Documentation',\n\t'Joining',\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n\tCard,\n\tCategory,\n\tCategoryGrid,\n\tCategoryMainTitle,\n\tCategoryTitle,\n\tContent,\n\tDataContainer,\n\tDataContent,\n\tDataTitle,\n\tthemeBorder,\n\tTitle,\n} from '../../../styles'\nimport JobDetails from '../JobDetails'\nimport { v4 as uuid } from 'uuid'\nimport { formatDate } from '../../../utils/helperFunctions'\n\nfunction JobInfo({ job }) {\n\tconst { companyDetails, jobAddress, jobDetails, jobOpeningInfo } = job || {}\n\tconst { companyName, companyAddress } = companyDetails || {}\n\tconst { city, country, jobLocation, pincode, state, zone } = jobAddress || {}\n\tconst {\n\t\teligibility,\n\t\tresponsibilities,\n\t\tbenefits,\n\t\tjobCode,\n\t\tadditionalInformation,\n\t\tjobDescription,\n\t\ttargetDate,\n\t} = jobDetails || {}\n\n\tconst { assignedOn, industry, jobTitle, jobType, noOfOpenings } =\n\t\tjobOpeningInfo || {}\n\n\tconst renderList = (arr) =>\n\t\tarr.map((item) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{item}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Opening Info</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Type</Title>\n\t\t\t\t\t\t<Content>{jobType}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Openings</Title>\n\t\t\t\t\t\t<Content>{noOfOpenings}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Location</Title>\n\t\t\t\t\t\t<Content>{jobLocation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>City</Title>\n\t\t\t\t\t\t<Content>{city}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Zone</Title>\n\t\t\t\t\t\t<Content>{zone}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Details</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Code</Title>\n\t\t\t\t\t\t<Content>{jobCode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Description</Title>\n\t\t\t\t\t\t<Content>{jobDescription}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Additional Information</Title>\n\t\t\t\t\t\t<Content>{additionalInformation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Target Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(targetDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Eligibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(eligibility)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Responsibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(responsibilities)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Benifits</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(benefits)}</CategoryGrid>\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default JobInfo\n","import axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { jobEndpoint } from '../../api'\nimport ArrowBG from '../../assets/icons/arrow.svg'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport PageTab from '../../components/PageTab'\nimport Table from '../../components/Table'\nimport { currentUserAtom, jobAtom, jobTab } from '../../recoil/atoms'\n\nimport {\n\tCard,\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tRemoveSpaces,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\n\nimport { counter, renderWithLoader } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport JobInfo from './components/JobInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction JobDetails({ match }) {\n\tconst history = useHistory()\n\tconst id = match.params.id\n\tconst jobTabIndex = useRecoilValue(jobTab)\n\tconst labels = ['PipeLine', 'Applied Candidates', 'Job Details']\n\tconst [job, setJob] = useState()\n\tconst jobFullData = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst selectedJob = jobFullData\n\t\t? jobFullData.find((job) => job.jobDetails.jobCode === id)\n\t\t: job\n\n\tconst stageDataCount = counter(\n\t\tget(selectedJob, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJob(data)\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst candidateData = get(selectedJob, 'statusIds', []).map(\n\t\t(item) => item.candidateId\n\t)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\ttoast.success('Job Deleted')\n\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst editNavHandler = () => {\n\t\thistory.push(`/job/edit/${id}`)\n\t}\n\n\tconst candidateHeading = [\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t'Status',\n\t]\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderCandidateData = get(selectedJob, 'statusIds', []).map(\n\t\t({ candidateId, currentStage, _id }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={candidateId._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<NavLink to={`/applied/${_id}`}>\n\t\t\t\t\t\t\t{candidateId.candidateCode}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.fullName}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.primaryEmail}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.mobile}</TableData>\n\t\t\t\t\t<TableData>{candidateId.address.state}</TableData>\n\t\t\t\t\t{/* <TableData>45</TableData> */}\n\t\t\t\t\t<TableData>{candidateId.professional.industry}</TableData>\n\t\t\t\t\t<TableData>{candidateId.professional.functionalArea}</TableData>\n\t\t\t\t\t<TableData>{currentStage.stageName}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{renderWithLoader(\n\t\t\t\t\t\t\tcandidateData,\n\t\t\t\t\t\t\t<Table headings={renderCandidateHeading}>\n\t\t\t\t\t\t\t\t{renderCandidateData}\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\treturn <JobInfo job={selectedJob} />\n\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls\n\t\t\t\ttitle={get(selectedJob, 'jobOpeningInfo.jobTitle', 'Loading..')}>\n\t\t\t\t{/* <Controls title='Details'> */}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t<ControlButton onClick={toggleModal} color='secondary'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={editNavHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<DeleteModal\n\t\t\t\t\topen={isModalOpen}\n\t\t\t\t\tonClose={toggleModal}\n\t\t\t\t\tcount={1}\n\t\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t\t/>\n\t\t\t\t<PageTab atom={jobTab} labels={labels} />\n\t\t\t\t{renderTabBody(jobTabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobDetails\n","import {\n\tButton,\n\tIconButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n} from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { candidateEndpoint, createCandidate } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tCategoryTitle,\n\tContentContainer,\n\tControlButton,\n\tInputContainer,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tStyledTextField,\n} from '../../../styles'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\n\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { useRecoilValue } from 'recoil'\nimport { candidateAtom, currentUserAtom } from '../../../recoil/atoms'\nimport { get } from 'lodash'\nimport { useHistory } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport { toast } from '../../../components/Toast'\n\nfunction CandidateInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst candidateCode = get(match, 'params.id', '')\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState(\n\t\tcandidates &&\n\t\t\tcandidates.find((candidate) => candidate.candidateCode === candidateCode)\n\t)\n\n\tconst { basic, address, professional } = candidate || {}\n\n\tconst {\n\t\tfullName: _fullName,\n\t\tprimaryEmail: _primaryEmail,\n\t\tsecondaryEmail: _secondaryEmail,\n\t\tmobile: _mobile,\n\t\tpan: _pan,\n\t\tdateOfBirth: _dateOfBirth,\n\t} = basic || {}\n\n\tconst {\n\t\tcountry: _country,\n\t\tpincode: _pincode,\n\t\tstate: _state,\n\t\tstreetName: _streetName,\n\t} = address || {}\n\n\tconst {\n\t\tcurrentSalary: _currentSalary,\n\t\teducation: _education,\n\t\texpected: _expected,\n\t\texperience: _experience,\n\t\tfunctionalArea: _functionalArea,\n\t\tindustry: _industry,\n\t\tskillSet: _skillSet,\n\t} = professional || {}\n\n\t// Basic\n\tconst [fullName, setFullName] = useState(_fullName)\n\n\tconst [primaryEmail, setPrimaryEmail] = useState(_primaryEmail)\n\tconst [secondaryEmail, setSecondaryEmail] = useState(_secondaryEmail)\n\tconst [mobile, setMobile] = useState(_mobile)\n\tconst [pan, setPan] = useState(_pan)\n\tconst [dateOfBirth, setDateOfBirth] = useState(pickerDateFormat(_dateOfBirth))\n\n\t// Address\n\tconst [streetName, setStreetName] = useState(_streetName)\n\tconst [state, setState] = useState(_state)\n\tconst [country, setCountry] = useState(_country)\n\tconst [pincode, setPincode] = useState(_pincode)\n\n\t// Professional\n\tconst [experience, setExperience] = useState(_experience || [])\n\tconst [education, setEducation] = useState(_education || [])\n\tconst [skillSet, setSkillSet] = useState(_skillSet || [])\n\tconst [skillSetVal, setSkillSetVal] = useState()\n\n\tconst [currentSalary, setCurrentSalary] = useState(_currentSalary)\n\tconst [expected, setExpected] = useState(_expected)\n\tconst [industry, setIndustry] = useState(_industry)\n\tconst [functionalArea, setFunctionalArea] = useState(_functionalArea)\n\n\tconst [jobTitle, setJobTitle] = useState()\n\tconst [company, setCompany] = useState()\n\tconst [summary, setSummary] = useState()\n\tconst [fromDate, setFromDate] = useState(pickerDateFormat())\n\tconst [tillDate, setTillDate] = useState(pickerDateFormat())\n\n\tconst [qualificationName, setQualificationName] = useState()\n\tconst [instituteName, setInstituteName] = useState()\n\tconst [studiedFromDate, setStudiedFromDate] = useState(pickerDateFormat())\n\tconst [studiedTillDate, setStudiedTillDate] = useState(pickerDateFormat())\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${candidateEndpoint}/${candidateCode}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\t\n\tconst addExpHandler = () => {\n\t\tconst data = {\n\t\t\tjobTitle,\n\t\t\tcompany,\n\t\t\tsummary,\n\t\t\tfromDate,\n\t\t\ttillDate,\n\t\t}\n\n\t\tconst tempExp = [...experience]\n\t\ttempExp.push(data)\n\t\tsetExperience(tempExp)\n\t}\n\n\tconst addEduHandler = () => {\n\t\tconst data = {\n\t\t\tqualificationName,\n\t\t\tinstituteName,\n\t\t\tstudiedFromDate,\n\t\t\tstudiedTillDate,\n\t\t}\n\n\t\tconst tempEdu = [...education]\n\t\ttempEdu.push(data)\n\t\tsetEducation(tempEdu)\n\t}\n\n\tconst saveHandler = async () => {\n\t\tconst candidateData = {\n\t\t\tbasic: {\n\t\t\t\tfullName,\n\t\t\t\tprimaryEmail,\n\t\t\t\tsecondaryEmail,\n\t\t\t\tmobile,\n\t\t\t\tpan,\n\t\t\t\tdateOfBirth: new Date(dateOfBirth),\n\t\t\t},\n\n\t\t\tprofessional: {\n\t\t\t\texperience,\n\t\t\t\teducation,\n\t\t\t\tskillSet,\n\t\t\t\tcurrentSalary: Number(currentSalary),\n\t\t\t\texpected: Number(expected),\n\t\t\t\tindustry,\n\t\t\t\tfunctionalArea,\n\t\t\t},\n\t\t\tcandidateCode: codeGenerator(fullName, pan, mobile),\n\t\t\tstatus: 'New',\n\t\t\tstage: 'Not Applied',\n\n\t\t\taddress: {\n\t\t\t\tstreetName,\n\t\t\t\tstate,\n\t\t\t\tcountry,\n\t\t\t\tpincode,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tawait axios.patch(\n\t\t\t\t\t`${candidateEndpoint}/${candidateCode}`,\n\t\t\t\t\tcandidateData,\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t)\n\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('Candidate Edited')\n\t\t\t} else {\n\t\t\t\tawait axios.post(candidateEndpoint, candidateData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('New Candidate Added')\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate Controls'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.candidate.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.candidate.create')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={saveHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Basic</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={fullName}\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\n\t\t\t\t\t\tlabel='Full Name'\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={[primaryEmail]}\n\t\t\t\t\t\tonChange={(e) => setPrimaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Primary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={secondaryEmail}\n\t\t\t\t\t\tonChange={(e) => setSecondaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Secondary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={mobile}\n\t\t\t\t\t\tonChange={(e) => setMobile(e.target.value)}\n\t\t\t\t\t\tlabel='Mobile No.'\n\t\t\t\t\t/> \n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pan}\n\t\t\t\t\t\tonChange={(e) => setPan(e.target.value)}\n\t\t\t\t\t\tlabel='PAN No'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Date of Birth'\n\t\t\t\t\t\tdefaultValue={dateOfBirth}\n\t\t\t\t\t\tonChange={(e) => setDateOfBirth(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Address</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={streetName}\n\t\t\t\t\t\tonChange={(e) => setStreetName(e.target.value)}\n\t\t\t\t\t\tlabel='Street Name'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}\n\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Professional</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={currentSalary}\n\t\t\t\t\t\tonChange={(e) => setCurrentSalary(e.target.value)}\n\t\t\t\t\t\tlabel='Current Salary'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={expected}\n\t\t\t\t\t\tonChange={(e) => setExpected(e.target.value)}\n\t\t\t\t\t\tlabel='Expected Salary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='industry'>Industry</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Finance'>Finance</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Marketing'>Marketing</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='functionalArea'>Functional Area</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Functional Area'\n\t\t\t\t\t\t\tvalue={functionalArea}\n\t\t\t\t\t\t\tonChange={(e) => setFunctionalArea(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Software'>Software</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Accounting'>Accounting</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t{skillSet.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(skillSet, setSkillSet)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, skillSetVal, skillSet, setSkillSet)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={skillSetVal}\n\t\t\t\t\t\t\tonChange={(e) => setSkillSetVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Skill Set'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</MultipleItemInputContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Experience</CardTitle>\n\n\t\t\t\t\t{experience.map(\n\t\t\t\t\t\t({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Job Title</h1>\n\t\t\t\t\t\t\t\t\t<p>{jobTitle}</p>\n\t\t\t\t\t\t\t\t\t<h1>Company</h1>\n\t\t\t\t\t\t\t\t\t<p>{company}</p>\n\t\t\t\t\t\t\t\t\t<h1>Summary</h1>\n\t\t\t\t\t\t\t\t\t<p>{summary}</p>\n\t\t\t\t\t\t\t\t\t<h1>From Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{fromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Till Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{tillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={company}\n\t\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\n\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={summary}\n\t\t\t\t\t\tonChange={(e) => setSummary(e.target.value)}\n\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='From Date'\n\t\t\t\t\t\tvalue={fromDate}\n\t\t\t\t\t\tonChange={(e) => setFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={tillDate}\n\t\t\t\t\t\tonChange={(e) => setTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addExpHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Education</CardTitle>\n\n\t\t\t\t\t{education.map(\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\tqualificationName,\n\t\t\t\t\t\t\tinstituteName,\n\t\t\t\t\t\t\tstudiedFromDate,\n\t\t\t\t\t\t\tstudiedTillDate,\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Qualification</h1>\n\t\t\t\t\t\t\t\t\t<p>{qualificationName}</p>\n\t\t\t\t\t\t\t\t\t<h1>Institute</h1>\n\t\t\t\t\t\t\t\t\t<p>{instituteName}</p>\n\n\t\t\t\t\t\t\t\t\t<h1>Studied From</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedFromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Studied Till</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedTillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={qualificationName}\n\t\t\t\t\t\tonChange={(e) => setQualificationName(e.target.value)}\n\t\t\t\t\t\tlabel='Qualification Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={instituteName}\n\t\t\t\t\t\tonChange={(e) => setInstituteName(e.target.value)}\n\t\t\t\t\t\tlabel='Institute Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Studied From Date'\n\t\t\t\t\t\tvalue={studiedFromDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Studied Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={studiedTillDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addEduHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateInput\n","import React from 'react'\nimport { PageLayout } from '../../styles'\nimport CandidateInput from './components/CandidateInput'\n\nfunction AddCandidate() {\n\treturn (\n\t\t<>\n\t\t\t<CandidateInput />\n\t\t</>\n\t)\n}\n\nexport default AddCandidate\n","import React from 'react'\nimport { Card, Category, CategoryGrid, CategoryMainTitle, Content, DataContainer, RemoveSpaces, Title } from '../../../styles'\nimport styled from 'styled-components'\nimport { get } from 'lodash'\nimport { formatDate } from '../../../utils/helperFunctions'\nimport { v4 as uuid } from 'uuid'\n\nfunction CandidateInfo({ data }) {\n\tconst { basic, professional, address, source } = data || {}\n\tconst { fullName, primaryEmail, secondaryEmail, mobile, pan, dateOfBirth } =\n\t\tbasic || {}\n\n\t\n\tconst {\n\t\texperience,\n\t\teducation,\n\t\tskillSet,\n\t\tcurrentSalary,\n\t\texpected,\n\t\tindustry,\n\t\tfunctionalArea,\n\t} = professional || {}\n\n\tconst { streetName, state, country, pincode } = address || {}\n\n\tconst renderExperience =\n\t\texperience &&\n\t\texperience.map(({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\treturn (\n\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Company</Title>\n\t\t\t\t\t\t<Content>{company}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Summary</Title>\n\t\t\t\t\t\t<Content>{summary}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>From Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(fromDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Till Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(tillDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t)\n\t\t})\n\n\tconst renderSkill =\n\t\tskillSet &&\n\t\tskillSet.map((skill) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{skill}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\tconst renderEducation =\n\t\teducation &&\n\t\teducation.map(\n\t\t\t({\n\t\t\t\tqualificationName,\n\t\t\t\tinstituteName,\n\t\t\t\tstudiedFromDate,\n\t\t\t\tstudiedTillDate,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Qualification</Title>\n\t\t\t\t\t\t\t<Content>{qualificationName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Institute</Title>\n\t\t\t\t\t\t\t<Content>{instituteName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Start Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedFromDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>End Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedTillDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Basic</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Fullname</Title>\n\t\t\t\t\t\t<Content>{fullName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Primary Email</Title>\n\t\t\t\t\t\t<Content>{primaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Secondary Email</Title>\n\t\t\t\t\t\t<Content>{secondaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Mobile</Title>\n\t\t\t\t\t\t<Content>{mobile}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>PAN Number</Title>\n\t\t\t\t\t\t<Content>{pan}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Date Of Birth</Title>\n\t\t\t\t\t\t<Content>{formatDate(dateOfBirth)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Street Name</Title>\n\t\t\t\t\t\t<Content>{streetName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>SkillSet</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderSkill}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Professional</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Functional Area</Title>\n\t\t\t\t\t\t<Content>{functionalArea}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Current Salary</Title>\n\t\t\t\t\t\t<Content>{currentSalary}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Expected Salary</Title>\n\t\t\t\t\t\t<Content>{expected}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t\t{renderExperience}\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Education</CategoryMainTitle>\n\t\t\t\t{renderEducation}\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default CandidateInfo\n\n\n","import { IconButton } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcandidateTab,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport CandidateInfo from './components/CandidateInfo'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport {\n\tcounter,\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport Table from '../../components/Table'\nimport { stages } from '../../utils/sharedVariables'\n\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction CandidateDetails({ match }) {\n\tconst id = match.params.id\n\tconst history = useHistory()\n\tconst tabLabels = ['Pipeline', 'Applied Jobs', 'Candidate Details']\n\tconst tabIndex = useRecoilValue(candidateTab)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${candidateEndpoint}/${id}`, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Deleted')\n\t\t} catch (e) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState()\n\n\tconst singleCandidate = candidates\n\t\t? candidates.find((candidate) => candidate.candidateCode === id)\n\t\t: candidate\n\n\tuseEffect(() => {\n\t\taxios.get(`${candidateEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst navHandler = () => {\n\t\thistory.push(`/candidate/edit/${id}`)\n\t}\n\n\tconst assignHandler = () => {\n\t\tsetChecked({ [singleCandidate._id]: true })\n\t\thistory.push('/job/apply')\n\t}\n\n\tconst headings = ['Job Code', 'Job Title', 'Openings', 'Status', 'Posted on']\n\tconst renderHeading = headings.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\tconst renderData = get(singleCandidate, 'statusIds', []).map((status) => {\n\t\treturn (\n\t\t\t<TableRow key={status._id}>\n\t\t\t\t<TableData>{status.jobId.jobDetails.jobCode}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t<TableData>{status.currentStage.stageName}</TableData>\n\t\t\t\t<TableData>{formatDate(status.jobId.createdAt)}</TableData>\n\t\t\t</TableRow>\n\t\t)\n\t})\n\n\tconst stageDataCount = counter(\n\t\tget(singleCandidate, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{renderWithLoader(\n\t\t\t\t\t\t\tsingleCandidate,\n\t\t\t\t\t\t\t<Table headings={renderHeading}>{renderData}</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\treturn <CandidateInfo data={singleCandidate} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={get(singleCandidate, 'basic.fullName', 'Loading..')}>\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t\t\t\t<IconButton onClick={toggleModal} color='secondary'>\n\t\t\t\t\t\t<Delete />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={assignHandler}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tAssign\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={navHandler}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={1}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={candidateTab} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateDetails\n","import React from 'react'\nimport JobPage from './JobPage'\nimport styled from 'styled-components'\nfunction ApplyJobList() {\n\treturn (\n\t\t<ApplyJobListContainer>\n\t\t\t<JobPage toApply />\n\t\t</ApplyJobListContainer>\n\t)\n}\n\nexport default ApplyJobList\n\nconst ApplyJobListContainer = styled.div`\n\twidth: 100%;\n\t\n`\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../recoil/atoms'\nimport {\n\tCard,\n\tCategoryMainTitle,\n\tCategory,\n\tCategoryGrid,\n\tDataContainer,\n\tTitle,\n\tContent,\n} from '../../styles'\nimport { formatDate } from '../../utils/helperFunctions'\n\nfunction ProfilePage() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { firstName, lastName, userName, email, contact, roleId, createdAt } =\n\t\tcurrentUser || {}\n\tconst { name } = roleId || {}\n\n\treturn (\n\t\t<>\n\t\t\t<Card>\n\t\t\t\t<Category>\n\t\t\t\t\t<CategoryMainTitle>Profile</CategoryMainTitle>\n\t\t\t\t\t<CategoryGrid>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>First Name</Title>\n\t\t\t\t\t\t\t<Content>{firstName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Last Name</Title>\n\t\t\t\t\t\t\t<Content>{lastName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Username</Title>\n\t\t\t\t\t\t\t<Content>{userName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Email</Title>\n\t\t\t\t\t\t\t<Content>{email}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Contact</Title>\n\t\t\t\t\t\t\t<Content>{contact}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Role</Title>\n\t\t\t\t\t\t\t<Content>{name}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Created At</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(createdAt)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t</Category>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n\nexport default ProfilePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n\tModalBody,\n\tModalTitle,\n\tModalWarning,\n\tModalText,\n\tModalButtonContainer,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport { IconButton } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport {\n\tcompanyAtom,\n\tcompanyCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport axios from 'axios'\nimport { companiesEndpoint } from '../../api'\nimport { v4 as uuid } from 'uuid'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport { selectedCompanies } from '../../recoil/selectors'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { SMUIButton, SMUIIconButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\n\nfunction CompanyPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\tconst [checked, setChecked] = useRecoilState(companyCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst selectedCompany = useRecoilValue(selectedCompanies)\n\n\tuseEffect(() => {\n\t\taxios.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\t\n\tconst companyHeading = [\n\t\t'Select',\n\t\t'Company Name',\n\t\t'Company Address',\n\t\t'Jobs Assigned',\n\t\t'Created On',\n\t]\n\n\tconst renderCompanyHeading = companyHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteManyHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(companiesEndpoint, selectedCompany, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Companies deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.success('Something went wrong')\n\t\t}\n\t}\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst renderCompanyData =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName, companyAddress, jobIds, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{companyName}</TableData>\n\t\t\t\t\t<TableData>{companyAddress}</TableData>\n\t\t\t\t\t<TableData>{jobIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Company'>\n\t\t\t\t{selectedCompany.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<SMUIModal open={isModalOpen} onClose={toggleModal}>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<ModalTitle>{selectedCompany.length} Items Selected</ModalTitle>\n\t\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t\t<SMUIButton onClick={toggleModal}>Cancel</SMUIButton>\n\t\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\t\tonClick={deleteManyHandler}\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</SMUIButton>\n\t\t\t\t\t</ModalButtonContainer>\n\t\t\t\t</ModalBody>\n\t\t\t</SMUIModal>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tcompanies,\n\t\t\t\t\t<Table headings={renderCompanyHeading}>{renderCompanyData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyPage\n","import styled from 'styled-components'\nimport { Button, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tContentContainer,\n\tRemoveSpaces,\n\tControlButton,\n} from '../../../styles'\nimport axios from 'axios'\nimport { companyEndpoint } from '../../../api'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from '../../../components/Toast'\n\nfunction CompanyInput() {\n\tconst history = useHistory()\n\tconst [companyName, setCompanyName] = useState('')\n\tconst [companyAddress, setCompanyAddress] = useState('')\n\n\tconst AddCompanyHandler = async () => {\n\t\tconst companyData = {\n\t\t\tcompanyName,\n\t\t\tcompanyAddress,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(companyEndpoint, companyData, { withCredentials: true })\n\t\t\ttoast.success('Company Added')\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Company'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={AddCompanyHandler}\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tvariant='contained'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<Title>Company Details</Title>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={companyName}\n\t\t\t\t\t\tonChange={(e) => setCompanyName(e.target.value)}\n\t\t\t\t\t\tlabel='Company Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvalue={companyAddress}\n\t\t\t\t\t\tonChange={(e) => setCompanyAddress(e.target.value)}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tlabel='Company Address'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyInput\n\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nconst CompanyTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\tfont-size: 0.8em;\n\t}\n`\n","import React from 'react'\nimport CompanyInput from './components/CompanyInput'\nimport styled from 'styled-components'\nfunction AddCompany() {\n\treturn (\n\t\t<>\n\t\t\t<CompanyInput />\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n\nconst AddCompanyContainer = styled.div`\n\t/* height: 100vh; */\n`\n","import { SMUIButton, SMUITextField } from '../../../styles/StyledMaterialUI'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces, StyledTextField } from '../../../styles'\nimport { Button, TextField, CircularProgress } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport {\n\tcredentialAtom,\n\tcurrentUserAtom,\n\tisAuthAtom,\n\tloading\n} from '../../../recoil/atoms'\nimport { useHistory } from 'react-router-dom'\nimport { loginEndpoint } from '../../../api'\n\nimport axios from 'axios'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\nimport { toast } from '../../../components/Toast'\n\nfunction SigninForm() {\n\tconst history = useHistory()\n\n\tconst [user, setUser] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [isAuth, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst submitHandler = async (e) => {\n\t\te.preventDefault()\n\t\tconst cred = { user, password }\n\t\tconst data = encryptObj(cred)\n\t\ttry {\n\t\t\tsetIsLoading(true);\n\t\t\tconst resData = await axios.post(\n\t\t\t\tloginEndpoint,\n\t\t\t\t{ data },\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\tif (resData.data.userData) {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetIsAuth(true)\n\t\t\t\tsetCurrentUser(resData.data.userData)\n\t\t\t\thistory.push('/dashboard')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetIsLoading(false);\n\t\t\ttoast.error('Invalid Credentials')\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<SigninFormContainer onSubmit={submitHandler}>\n\t\t\t<SiginFormTitle>SOS Dashboard</SiginFormTitle>\n\t\t\t<SiginFormDesc>Welcome Back, Please enter your credentials</SiginFormDesc>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={user}\n\t\t\t\tonChange={(e) => setUser(e.target.value)}\n\t\t\t\tlabel='Email / Username'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='text'\n\t\t\t/>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\tlabel='Password'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='password'\n\t\t\t/>\n\t\t\t<SignInButton type='submit' variant='contained' color='primary'>\n\t\t\t\t{/* Sign In */}\n\t\t\t\t{\n\t\t\t\t\tisLoading ? <CircularProgress size={24} style={{color: 'white'}} /> : \"Sign In\"\n\t\t\t\t}\n\t\t\t</SignInButton>\n\t\t</SigninFormContainer>\n\t)\n}\n\nexport default SigninForm\n\nconst SiginFormTitle = styled.h1`\n\t${RemoveSpaces};\n\tpadding-bottom: 5px;\n`\n\nconst SiginFormDesc = styled.p`\n\t${RemoveSpaces};\n\tpadding-bottom: 30px;\n`\n\nconst SigninInput = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t}\n`\n\nconst SignInButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px 0px;\n\n\t\t/* padding: 15px; */\n\t}\n`\n\nconst SigninFormContainer = styled.form`\n\tdisplay: flex;\n\tflex: 1;\n\tpadding: 70px;\n\tflex-direction: column;\n\ttext-align: left;\n\tjustify-content: space-around;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport SigninForm from './components/SigninForm'\nimport AuthIcon from '../../assets/icons/auth.svg'\n\nfunction Signin() {\n\treturn (\n\t\t<SigninContainer>\n\t\t\t{/* Image */}\n\t\t\t<AuthImage src={AuthIcon} />\n\n\t\t\t{/* SiginForm */}\n\t\t\t<SigninForm />\n\t\t</SigninContainer>\n\t)\n}\n\nexport default Signin\n\nconst SigninContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: space-around;\n\theight: 100%;\n`\n\nconst AuthImage = styled.img`\n\twidth: 500px;\n\tflex: 1;\n\tpadding: 70px;\n`\n","import { Button } from '@material-ui/core'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\nimport axios from 'axios'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { logoutEndpoint } from '../api'\nimport { currentUserAtom, isAuthAtom } from '../recoil/atoms'\nimport { RemoveSpaces, themeBorder } from '../styles/index'\nimport { toast } from './Toast'\n\nfunction Navbar() {\n\tconst [anchorEl, setAnchorEl] = useState(null)\n\tconst [, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst history = useHistory()\n\tconst handleClick = (event) => setAnchorEl(event.currentTarget)\n\tconst handleClose = () => setAnchorEl(null)\n\n\tconst navHandler = () => {\n\t\thistory.push(`/profile`)\n\t\thandleClose()\n\t}\n\n\tconst logoutHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.post(logoutEndpoint, {}, { withCredentials: true })\n\t\t\tsetIsAuth(false)\n\t\t\thandleClose()\n\t\t\thistory.push(`/`)\n\t\t} catch (e) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<NavbarContainer>\n\t\t\t<Logo>\n\t\t\t\tSwitch <LogoHighlight>On Success</LogoHighlight>\n\t\t\t</Logo>\n\n\t\t\t<Button startIcon={<AccountCircleOutlinedIcon />} onClick={handleClick}>\n\t\t\t\t{currentUser && currentUser.firstName}\n\t\t\t</Button>\n\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}>\n\t\t\t\t<MenuItem onClick={navHandler}>Profile</MenuItem>\n\t\t\t\t<MenuItem onClick={logoutHandler}>Logout</MenuItem>\n\t\t\t</Menu>\n\t\t</NavbarContainer>\n\t)\n}\n\nexport default Navbar\n\nconst NavbarContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tposition: sticky;\n\tpadding: 10px 20px;\n\t${themeBorder}\n\tborder-radius: 0px;\n\tjustify-content: space-between;\n`\nconst Logo = styled.h4`\n\t${RemoveSpaces};\n\tcolor: blue;\n`\n\nconst LogoHighlight = styled.span`\n\tcolor: orange;\n`\n","import { Checkbox, TextField } from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { roleEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport { SMUITextField } from '../../../styles/StyledMaterialUI'\n\nimport { toast } from '../../../components/Toast'\nimport { useHistory } from 'react-router-dom'\n\nfunction RoleInput() {\n\tconst history = useHistory()\n\n\tconst [name, setName] = useState('')\n\tconst [vendor, setVendor] = useState('')\n\n\tconst defaultPermissions = {\n\t\tjob: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tcandidate: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tuser: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\trole: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t}\n\n\tconst [permissions, setPermissions] = useState(defaultPermissions)\n\n\tuseEffect(() => {}, [])\n\n\tconst resetHandler = () => {}\n\n\tconst submitHandler = async () => {\n\t\tconsole.log({ permissions })\n\t\tconst roleData = {\n\t\t\tname,\n\t\t\tvendor,\n\t\t\tpermissions,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(roleEndpoint, roleData, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New Role Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst checkHandler = (e, role, type) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp[type] = checked\n\t\tif (\n\t\t\t!(\n\t\t\t\ttype === 'read' &&\n\t\t\t\t(permissionsTemp['delete'] || permissionsTemp['update'])\n\t\t\t)\n\t\t) {\n\t\t\tif ((type === 'delete' && checked) || (type === 'update' && checked)) {\n\t\t\t\tpermissionsTemp['read'] = checked\n\t\t\t}\n\t\t\tsetPermissions({\n\t\t\t\t...permissions,\n\t\t\t\t[role]: permissionsTemp,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst selectAllHandler = (e, role) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp.read = checked\n\t\tpermissionsTemp.create = checked\n\t\tpermissionsTemp.update = checked\n\t\tpermissionsTemp.delete = checked\n\t\tsetPermissions({\n\t\t\t...permissions,\n\t\t\t[role]: permissionsTemp,\n\t\t})\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Role'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={submitHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Role Details</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={vendor}\n\t\t\t\t\t\tonChange={(e) => setVendor(e.target.value)}\n\t\t\t\t\t\tlabel='Vendor'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Permissions</CardTitle>\n\t\t\t\t\t<PermissionTable>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'job')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Jobs</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'candidate')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Candidates</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'role')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Roles</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'user')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>User</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</PermissionTable>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RoleInput\n\nconst RoleTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 5px 0px;\n\t}\n`\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 10px 0px;\n`\n\nconst PermissionTable = styled.table`\n\twidth: 100%;\n\ttext-align: left;\n\tborder-collapse: collapse;\n`\nconst PermissionTableRow = styled.tr`\n\tdisplay: flex;\n`\n\nconst PermissionTableData = styled.td`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst PermissionTableHead = styled.th`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst Content = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 10px;\n`\n","import React from 'react'\nimport Controls from '../../components/Controls'\nimport RoleInput from './components/RoleInput'\n\nfunction AddRole() {\n    return (\n        <div>\n          <RoleInput/>\n        </div>\n    )\n}\n\nexport default AddRole\n","import {\n\tInputLabel,\n\tMenuItem\n} from '@material-ui/core'\nimport axios from 'axios'\nimport passwordGenerator from 'generate-password'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport { rolesEndpoint, userEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { toast } from '../../../components/Toast'\nimport { roleAtom } from '../../../recoil/atoms'\nimport {\n\tCard, ContentContainer, ControlButton,\n\n\n\n\tRemoveSpaces, StyledCheckbox\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField\n} from '../../../styles/StyledMaterialUI'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\n//------------\n\nfunction UserInput() {\n\tconst history = useHistory()\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [roleId, setRoleId] = useState('')\n\n\tconst [firstName, setFirstName] = useState('')\n\tconst [lastName, setLastName] = useState('')\n\tconst [userName, setUserName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [contact, setContact] = useState('')\n\tconst [isAutoGenerated, setIsAutoGenerated] = useState('')\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst saveUserHandler = async () => {\n\t\tconst userData = {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tuserName,\n\t\t\tpassword,\n\t\t\temail,\n\t\t\tcontact,\n\t\t\troleId,\n\t\t}\n\t\tconst data = encryptObj(userData)\n\n\t\ttry {\n\t\t\tawait axios.post(userEndpoint, { data }, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New User Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('New User Added')\n\t\t}\n\t}\n\n\tconst autoGeneratePassword = (e) => {\n\t\tconst checked = e.target.checked\n\n\t\tsetIsAutoGenerated(checked)\n\t\tif (checked) {\n\t\t\tconst password = passwordGenerator.generate({\n\t\t\t\tlength: 14,\n\t\t\t\tnumbers: true,\n\t\t\t\tsymbols: true,\n\t\t\t\texcludeSimilarCharacters: true,\n\t\t\t})\n\t\t\tsetPassword(password)\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add User'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={saveUserHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='role'>Role</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Role'\n\t\t\t\t\t\t\tvalue={roleId}\n\t\t\t\t\t\t\tonChange={(e) => setRoleId(e.target.value)}>\n\t\t\t\t\t\t\t{roles &&\n\t\t\t\t\t\t\t\troles.map((role) => {\n\t\t\t\t\t\t\t\t\treturn <MenuItem key={role._id} value={role._id}>{role.name}</MenuItem>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tdisabled={isAutoGenerated}\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t/>\n\t\t\t\t\t<AutoGeneratorPassContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isAutoGenerated}\n\t\t\t\t\t\t\tonChange={autoGeneratePassword}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AutoGeneratorLabel>Auto Generated</AutoGeneratorLabel>\n\t\t\t\t\t</AutoGeneratorPassContainer>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\n\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\n\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={contact}\n\t\t\t\t\t\tonChange={(e) => setContact(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Contact No.'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserInput\n\nconst AutoGeneratorPassContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\n\nconst AutoGeneratorLabel = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React from 'react'\nimport UserInput from './components/UserInput'\n\nfunction AddUser() {\n    return (\n        <>\n            <UserInput/>\n        </>\n    )\n}\n\nexport default AddUser\n","import React from 'react'\nimport JobInput from './components/JobInput'\n\nfunction EditJob(props) {\n\treturn (\n\t\t<>\n\t\t\t<JobInput edit {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditJob\n","import { MenuItem } from '@material-ui/core'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Timeline, TimelineEvent } from 'react-event-timeline'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint, statusEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tappliedCandidateTabAtom,\n\tcandidateAtom,\n\tcurrentUserAtom,\n\tstatusAtom,\n} from '../../recoil/atoms'\n\nimport { Card, ContentContainer, ControlButton } from '../../styles'\nimport { SMUISelect } from '../../styles/StyledMaterialUI'\nimport { formatDate } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport CandidateInfo from './components/CandidateInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction AppliedCandidate({ match }) {\n\tconst { id } = match.params\n\n\tconst history = useHistory()\n\tconst tabIndex = useRecoilValue(appliedCandidateTabAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [status, setStatus] = useRecoilState(statusAtom)\n\tconst [selectedStage, setSelectedStage] = useState(newStageGenerator()[0])\n\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState()\n\tconst { candidateId } = status || {}\n\tconst singleCandidate = () =>\n\t\tcandidates\n\t\t\t? candidates.find((candidate) => candidate._id.toString() === candidateId)\n\t\t\t: candidate\n\n\t//new stage --> stages\n\t//Current stage -> new stage\n\n\tuseEffect(() => {\n\t\taxios.get(`${statusEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setStatus(data))\n\t\t\t.catch((e) => console.log(e))\n\n\t\taxios.get(`${candidateEndpoint}/${candidateId}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t\t// setSelectedStage(get(status, 'currentStage.stageName', ''))\n\t}, [candidateId])\n\n\tconst changeStageHangler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(\n\t\t\t\t`${statusEndpoint}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tstageName: selectedStage,\n\t\t\t\t\tuserId: currentUser._id,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Stage Change')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst tabLabels = ['Timeline', 'Candidate Details']\n\n\tconst renderTimelineData = get(status, 'stages', []).map(\n\t\t({ stageName, createdAt, userId }) => {\n\t\t\treturn (\n\t\t\t\t<TimelineEvent\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\ttitle={`${stageName} set by ${userId.firstName} ${userId.lastName}`}\n\t\t\t\t\tcreatedAt={formatDate(createdAt)}></TimelineEvent>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Timeline>{renderTimelineData}</Timeline>\n\t\t\t\t\t</Card>\n\t\t\t\t)\n\t\t\tcase 1:\n\t\t\t\treturn <CandidateInfo data={singleCandidate()} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\t// const renderStageOption =\n\t// \tstatus &&\n\t// \tstages\n\t// \t\t.filter((stage) => stage !== status.currentStage.stageName)\n\t// \t\t.map((stage) => {\n\t// \t\t\treturn <MenuItem value={stage}>{stage}</MenuItem>\n\t// \t\t})\n\n\tfunction newStageGenerator() {\n\t\tconst currentStatus = status && status.currentStage.stageName\n\t\tconst index = stages.indexOf(currentStatus)\n\t\tconst newStages = stages.slice(index + 1)\n\t\treturn newStages\n\t}\n\n\tconst renderStageOption = newStageGenerator().map((stage) => {\n\t\treturn <MenuItem key={uuid()} value={stage}>{stage}</MenuItem>\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate'>\n\t\t\t\t<SMUISelect\n\t\t\t\t\tvalue={selectedStage}\n\t\t\t\t\tonChange={(e) => setSelectedStage(e.target.value)}>\n\t\t\t\t\t{renderStageOption}\n\t\t\t\t</SMUISelect>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={changeStageHangler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSet\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={appliedCandidateTabAtom} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default AppliedCandidate\n","import React from 'react'\nimport CandidateInput from './components/CandidateInput'\n\nfunction EditCandidate(props) {\n\treturn (\n\t\t<>\n\t\t\t<CandidateInput edit {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditCandidate\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Sidebar from './components/Sidebar'\nimport { HashRouter, Switch, Route, useHistory } from 'react-router-dom'\nimport DashboardPage from './pages/Dashboard'\nimport JobPage from './pages/Job/JobPage'\nimport CandidatePage from './pages/Candidate'\nimport RolePage from './pages/Role'\nimport UserPage from './pages/User'\nimport AddJob from './pages/Job/AddJob'\nimport JobDetails from './pages/Job/JobDetails'\nimport AddCandidate from './pages/Candidate/AddCandidate'\nimport CandidateDetails from './pages/Candidate/CandidateDetails'\nimport ApplyJobList from './pages/Job/ApplyJobList'\nimport ProfilePage from './pages/Profile'\nimport CompanyPage from './pages/Company'\nimport AddCompany from './pages/Company/AddCompany'\nimport Signin from './pages/Signin'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { credentialAtom, currentUserAtom, isAuthAtom } from './recoil/atoms'\nimport Navbar from './components/Navbar'\nimport AddRole from './pages/Role/AddRole'\nimport AddUser from './pages/User/AddUser'\nimport EditJob from './pages/Job/EditJob'\nimport axios from 'axios'\nimport { verifyEndpoint } from './api'\nimport AppliedCandidate from './pages/Candidate/AppliedCandidate'\nimport EditCandidate from './pages/Candidate/EditCandidate'\nimport Loader from './components/Loader'\n\nfunction App() {\n\tconst [isAuth, setAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n\n\t// CurrentUser Null --> skeleton\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.post(verifyEndpoint, {}, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetAuth(true)\n\t\t\t\tsetCurrentUser(data.userData)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tsetAuth(false)\n\t\t\t\tsetCurrentUser({})\n\t\t\t})\n\t}, [])\n\n\tconst routes = (\n\t\t<Switch>\n\t\t\t<Route path='/dashboard' exact component={DashboardPage} />\n\t\t\t<Route path='/job/add' component={AddJob} />\n\t\t\t<Route path='/job/apply' component={ApplyJobList} />\n\t\t\t<Route path='/job/edit/:id' component={EditJob} />\n\t\t\t<Route path='/job/:id' component={JobDetails} />\n\t\t\t<Route path='/job' component={JobPage} />\n\n\t\t\t<Route path='/candidate/add' component={AddCandidate} />\n\t\t\t<Route path='/candidate/edit/:id' component={EditCandidate} />\n\n\t\t\t<Route path='/candidate/:id' component={CandidateDetails} />\n\t\t\t<Route path='/candidate' component={CandidatePage} />\n\n\t\t\t<Route path='/company/add' component={AddCompany} />\n\t\t\t<Route path='/company' component={CompanyPage} />\n\n\t\t\t<Route path='/role/add' component={AddRole} />\n\t\t\t<Route path='/role' component={RolePage} />\n\n\t\t\t<Route path='/user/add' component={AddUser} />\n\t\t\t<Route path='/user' component={UserPage} />\n\n\t\t\t<Route path='/profile' component={ProfilePage} />\n\t\t\t<Route path='/applied/:id' component={AppliedCandidate} />\n\t\t</Switch>\n\t)\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t{currentUser ? (\n\t\t\t\t<HashRouter>\n\t\t\t\t\t{isAuth ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t\t<ComponentContainer>{routes}</ComponentContainer>\n\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Route path='/' exact component={Signin} />\n\t\t\t\t\t)}\n\t\t\t\t</HashRouter>\n\t\t\t) : (\n\t\t\t\t<Loader />\n\t\t\t)}\n\t\t</AppContainer>\n\t)\n}\n\nexport default App\n\nconst AppContainer = styled.div`\n\ttext-align: center;\n\theight: 100%;\n`\nconst Layout = styled.div`\n\tdisplay: flex;\n\theight: 90%;\n\twidth: 100%;\n`\n\nconst ComponentContainer = styled.div`\n\tflex: 1;\n\tbackground-color: #0000000d;\n\t/* height: 100%; */\n\toverflow-y: auto;\n\tscroll-behavior: smooth;\n\t/* padding: 10px; */\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { RecoilRoot } from 'recoil'\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RecoilRoot>\n\t\t\t<App />\n\t\t</RecoilRoot>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}