{"version":3,"sources":["assets/icons/add.svg","assets/icons/candidate.svg","assets/icons/company.svg","assets/icons/dashboard.svg","assets/icons/job.svg","assets/icons/role.svg","assets/icons/user.svg","assets/icons/dual-ball-loader.svg","assets/icons/search.svg","assets/icons/auth.svg","assets/icons/arrow.svg","components/Loader.js","styles/index.js","components/Table/index.js","components/TableSkeletonLoader.js","utils/helperFunctions.js","recoil/atoms.js","components/Sidebar.js","components/PieChart.js","api/index.js","components/Toast.js","components/ChartSkeleton.js","pages/Dashboard/index.js","components/Search.js","components/Controls.js","styles/StyledMaterialUI.js","components/Modals/DeleteModal.js","recoil/selectors.js","pages/Job/components/NewTable.js","pages/Job/JobPage.js","components/SearchBar.js","pages/Candidate/index.js","pages/Role/index.js","pages/User/index.js","pages/Job/components/JobInput.js","pages/Job/AddJob.js","components/PageTab.js","utils/sharedVariables.js","pages/Job/components/JobInfo.js","pages/Job/JobDetails.js","pages/Candidate/components/CandidateInput.js","pages/Candidate/AddCandidate.js","pages/Candidate/components/CandidateInfo.js","pages/Candidate/CandidateDetails.js","pages/Job/ApplyJobList.js","pages/Profile/index.js","pages/Company/index.js","pages/Company/components/CompanyInput.js","pages/Company/AddCompany.js","pages/Signin/components/SigninForm.js","pages/Signin/index.js","components/Navbar.js","pages/Role/components/RoleInput.js","pages/Role/AddRole.js","pages/User/components/UserInput.js","pages/User/AddUser.js","pages/Job/EditJob.js","pages/Candidate/AppliedCandidate.js","pages/Candidate/EditCandidate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","LoaderContainer","LoaderIconContainer","src","LoaderIcon","styled","div","img","RemoveSpaces","css","themeBorder","MultipleItemInputContainer","form","Card","CardTitle","h5","StyledNavlink","NavLink","TableRow","tr","TableData","td","TableHead","th","ItemListContainer","h3","label","TextField","ul","ItemList","li","ContentContainer","p","ControlButton","Button","StyledCheckbox","input","ModalBody","ModalTitle","h4","ModalWarning","ModalText","ModalButtonContainer","PipelineContainer","PipelineCard","PipelineTitle","PipelineStat","Category","CategoryGrid","DataContainer","CategoryMainTitle","h1","Title","Content","Table","headings","children","TableContainer","TableHeadContainer","TableHeadingRow","TableBody","table","tbody","thead","TableSkeletonLoader","renderTableHeading","renderTableBody","limit","i","push","key","uuid","loopHead","loopBody","codeGenerator","field1","field2","field3","abbreviator","str","strArr","split","length","substring","toUpperCase","code","charCode","codeDigit","charCodeAt","compressedFields","join","charCodeLeft","charCodeRight","addValToArr","e","val","data","setData","preventDefault","includes","tempData","renderArr","map","item","onClick","dataTemp","filter","removeValFromArr","trueKeysToArr","obj","Object","keys","id","titleGenerator","arr","title","count","renderWithLoader","component","encryptObj","objStr","JSON","stringify","cryptojs","AES","encrypt","process","toString","formatDate","date","dateArr","Date","toDateString","shift","counter","countObj","pickerDateFormat","dateStr","toISOString","jobAtom","atom","default","candidateAtom","companyAtom","roleAtom","userAtom","statsAtom","jobCheckedAtom","candidateCheckedAtom","companyCheckedAtom","roleCheckedAtom","userCheckedAtom","jobTab","candidateTab","appliedCandidateTabAtom","isAuthAtom","email","password","currentUserAtom","statusAtom","Sidebar","permissions","useRecoilValue","roleId","activeLinkStyle","color","backgroundColor","fontWeight","boxShadow","SidebarContainer","MenuItem","uniqueID","activeStyle","to","NavIcon","DashboardIcon","get","JobIcon","CandidateIcon","CompanyIcon","RoleIcon","UserIcon","PieChart","labels","chartData","datasets","ChartContainer","API_URI","deleteJobs","getCandidates","jobEndpoint","jobsEndpoint","candidateEndpoint","candidatesEndpoint","companyEndpoint","companiesEndpoint","roleEndpoint","rolesEndpoint","userEndpoint","usersEndpoint","loginEndpoint","logoutEndpoint","verifyEndpoint","statusEndpoint","statsEndpoint","toast","configure","position","POSITION","BOTTOM_RIGHT","autoClose","pauseOnFocusLoss","toastId","draggablePercent","ChartSkeleton","ChartCard","TitleContainer","width","circle","height","DashboardPage","useRecoilState","stats","setStats","useEffect","axios","withCredentials","then","catch","error","console","log","PieContainer","job","assigned","unassigned","ChartTitle","total","candidate","applied","unapplied","Search","onChange","SearchDiv","InputBase","placeholder","inputProps","Controls","onSearchChange","search","ControlContainer","ControlTitle","ControlSearch","ControlButtonContainer","SMUIButton","SMUITextField","SMUISelect","Select","SMUIFormControl","FormControl","SMUIIconButton","IconButton","SMUIModal","Modal","DeleteModal","open","onClose","deleteHandler","variant","filterTrueJobChecked","selector","checkedJob","filterTrueCandidateChecked","checkedCandidate","selectedCompanies","companyChecked","selectedRoles","roleChecked","selectedUsers","userChecked","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableCell","padding","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","jobData","setFilterData","currentUser","history","useHistory","location","useLocation","pathname","Toolbar","clsx","Typography","style","textAlign","margin","inputVal","target","value","filterData","jobOpeningInfo","jobTitle","toLowerCase","companyDetails","companyId","companyName","jobDetails","jobCode","jobAddress","city","Tooltip","aria-label","useStyles","paper","marginBottom","minWidth","border","clip","overflow","top","EnhancedTable","toApply","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","dense","rowsPerPage","setRowsPerPage","rows","company","openings","resumes","postedOn","noOfOpenings","statusIds","createdAt","emptyRows","Math","min","Paper","aria-labelledby","size","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","JobPage","setJobData","setChecked","ids","isModalOpen","setIsModalOpen","toggleModal","jobHeading","patch","success","heading","_id","newData","onCheckHandler","SearchBar","CandidatePage","candidateData","setCandidateData","renderCandidateHeading","renderCandidateData","candidateCode","basic","fullName","primaryEmail","mobile","address","state","professional","industry","functionalArea","toPage","link","AddCircle","RolePage","roles","setRoles","renderHeading","renderRoleData","name","vendor","users","checkHandler","UserPage","setUsers","renderUserHeading","showUsers","user","renderUserData","firstName","lastName","userName","contact","JobInput","edit","match","jobId","companies","setCompanies","jobs","find","setJob","setJobTitle","jobType","setJobType","setIndustry","noOfOpening","setNoOfOpening","setCompanyId","isCompanyDetailsVisible","setIsCompanyDetailsVisible","jobLocation","setJobLocation","setCity","zone","setZone","setState","pincode","setPincode","country","setCountry","jobDescription","setJobDescription","eligibility","setEligibility","eligibilityVal","setEligibilityVal","responsibilities","setResponsibilities","responsibilitiesVal","setResponsibilitiesVal","benefits","setBenefits","benefitsVal","setBenefitsVal","additionalInformation","setAdditionalInformation","targetDate","setTargetDate","saveHandler","isEdit","newJobData","assignedOn","Number","source","goBack","post","renderCompaniesOption","JobInputContainer","InputLabel","CheckBoxContainer","CheckBoxLabel","onSubmit","multiline","rowsMax","defaultValue","AddJob","PageTab","setValue","renderLabels","Tab","TabBG","Tabs","_event","newValue","indicatorColor","textColor","stages","JobInfo","companyAddress","renderList","JobDetails","params","jobTabIndex","jobFullData","selectedJob","stageDataCount","statusId","currentStage","stageName","renderPipeline","stage","candidateId","delete","renderTabBody","CandidateInput","candidates","setCandidate","_fullName","_primaryEmail","_secondaryEmail","secondaryEmail","_mobile","_pan","pan","_dateOfBirth","dateOfBirth","_country","_pincode","_state","_streetName","streetName","_currentSalary","currentSalary","_education","education","_expected","expected","_experience","experience","_functionalArea","_industry","_skillSet","skillSet","setFullName","setPrimaryEmail","setSecondaryEmail","setMobile","setPan","setDateOfBirth","setStreetName","setExperience","setEducation","setSkillSet","skillSetVal","setSkillSetVal","setCurrentSalary","setExpected","setFunctionalArea","setCompany","summary","setSummary","fromDate","setFromDate","tillDate","setTillDate","qualificationName","setQualificationName","instituteName","setInstituteName","studiedFromDate","setStudiedFromDate","studiedTillDate","setStudiedTillDate","status","tempExp","tempEdu","AddCandidate","CandidateInfo","renderExperience","renderSkill","skill","renderEducation","CandidateDetails","singleCandidate","renderData","ApplyJobList","ApplyJobListContainer","ProfilePage","CompanyPage","selectedCompany","renderCompanyHeading","deleteManyHandler","renderCompanyData","jobIds","CompanyInput","setCompanyName","setCompanyAddress","AddCompanyHandler","companyData","CompanyTextField","AddCompany","SigninForm","setUser","setPassword","setIsAuth","setCurrentUser","isLoading","setIsLoading","submitHandler","resData","userData","SigninFormContainer","SiginFormTitle","SiginFormDesc","SigninInput","required","SignInButton","CircularProgress","Signin","SigninContainer","AuthImage","AuthIcon","Navbar","anchorEl","setAnchorEl","handleClose","logoutHandler","NavbarContainer","Logo","LogoHighlight","startIcon","currentTarget","Menu","keepMounted","Boolean","span","RoleInput","setName","setVendor","create","update","read","setPermissions","roleData","permissionsTemp","selectAllHandler","PermissionTable","PermissionTableRow","PermissionTableHead","PermissionTableData","AddRole","UserInput","setRoleId","setFirstName","setLastName","setUserName","setEmail","setContact","isAutoGenerated","setIsAutoGenerated","saveUserHandler","disabled","AutoGeneratorPassContainer","passwordGenerator","generate","numbers","symbols","excludeSimilarCharacters","AutoGeneratorLabel","AddUser","EditJob","AppliedCandidate","setStatus","newStageGenerator","selectedStage","setSelectedStage","changeStageHangler","userId","renderTimelineData","currentStatus","renderStageOption","EditCandidate","App","isAuth","setAuth","routes","path","exact","AppContainer","Layout","ComponentContainer","isLocalhost","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","href","origin","addEventListener","fetch","headers","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.864fce68.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.15cf12ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.5138f324.svg\";","module.exports = __webpack_public_path__ + \"static/media/company.5c37dd19.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.3949fa5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.df887e14.svg\";","module.exports = __webpack_public_path__ + \"static/media/role.9f9a7329.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.a0b238c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/dual-ball-loader.d6d67d34.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.19142cc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/auth.910669c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.dc486541.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport LoaderIcon from '../assets/icons/dual-ball-loader.svg'\n\nfunction Loader() {\n\treturn (\n\t\t<LoaderContainer>\n\t\t\t<LoaderIconContainer src={LoaderIcon} />\n\t\t</LoaderContainer>\n\t)\n}\n\nexport default Loader\n\nconst LoaderContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n`\n\nconst LoaderIconContainer = styled.img`\n\twidth: 100px;\n`\n","import styled, { css } from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport {\n\tButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tTextField,\n} from '@material-ui/core'\n\nexport const RemoveSpaces = css`\n\tmargin: 0px;\n\tpadding: 0px;\n`\n\nexport const themeBorder = css`\n\tborder: 1px solid #0000003b;\n\tborder-radius: 6px;\n`\n\nexport const MultipleItemInputContainer = styled.form`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n`\n\nexport const Card = styled.div`\n\tpadding: 10px 20px;\n\t/* border-radius: 3px; */\n\t/* border: 1px solid #0000003b; */\n\tbackground-color: white;\n\tmargin-bottom: 10px;\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nexport const CardTitle = styled.h5`\n\ttext-align: left;\n\tcolor: #333;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nexport const StyledNavlink = styled(NavLink)`\n\twidth: 150px;\n\tpadding: 6px 10px;\n\tborder-radius: 0.25rem;\n\tdisplay: flex;\n\talign-items: center;\n\tcolor: black;\n\ttext-decoration: none;\n\tfont-weight: 400;\n\t&:focus {\n\t\tcolor: black;\n\t}\n\t&:hover {\n\t\tcolor: black;\n\t}\n`\n\nexport const TableRow = styled.tr`\n\t/* cursor: pointer; */\n\ttransition: all 0.5s;\n\t&:hover {\n\t\tbackground-color: #eef0f7;\n\t}\n`\n\nexport const TableData = styled.td`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n`\n\nexport const TableHead = styled.th`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n\tcolor: #000000c2;\n`\nexport const PageLayout = styled.div`\n\t/* width: 100%; */\n\tpadding: 10px;\n`\n\nexport const InputContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\talign-items: flex-start;\n`\n\nexport const CategoryContainer = styled.div``\n\nexport const CategoryTitle = styled.h3`\n\t${RemoveSpaces};\n`\n\nexport const Label = styled.label``\n\nexport const StyledTextField = styled(TextField)`\n\twidth: 100%;\n\tmargin: 10px;\n`\n\nexport const ItemListContainer = styled.ul`\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n\tdisplay: flex;\n\tpadding: 10px;\n\tborder: 1px dashed #0000003b;\n\tbackground-color: #0000000d;\n\tborder-radius: 6px;\n\tmargin: 20px 0px;\n\tflex-flow: wrap;\n`\n\nexport const ItemList = styled.li`\n\tmargin: 5px;\n\tpadding: 5px 10px;\n\tborder-radius: 6px;\n\tbackground-color: white;\n\tborder: 1px solid #0000003b;\n`\nexport const DataTitle = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n`\n\nexport const DataContent = styled.p`\n\t${RemoveSpaces};\n\ttext-align: left;\n`\n\nexport const ContentContainer = styled.div`\n\tpadding: 10px;\n`\n\nexport const IconButton = styled.img`\n\twidth: 28px;\n\tcursor: pointer;\n`\n\nexport const ControlButton = styled(Button)`\n\t&& {\n\t\tmargin: 5px;\n\t\tpadding: 2px 10px;\n\t}\n`\n\nexport const StyledCheckbox = styled.input`\n\twidth: 18px;\n\theight: 18px;\n`\n\n// Modal\n\nexport const ModalBody = styled.div`\n\tbackground-color: white;\n\tmargin-top: 50px;\n\tpadding: 20px;\n\tborder-radius: 5px;\n`\nexport const ModalTitle = styled.h4`\n\t${RemoveSpaces};\n\tpadding-bottom: 10px;\n`\n\nexport const ModalWarning = styled.p`\n\t${RemoveSpaces}\n\tpadding: 10px;\n\tfont-weight: bold;\n\tborder: 2px solid red;\n\tborder-radius: 5px;\n\tborder-left: 10px solid red;\n`\n\nexport const ModalText = styled.p`\n\t${RemoveSpaces};\n\tpadding-top: 10px;\n`\n\nexport const ModalButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-top: 20px;\n`\n\n//Pipeline\nexport const PipelineContainer = styled(Card)`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\trow-gap: 1em;\n\tpadding: 50px;\n`\nexport const PipelineCard = styled.div`\n\tdisplay: flex;\n\tpadding: 20px;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: #4caf5029;\n\tmargin: 0px;\n\theight: 50px;\n\ttransition: all 0.3s;\n\tclip-path: polygon(90% 0, 100% 50%, 90% 100%, 0% 100%, 10% 50%, 0% 0%);\n\n\t&:hover {\n\t\tbackground-color: #ffc10726;\n\t\ttransform: translateX(10px);\n\t}\n`\nexport const PipelineTitle = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-weight: lighter;\n\tfont-size: 1.25em;\n`\n\nexport const PipelineStat = styled.p`\n\t${RemoveSpaces};\n\tpadding-right: 10px;\n\n\tfont-size: 2em;\n\tfont-weight: bold;\n\tcolor: #333;\n`\n\n//\nexport const Category = styled.div`\n\tpadding: 20px;\n`\n\nexport const CategoryGrid = styled.div`\n\tdisplay: grid;\n\tgap: 1em;\n\tgrid-template-columns: repeat(2, 1fr);\n\tpadding-bottom: 20px;\n`\n\nexport const DataContainer = styled.div`\n\ttext-align: left;\n`\nexport const CategoryMainTitle = styled.h1`\n\t${RemoveSpaces};\n\ttext-align: left;\n\tcolor: #333;\n\tfont-size: 1.5em;\n\tpadding-bottom: 15px;\n`\n\nexport const Title = styled.h3`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1em;\n`\n\nexport const Content = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1.2em;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { themeBorder } from '../../styles'\n\nfunction Table({ headings, children }) {\n\treturn (\n\t\t<TableContainer>\n\t\t\t<TableHeadContainer>\n\t\t\t\t<TableHeadingRow>{headings}</TableHeadingRow>\n\t\t\t</TableHeadContainer>\n\t\t\t<TableBody>{children}</TableBody>\n\t\t</TableContainer>\n\t)\n}\n\nexport default Table\n\nconst TableHeadingRow = styled.tr`\n\tbackground-color: #eef0f7;\n\tcolor: #eee;\n`\n\nconst TableContainer = styled.table`\n\tpadding: 5px;\n\tborder: 0;\n\twidth: 100%;\n\tbackground-color: white;\n\t/* box-shadow: 2px 3px 20px 0px #00000017; */\n\t/* border-collapse: collapse; */\n\toverflow: scroll;\n\t/* ${themeBorder}; */\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nconst TableBody = styled.tbody``\n\nconst TableHeadContainer = styled.thead``\n","import React from 'react'\nimport Table from './Table'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { TableData, TableHead, TableRow } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction TableSkeletonLoader() {\n\tlet renderTableHeading = []\n\tlet renderTableBody = []\n\n\tconst loopHead = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableHeading.push(\n\t\t\t\t<TableHead key={uuid()}>\n\t\t\t\t\t<Skeleton />\n\t\t\t\t</TableHead>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst loopBody = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableBody.push(\n\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t}\n\n\tloopHead(6)\n\tloopBody(6)\n\n\treturn <Table headings={renderTableHeading}>{renderTableBody}</Table>\n}\n\nexport default TableSkeletonLoader\n","import React from 'react'\nimport Loader from '../components/Loader'\nimport { Card, ItemList, TableData, TableHead, TableRow } from '../styles'\nimport cryptojs from 'crypto-js'\nimport { v4 as uuid } from 'uuid'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport TableSkeletonLoader from '../components/TableSkeletonLoader'\n\nexport const codeGenerator = (field1, field2, field3) => {\n\t//Helper Function\n\tconst abbreviator = (str, limit) => {\n\t\tconst strArr = str.split(' ')\n\t\tif (strArr.length === 1) {\n\t\t\treturn str.substring(0, limit).toUpperCase()\n\t\t} else {\n\t\t\tlet code = ''\n\t\t\tfor (let letter of strArr) {\n\t\t\t\tcode += letter[0]\n\t\t\t}\n\t\t\treturn code.substring(0, limit).toUpperCase()\n\t\t}\n\t}\n\n\tconst charCode = (str) => {\n\t\tlet codeDigit = 0\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tcodeDigit += str.charCodeAt(i) - 64\n\t\t}\n\t\treturn codeDigit\n\t}\n\n\t// Converting full string to short form\n\tconst compressedFields = [\n\t\tabbreviator(field1, 2),\n\t\tabbreviator(field2, 2),\n\t\tabbreviator(field3, 2),\n\t].join('')\n\n\t// Char code of field\n\tconst charCodeLeft = charCode(field1)\n\tconst charCodeRight = charCode(field2)\n\n\treturn `${compressedFields}${charCodeLeft}${charCodeRight}`\n}\n\nexport const addValToArr = (e, val, data, setData) => {\n\te.preventDefault()\n\tif (!data.includes(val)) {\n\t\tconst tempData = [...data]\n\t\ttempData.push(val)\n\t\tsetData(tempData)\n\t}\n}\n\nconst removeValFromArr = (item, data, setData) => {\n\tlet dataTemp = [...data]\n\tdataTemp = dataTemp.filter((val) => val !== item)\n\tsetData(dataTemp)\n}\n\nexport const renderArr = (data, setData) =>\n\tdata.map((item) => (\n\t\t<ItemList\n\t\t\tonClick={() => removeValFromArr(item, data, setData)}\n\t\t\tkey={uuid()}>\n\t\t\t{item} X\n\t\t</ItemList>\n\t))\n\nexport const trueKeysToArr = (obj) => {\n\tconst ids = Object.keys(obj)\n\treturn ids.filter((id) => obj[id] === true)\n}\n\nexport const titleGenerator = (arr, title) => {\n\tconst count = arr.length\n\tif (count > 0) {\n\t\treturn `${count} Selected`\n\t} else {\n\t\treturn title\n\t}\n}\n\nexport const renderWithLoader = (val, component) =>\n\tval ? (\n\t\tcomponent\n\t) : (\n\t\t<TableSkeletonLoader/>\n\t)\n\nexport const encryptObj = (obj) => {\n\tconst objStr = JSON.stringify(obj)\n\treturn cryptojs.AES.encrypt(\n\t\tobjStr,\n\t\tprocess.env.REACT_APP_ENCRYPTION_SECRET_KEY\n\t).toString()\n}\n\nexport const formatDate = (date) => {\n\tconst dateArr = new Date(date).toDateString().split(' ')\n\tdateArr.shift()\n\treturn dateArr.join(' ')\n}\n\nexport const counter = (arr) => {\n\tconst countObj = {}\n\tfor (const item of arr) {\n\t\tif (countObj[item]) {\n\t\t\tcountObj[item] += 1\n\t\t} else {\n\t\t\tcountObj[item] = 1\n\t\t}\n\t}\n\n\treturn countObj\n}\n\nexport const pickerDateFormat = (dateStr) => {\n\tif (dateStr) return new Date(dateStr).toISOString().split('T')[0]\n\treturn new Date().toISOString().split('T')[0]\n}\n","import { atom, selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\n\nexport const jobAtom = atom({\n\tkey: 'jobs',\n\tdefault: null,\n})\n\nexport const candidateAtom = atom({\n\tkey: 'candidates',\n\tdefault: null,\n})\n\nexport const companyAtom = atom({\n\tkey: 'companies',\n\tdefault: null,\n})\n\nexport const roleAtom = atom({\n\tkey: 'roles',\n\tdefault: null,\n})\n\nexport const userAtom = atom({\n\tkey: 'users',\n\tdefault: null,\n})\n\nexport const statsAtom = atom({\n\tkey: 'stats',\n\tdefault: null\n})\n\n//--------------\n\nexport const jobCheckedAtom = atom({\n\tkey: 'jobChecked',\n\tdefault: {},\n})\n\nexport const candidateCheckedAtom = atom({\n\tkey: 'candidateChecked',\n\tdefault: {},\n})\n\nexport const companyCheckedAtom = atom({\n\tkey: 'companyChecked',\n\tdefault: {},\n})\n\nexport const roleCheckedAtom = atom({\n\tkey: 'roleChecked',\n\tdefault: {},\n})\n\nexport const userCheckedAtom = atom({\n\tkey: 'userChecked',\n\tdefault: {},\n})\n\n//------------\n\nexport const jobTab = atom({\n\tkey: 'jobTab',\n\tdefault: 0,\n})\n\nexport const candidateTab = atom({\n\tkey: 'candidateTab',\n\tdefault: 2,\n})\n\nexport const appliedCandidateTabAtom = atom({\n\tkey: 'appliedCandidateTabAtom',\n\tdefault: 0,\n})\n\n// -------------\nexport const credentialAtom = atom({\n\tkey: 'cred',\n\tdefault: { email: '', password: '' },\n})\n\nexport const isAuthAtom = atom({\n\tkey: 'isAuth',\n\tdefault: true,\n})\n\nexport const currentUserAtom = atom({\n\tkey: 'currentUser',\n\tdefault: null,\n})\n\nexport const statusAtom = atom({\n\tkey: 'status',\n\tdefault: null,\n})\n","import { get } from 'lodash'\nimport React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { v4 as uniqueID } from 'uuid'\nimport CandidateIcon from '../assets/icons/candidate.svg'\nimport CompanyIcon from '../assets/icons/company.svg'\nimport DashboardIcon from '../assets/icons/dashboard.svg'\nimport JobIcon from '../assets/icons/job.svg'\nimport RoleIcon from '../assets/icons/role.svg'\nimport UserIcon from '../assets/icons/user.svg'\nimport { currentUserAtom } from '../recoil/atoms'\nimport { StyledNavlink } from '../styles'\n\n\n\nfunction Sidebar() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { roleId } = currentUser || {}\n\tconst { permissions } = roleId || {}\n\n\t// const { job, candidate, role, user } = permissions || {}\n\n\n\tconst activeLinkStyle = {\n\t\tcolor: '#0168fa',\n\t\tbackgroundColor: '#EEF0F7',\n\t\tfontWeight: '500',\n\t\tboxShadow: 'inset 1px 1px 3px 0px #016afa2e',\n\t}\n\n\n\treturn (\n\t\t<SidebarContainer>\n\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/dashboard'>\n\t\t\t\t\t<NavIcon src={DashboardIcon} />\n\t\t\t\t\tDashboard\n\t\t\t\t</StyledNavlink>\n\t\t\t</MenuItem>\n\n\t\t\t{get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/job'>\n\t\t\t\t\t\t<NavIcon src={JobIcon} />\n\t\t\t\t\t\tJob\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'candidate.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/candidate'>\n\t\t\t\t\t\t<NavIcon src={CandidateIcon} />\n\t\t\t\t\t\tCandidate\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/company'>\n\t\t\t\t\t\t<NavIcon src={CompanyIcon} />\n\t\t\t\t\t\tCompany\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'role.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/role'>\n\t\t\t\t\t\t<NavIcon src={RoleIcon} />\n\t\t\t\t\t\tRole\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'user.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/user'>\n\t\t\t\t\t\t<NavIcon src={UserIcon} />\n\t\t\t\t\t\tUser\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\t\t</SidebarContainer>\n\t)\n}\n\nexport default Sidebar\n\nconst SidebarContainer = styled.ul`\n\tbackground-color: white;\n\tlist-style: none;\n\tmargin: 0px;\n\tpadding: 0px;\n\tborder: 1px solid #0000003b;\n\tborder-top: 0px;\n\tpadding: 10px;\n\ttext-align: left;\n\t/* overflow-y: scroll; */\n`\n\nconst MenuItem = styled.li``\n\nconst NavIcon = styled.img`\n\tmargin-right: 10px;\n`\n","import React from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\n\nfunction PieChart({ labels, data }) {\n\tconst chartData = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tdata,\n\t\t\t\tbackgroundColor: ['#007bff', '#FFA500'],\n\t\t\t},\n\t\t],\n\t\tlabels,\n\t}\n\n\treturn (\n\t\t<ChartContainer>\n\t\t\t<Pie data={chartData} />\n\t\t</ChartContainer>\n\t)\n}\n\nexport default PieChart\n\nconst ChartContainer = styled.div`\n\t/* width: 400px; */\n`\n","const STAGE = process.env.NODE_ENV === 'production' ? true : false\n\nexport const API_URI = STAGE\n\t? 'https://sos-node.herokuapp.com'\n\t: 'http://localhost:4000'\n\nexport const createJob = `${API_URI}/job`\nexport const getJobs = `${API_URI}/jobs`\n\nexport const getJob = `${API_URI}/job`\nexport const deleteJob = `${API_URI}/job`\nexport const deleteJobs = `${API_URI}/jobs`\n\nexport const createCandidate = `${API_URI}/candidate`\nexport const getCandidates = `${API_URI}/candidates`\n\nexport const applyJob = `${API_URI}/apply`\n\nexport const jobEndpoint = `${API_URI}/job`\nexport const jobsEndpoint = `${API_URI}/jobs`\n\nexport const candidateEndpoint = `${API_URI}/candidate`\nexport const candidatesEndpoint = `${API_URI}/candidates`\n\nexport const companyEndpoint = `${API_URI}/company`\nexport const companiesEndpoint = `${API_URI}/companies`\n\nexport const roleEndpoint = `${API_URI}/role`\nexport const rolesEndpoint = `${API_URI}/roles`\n\nexport const userEndpoint = `${API_URI}/user`\nexport const usersEndpoint = `${API_URI}/users`\n\nexport const loginEndpoint = `${API_URI}/login`\nexport const logoutEndpoint = `${API_URI}/logout`\nexport const verifyEndpoint = `${API_URI}/verify`\n\nexport const statusEndpoint = `${API_URI}/status`\n\nexport const statsEndpoint = `${API_URI}/stats`\n\n// export const getPublicJobs = `${API_URI}/public-jobs`\n","import { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { v4 as uuid } from 'uuid'\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify'\n\ntoast.configure({\n\tposition: toast.POSITION.BOTTOM_RIGHT,\n\tautoClose: 3000,\n\tpauseOnFocusLoss: false,\n\ttoastId: uuid(),\n\t// transition: Slide,\n\tdraggablePercent: 60,\n})\n\nexport { toast }\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport styled from 'styled-components'\nimport { Card } from '../styles'\n\nfunction ChartSkeleton() {\n\treturn (\n\t\t<ChartCard>\n\t\t\t<TitleContainer>\n\t\t\t\t<Skeleton width={100} />\n\t\t\t\t<Skeleton width={100} />\n\t\t\t</TitleContainer>\n\t\t\t<Skeleton circle={true} height={200} width={200} />\n\t\t\t<Skeleton width={300} />\n\t\t</ChartCard>\n\t)\n}\n\nexport default ChartSkeleton\n\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n\nconst TitleContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n`\n","import React, { useEffect } from 'react'\nimport PieChart from '../../components/PieChart'\nimport { Card, ContentContainer, PageLayout, Title } from '../../styles'\nimport styled from 'styled-components'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { statsAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { statsEndpoint } from '../../api'\nimport { toast } from '../../components/Toast'\nimport Skeleton from 'react-loading-skeleton'\nimport ChartSkeleton from '../../components/ChartSkeleton'\n\nfunction DashboardPage() {\n\tconst [stats, setStats] = useRecoilState(statsAtom)\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(statsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setStats(data))\n\t\t\t.catch((e) => toast.error('Something went wrong'))\n\t}, [])\n\n\tconsole.log({ stats })\n\n\treturn (\n\t\t<>\n\t\t\t<ContentContainer>\n\t\t\t\t<PieContainer>\n\t\t\t\t\t{stats ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Assigned Jobs', 'Unassigned Jobs']}\n\t\t\t\t\t\t\t\t\tdata={[stats.stats.job.assigned, stats.stats.job.unassigned]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>{stats.stats.job.total} Jobs</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Applied Candidates', 'Candidates Not Applied']}\n\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.applied,\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.unapplied,\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>\n\t\t\t\t\t\t\t\t\t{stats.stats.candidate.total} Candidates\n\t\t\t\t\t\t\t\t</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</PieContainer>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default DashboardPage\n\nconst PieContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\n\nconst ChartTitle = styled.h3`\n\tcolor: #333;\n`\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {InputBase} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction Search({onChange}) {\n        return (\n                <SearchDiv>\n                        <>\n                                <SearchIcon />\n                        </>\n                        <InputBase \n                                placeholder=\"Search…\"\n                                inputProps={{ 'aria-label': 'search' }} \n                                onChange={onChange}\n                        />\n                </SearchDiv>\n        )\n}\n\nexport default Search\n\nconst SearchDiv = styled.div`\n        padding: 4px 10px;\n        display: flex;\n        align-items: center;\n        color: #ABABAB;\n        background-color: #EEF0F7;\n        border-radius: 4px;\n`;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces } from '../styles'\nimport Search from '../components/Search'\n\nfunction Controls({ title, children, onSearchChange, search }) {\n\treturn (\n\t\t<ControlContainer>\n\t\t\t<ControlTitle>{title}</ControlTitle>\n\t\t\t{\n\t\t\t\tsearch ? <ControlSearch><Search onChange={onSearchChange} /></ControlSearch> : null\n\t\t\t}\n\t\t\t<ControlButtonContainer>{children}</ControlButtonContainer>\n\t\t</ControlContainer>\n\t)\n}\n\nexport default Controls\n\nconst ControlContainer = styled.div`\n\tposition: sticky;\n\ttop: 0px;\n\tz-index: 10;\n\tpadding: 10px 20px;\n\tbackground-color: white;\n\tdisplay: flex;\n\tborder: 1px solid #0000003b;\n\tborder-top: none;\n\tborder-left: none;\n\t/* border-radius: 6px; */\n\talign-items: center;\n\tjustify-content: space-between;\n`\n\nconst ControlTitle = styled.h4`\n\t${RemoveSpaces}\n\tcolor: #333;\n`\n\nconst ControlSearch = styled.div`\n\tmargin: 0 auto;\t\n`\n\nconst ControlButtonContainer = styled.div`\n\tdisplay: flex;\n`\n","import styled from 'styled-components'\nimport {\n\tButton,\n\tFormControl,\n\tIconButton,\n\tModal,\n\tSelect,\n\tTextField,\n} from '@material-ui/core'\n\nexport const SMUIButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px;\n\t\tpadding: 5px 20px;\n\t}\n`\nexport const SMUITextField = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t\twidth: 100%;\n\t}\n`\nexport const SMUISelect = styled(Select)`\n\t&& {\n\t\twidth: 100%;\n\t\t/* margin: 10px 0px; */\n\t\t/* padding: 5px 0px; */\n\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIFormControl = styled(FormControl)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIIconButton = styled(IconButton)`\n\t&&{\n\t\tpadding: 0px;\n\t}\n`\n\nexport const SMUIModal = styled(Modal)`\n\t&& {\n\t\tposition: fixed;\n\t\ttop: auto;\n\t\tbottom: auto;\n\t\tleft: auto;\n\t\tmargin: 0 auto;\n\t\tright: auto;\n\t\twidth: 500px;\n\t\toutline: none;\n\t\tborder-style: none;\n\t}\n\t&&:focus {\n\t\toutline: none;\n\t}\n`\n","import React from 'react'\nimport {\n\tModalBody,\n\tModalButtonContainer,\n\n\tModalText, ModalTitle,\n\n\tModalWarning\n} from '../../styles'\nimport { SMUIButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nfunction DeleteModal({ open, onClose, count, deleteHandler }) {\n\treturn (\n\t\t<SMUIModal open={open} onClose={onClose}>\n\t\t\t<ModalBody>\n\t\t\t\t<ModalTitle>{count} Items Selected</ModalTitle>\n\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t<SMUIButton onClick={onClose}>Cancel</SMUIButton>\n\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\tonClick={deleteHandler}\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</SMUIButton>\n\t\t\t\t</ModalButtonContainer>\n\t\t\t</ModalBody>\n\t\t</SMUIModal>\n\t)\n}\n\nexport default DeleteModal\n","import { selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\nimport {\n\tcandidateCheckedAtom,\n\tcompanyCheckedAtom,\n\tjobCheckedAtom,\n\troleCheckedAtom,\n\tuserCheckedAtom,\n} from './atoms'\n\nexport const filterTrueJobChecked = selector({\n\tkey: 'filterTrueJobChecked',\n\tget: ({ get }) => {\n\t\tconst checkedJob = get(jobCheckedAtom)\n\t\treturn trueKeysToArr(checkedJob)\n\t},\n})\n\nexport const filterTrueCandidateChecked = selector({\n\tkey: 'filterTrueCandidateChecked',\n\tget: ({ get }) => {\n\t\tconst checkedCandidate = get(candidateCheckedAtom)\n\t\treturn trueKeysToArr(checkedCandidate)\n\t},\n})\n\nexport const selectedCompanies = selector({\n\tkey: 'filterTrueCompanyChecked',\n\tget: ({ get }) => {\n\t\tconst companyChecked = get(companyCheckedAtom)\n\t\treturn trueKeysToArr(companyChecked)\n\t},\n})\n\nexport const selectedRoles = selector({\n\tkey: 'filterTrueRoleChecked',\n\tget: ({ get }) => {\n\t\tconst roleChecked = get(roleCheckedAtom)\n\t\treturn trueKeysToArr(roleChecked)\n\t},\n})\n\nexport const selectedUsers = selector({\n\tkey: 'filterTrueUsersChecked',\n\tget: ({ get }) => {\n\t\tconst userChecked = get(userCheckedAtom)\n\t\treturn trueKeysToArr(userChecked)\n\t},\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { filter, get } from 'lodash'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../../recoil/atoms'\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip\n} from \"@material-ui/core\";\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../../utils/helperFunctions'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\n\nimport Search from '../../../components/Search'\n\nfunction createData(code, title, company, city, openings, resumes, postedOn) {\n  return { code, title, company, city, openings, resumes, postedOn};\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'code', numeric: false, disablePadding: true, label: 'job code' },\n  { id: 'title', numeric: false, disablePadding: true, label: 'job title' },\n  { id: 'company', numeric: false, disablePadding: true, label: 'company' },\n  { id: 'city', numeric: false, disablePadding: true, label: 'city' },\n  { id: 'openings', numeric: false, disablePadding: true, label: 'openings' },\n  { id: 'resumes', numeric: false, disablePadding: true, label: 'resumes' },\n  { id: 'postedOn', numeric: false, disablePadding: true, label: 'posted on' },\n];\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n        //     padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label.toUpperCase()}</b>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold'\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, jobData, setFilterData } = props;\n  const currentUser = useRecoilValue(currentUserAtom)\n  const history = useHistory()\n  const location = useLocation().pathname\n  \n  const onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n\t\t\treturn data.jobOpeningInfo.jobTitle.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.companyDetails.companyId.companyName.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobDetails.jobCode.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobAddress.city.toLowerCase().includes(inputVal) \n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\n  return (\n    <>\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Jobs\n        </Typography>\n      )}\n\n      {/* search */}\n      <div style={{margin: '0 auto'}}>\n        <Search onChange={(e) => {onSearchChange(e)} } />\n      </div>\n\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon onClick={() => console.log('delete button click')} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <>\n        {get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<Tooltip title=\"Add Job\">\n              <IconButton aria-label=\"add job\" onClick={() => history.push(`${location}/add`)}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n\t\t\t\t\t\t)}\n          </>\n        \n      )}\n    </Toolbar>\n    </>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable({filterData,setFilterData, jobData, toApply}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('postedOn');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const rows = [];\n  const location = useLocation().pathname\n\n  filterData.map(job => {\n          rows.push(\n            createData(job.jobDetails.jobCode, job.jobOpeningInfo.jobTitle, job.companyDetails.companyId.companyName, job.jobAddress.city, job.jobOpeningInfo.noOfOpenings, job.statusIds.length, formatDate(job.createdAt))\n          );\n  })\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const isSelected = (code) => selected.indexOf(code) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} jobData={jobData} setFilterData={setFilterData} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size={dense ? 'small' : 'medium'}\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy} \n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.code)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\n                      {toApply ? (\n                          row.code\n                        ) : (\n                          <NavLink to={`${location}/${row.code}`}>\n                            {row.code}\n                          </NavLink>\n                        )}\n\n                      </TableCell>\n                      <TableCell>{row.title}</TableCell>\n                      <TableCell>{row.company}</TableCell>\n                      <TableCell>{row.city}</TableCell>\n                      <TableCell>{row.openings}</TableCell>\n                      <TableCell>{row.resumes}</TableCell>\n                      <TableCell>{row.postedOn}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                  <TableCell colSpan={8} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import { AddCircle, Delete, Search } from '@material-ui/icons'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { v4 as uuid } from 'uuid'\nimport { applyJob, deleteJobs, getJobs, jobsEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport Table from '../../components/Table'\n\nimport {\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n\tjobAtom,\n\tjobCheckedAtom,\n} from '../../recoil/atoms'\nimport {\n\tfilterTrueCandidateChecked,\n\tfilterTrueJobChecked,\n} from '../../recoil/selectors'\nimport {\n\tContentContainer,\n\tControlButton,\n\tStyledCheckbox,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { toast } from '../../components/Toast'\nimport { filter, get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\nimport EnhancedTable from './components/NewTable'\n\nfunction JobPage({ toApply }) {\n\t// React Hooks\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tvar [jobData, setJobData] = useRecoilState(jobAtom)\n\tconst [checked, setChecked] = useRecoilState(jobCheckedAtom)\n\tconst [, setCandidateChecked] = useRecoilState(candidateCheckedAtom)\n\tconst ids = useRecoilValue(filterTrueJobChecked)\n\tconst candidateSelectedIds = useRecoilValue(filterTrueCandidateChecked)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [filterData, setFilterData] = useState();\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(jobsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJobData(data);\n\t\t\t\tsetFilterData(data);\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\n\tconst jobHeading = [\n\t\t<StyledCheckbox\n\t\t\ttype='checkbox'\n\t\t\tcolor='primary'\n\t\t\tonChange={() => console.log('checked')}\n\t\t/>,\n\t\t'Job Code',\n\t\t'Job Title',\n\t\t'Company',\n\t\t'City',\n\t\t'Openings',\n\t\t`Resumes`,\n\t\t`Posted On`,\n\t\t// `Assigned On`,\n\t]\n\t      \n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(deleteJobs, { ids }, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Job Deleted')\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst candidateApplyHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\tapplyJob,\n\t\t\t\t{\n\t\t\t\t\tcandidates: candidateSelectedIds,\n\t\t\t\t\tjobs: ids,\n\t\t\t\t\tuserId: currentUser._id,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\tsetChecked({})\n\t\t\tsetCandidateChecked({})\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidates Assigned')\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// Renderers\n\tconst renderJobHeading = jobHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\n\n\tconst renderJobData =\n\t\tfilterData &&\n\t\tfilterData.map((job) => {\n\t\t\treturn (\n\t\t\t\t<TableRow\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: checked[job._id] ? '#0c68fa1f' : 'white',\n\t\t\t\t\t}}\n\t\t\t\t\tkey={job._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tchecked={checked[job._id]}\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonChange={() => onCheckHandler(job._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\tjob.jobDetails.jobCode\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<NavLink to={`${location}/${job.jobDetails.jobCode}`}>\n\t\t\t\t\t\t\t\t{job.jobDetails.jobCode}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t\t<TableData>{job.companyDetails.companyId.companyName}</TableData>\n\t\t\t\t\t<TableData>{job.jobAddress.city}</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t\t<TableData>{job.statusIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(job.createdAt)}</TableData>\n\t\t\t\t\t{/* <TableData>\n\t\t\t\t\t\t{new Date(job.jobOpeningInfo.assignedOn).toDateString()}\n\t\t\t\t\t</TableData> */}\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\tconst addHandler = () => {\n\t\thistory.push(`${location}/add`)\n\t}\n\n\tconst onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n\t\t\treturn data.jobOpeningInfo.jobTitle.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.companyDetails.companyId.companyName.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobDetails.jobCode.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobAddress.city.toLowerCase().includes(inputVal) \n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\t// console.log(jobData)\n\n\treturn (\n\t\t<>\n\t\t\t{/* <Controls title={titleGenerator(ids, 'Jobs')} onSearchChange={(e) => onSearchChange(e)} search={true}>\n\t\t\t\t{ids.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\t<ControlButton\n\t\t\t\t\t\t\t\tonClick={candidateApplyHandler}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t\t\tApply\n\t\t\t\t\t\t\t</ControlButton>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={addHandler}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls> */}\n\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={ids.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tfilterData,\n\t\t\t\t\t// <Table headings={renderJobHeading}>{renderJobData}</Table>\n\t\t\t\t\t<EnhancedTable filterData = {filterData} setFilterData={setFilterData} jobData={jobData} toApply={toApply} />\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobPage\n","import { Button, MenuItem, Select } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport SearchIcon from '../assets/icons/search.svg'\nimport { themeBorder } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction SearchBar({ options }) {\n\tconst [searchCriteria, setSearchCriteria] = useState(options[0].value)\n\tconst [searchVal, setSearchVal] = useState('')\n\tconst renderOption = () =>\n\t\toptions.map(({ value, name }) => {\n\t\t\treturn <MenuItem key={uuid()} value={value}>{name}</MenuItem>\n\t\t})\n\n\n\tconst searchInputHandler = (e) => setSearchVal(e.target.value)\n\tconst searchCriteriaHandler = (e) => setSearchCriteria(e.target.value)\n\n\treturn (\n\t\t<SearchBarForm>\n\t\t\t<StyledSelect value={searchCriteria} onChange={searchCriteriaHandler}>\n\t\t\t\t{renderOption()}\n\t\t\t</StyledSelect>\n\t\t\t<SearchInput\n\t\t\t\tvalue={searchVal}\n\t\t\t\tonChange={searchInputHandler}\n\t\t\t\tplaceholder='Search Here...'\n\t\t\t/>\n\n\t\t\t<Button>\n\t\t\t\t<img src={SearchIcon} alt='Search Icon' />\n\t\t\t</Button>\n\t\t</SearchBarForm>\n\t)\n}\n\nexport default SearchBar\n\nconst StyledSelect = styled(Select)`\n\tpadding: 0px 20px;\n`\n\nconst SearchBarForm = styled.form`\n\tdisplay: flex;\n\tmargin: 10px 0px;\n\tjustify-content: space-between;\n\t${themeBorder}\n\tbackground-color: white;\n`\nconst SearchInput = styled.input`\n\tflex: 1;\n\tpadding: 0px 10px;\n\tborder-style: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n`\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport {\n\tapplyJob,\n\tcandidatesEndpoint,\n\tcompaniesEndpoint,\n\tgetCandidates,\n\tgetJobs,\n} from '../../api'\nimport Table from '../../components/Table'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tPageLayout,\n\tTableData,\n\tTableHead,\n\tTableRow,\n\tStyledCheckbox,\n\tContentContainer,\n\tControlButton,\n} from '../../styles'\n\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport Controls from '../../components/Controls'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\n\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n\ttrueKeysToArr,\n} from '../../utils/helperFunctions'\n\nimport { useRecoilValue } from 'recoil'\nimport { filterTrueCandidateChecked } from '../../recoil/selectors'\nimport SearchBar from '../../components/SearchBar'\nimport AddIcon from '../../assets/icons/add.svg'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { AddCircle, Delete } from '@material-ui/icons'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { v4 as uuid } from 'uuid'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\n\nfunction CandidatePage() {\n\t// React Hooks\n\n\tconst [candidateData, setCandidateData] = useRecoilState(candidateAtom)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst selected = useRecoilValue(filterTrueCandidateChecked)\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\n\tuseEffect(() => {\n\t\taxios.get(getCandidates, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidateData(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\tconst candidateHeading = [\n\t\t'Select',\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t`Entered On`,\n\t]\n\n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\t}\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(candidatesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Candidates Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// Renderers\n\tconst renderCandidateData =\n\t\tcandidateData &&\n\t\tcandidateData.map((candidate) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={candidate._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tchecked={checked[candidate._id]}\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonChange={() => onCheckHandler(candidate._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<NavLink to={`${location}/${candidate.candidateCode}`}>\n\t\t\t\t\t\t\t{candidate.candidateCode}\n\t\t\t\t\t\t</NavLink>{' '}\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{candidate.basic.fullName}</TableData>\n\t\t\t\t\t<TableData>{candidate.basic.primaryEmail}</TableData>\n\t\t\t\t\t<TableData>{candidate.basic.mobile}</TableData>\n\t\t\t\t\t<TableData>{candidate.address.state}</TableData>\n\t\t\t\t\t{/* <TableData>45</TableData> */}\n\t\t\t\t\t<TableData>{candidate.professional.industry}</TableData>\n\t\t\t\t\t<TableData>{candidate.professional.functionalArea}</TableData>\n\t\t\t\t\t<TableData>{formatDate(candidate.createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\tconst toPage = (link) => {\n\t\thistory.push(link)\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Candidate Controls')}>\n\t\t\t\t{selected.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton\n\t\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\t\tonClick={toggleModal}\n\t\t\t\t\t\t\t\tcolor='secondary'>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t\t\t<ControlButton\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={() => toPage('/job/apply')}>\n\t\t\t\t\t\t\t\tAssign\n\t\t\t\t\t\t\t</ControlButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton\n\t\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\t\tonClick={() => toPage(`${location}/add`)}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t\t{/* <Button variant=\"contained\" color=\"primary\">Import</Button>\n\t\t\t\t<Button variant=\"contained\" color=\"primary\">Export</Button> */}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tcandidateData,\n\t\t\t\t\t<Table headings={renderCandidateHeading}>{renderCandidateData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidatePage\n\nconst CandidatePageContainer = styled.div`\n\tbackground-color: #0000000d;\n\twidth: 100%;\n\tpadding: 10px;\n`\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport AddIcon from '../../assets/icons/add.svg'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, roleAtom, roleCheckedAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { rolesEndpoint } from '../../api'\nimport Table from '../../components/Table'\nimport { v4 as uuid } from 'uuid'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\nimport { selectedRoles } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction RolePage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [checked, setChecked] = useRecoilState(roleCheckedAtom)\n\tconst selected = useRecoilValue(selectedRoles)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(rolesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Roles Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst roleHeading = ['Select', 'Name', 'Vendor', 'Total Users', 'Created On']\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst renderHeading = roleHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderRoleData =\n\t\troles &&\n\t\troles.map(({ _id, name, vendor, users, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{name}</TableData>\n\t\t\t\t\t<TableData>{vendor}</TableData>\n\t\t\t\t\t<TableData>{users.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Roles')}>\n\t\t\t\t{selected.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{/* <IconButton onClick={() => navHandler('add')} src={AddIcon} /> */}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\troles,\n\t\t\t\t\t<Table headings={renderHeading}>{renderRoleData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RolePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tPageLayout,\n\tTableHead,\n\tTableRow,\n\tTableData,\n\tStyledCheckbox,\n} from '../../styles'\nimport Controls from '../../components/Controls'\n\nimport { useHistory, useLocation } from 'react-router-dom'\nimport AddIcon from '../../assets/icons/add.svg'\nimport axios from 'axios'\nimport { usersEndpoint } from '../../api'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, userAtom, userCheckedAtom } from '../../recoil/atoms'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { v4 as uuid } from 'uuid'\nimport { selectedUsers } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction UserPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [users, setUsers] = useRecoilState(userAtom)\n\tconst [checked, setChecked] = useRecoilState(userCheckedAtom)\n\tconst selected = useRecoilValue(selectedUsers)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(usersEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setUsers(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst userHeading = [\n\t\t'Select',\n\t\t'Fullname',\n\t\t'Username',\n\t\t'Contact',\n\t\t'Email',\n\t\t'Assigned Role',\n\t\t'Created On',\n\t]\n\n\tconst renderUserHeading = userHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(usersEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('User Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\tconst showUsers =\n\t\tusers &&\n\t\tusers.filter((user) => {\n\t\t\tif (currentUser) {\n\t\t\t\treturn currentUser._id.toString() !== user._id.toString()\n\t\t\t}\n\t\t})\n\tconst renderUserData =\n\t\tshowUsers &&\n\t\tshowUsers.map(\n\t\t\t({\n\t\t\t\t_id,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tuserName,\n\t\t\t\tcontact,\n\t\t\t\temail,\n\t\t\t\troleId,\n\t\t\t\tcreatedAt,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t\t<TableData>\n\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableData>\n\n\t\t\t\t\t\t<TableData>{`${firstName} ${lastName}`}</TableData>\n\t\t\t\t\t\t<TableData>{userName}</TableData>\n\t\t\t\t\t\t<TableData>{contact}</TableData>\n\t\t\t\t\t\t<TableData>{email}</TableData>\n\t\t\t\t\t\t<TableData>{roleId.name}</TableData>\n\t\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t\t</TableRow>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Users')}>\n\t\t\t\t{selected.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tusers,\n\t\t\t\t\t<Table headings={renderUserHeading}>{renderUserData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserPage\n","import { IconButton, InputLabel, MenuItem } from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport axios from 'axios'\nimport 'date-fns'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { companiesEndpoint, jobEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { companyAtom, currentUserAtom, jobAtom } from '../../../recoil/atoms'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\nimport { toast } from '../../../components/Toast'\n\nfunction JobInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst jobId = get(match, 'params.id', '')\n\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\n\tconst jobs = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [job, setJob] = useState(\n\t\tjobs && jobs.find((job) => job.jobDetails.jobCode === jobId)\n\t)\n\n\tuseEffect(() => {\n\t\tif (!job) {\n\t\t\taxios\n\t\t\t\t.get(`${jobEndpoint}/${jobId}`)\n\t\t\t\t.then(({ data }) => setJob(data))\n\t\t\t\t.catch((e) => console.log(e))\n\t\t}\n\t}, [])\n\n\tconst [jobTitle, setJobTitle] = useState(\n\t\tget(job, 'jobOpeningInfo.jobTitle', '')\n\t)\n\tconst [jobType, setJobType] = useState(get(job, 'jobOpeningInfo.jobType', ''))\n\tconst [industry, setIndustry] = useState(\n\t\tget(job, 'jobOpeningInfo.industry', '')\n\t)\n\tconst [noOfOpening, setNoOfOpening] = useState(\n\t\tget(job, 'jobOpeningInfo.noOfOpenings')\n\t)\n\n\t//companydetails\n\tconst [companyId, setCompanyId] = useState(\n\t\tget(job, 'companyDetails.companyId._id', '')\n\t)\n\n\tconst [companyName, setCompanyName] = useState(\n\t\tget(job, 'companyDetails.companyName', '')\n\t)\n\n\tconst [isCompanyDetailsVisible, setIsCompanyDetailsVisible] = useState(\n\t\tget(job, 'companyDetails.isCompanyDetailsVisible', true)\n\t)\n\t//jobaddress\n\tconst [jobLocation, setJobLocation] = useState(\n\t\tget(job, 'jobAddress.jobLocation')\n\t)\n\tconst [city, setCity] = useState(get(job, 'jobAddress.city', ''))\n\tconst [zone, setZone] = useState(get(job, 'jobAddress.zone'))\n\tconst [state, setState] = useState(get(job, 'jobAddress.state', ''))\n\tconst [pincode, setPincode] = useState(get(job, 'jobAddress.pincode'))\n\tconst [country, setCountry] = useState(get(job, 'jobAddress.country', ''))\n\n\t//jobdetails\n\tconst [jobDescription, setJobDescription] = useState(\n\t\tget(job, 'jobDetails.jobDescription', '')\n\t)\n\n\tconst [eligibility, setEligibility] = useState(\n\t\tget(job, 'jobDetails.eligibility', [])\n\t)\n\tconst [eligibilityVal, setEligibilityVal] = useState()\n\n\tconst [responsibilities, setResponsibilities] = useState(\n\t\tget(job, 'jobDetails.responsibilities', [])\n\t)\n\tconst [responsibilitiesVal, setResponsibilitiesVal] = useState()\n\n\tconst [benefits, setBenefits] = useState(get(job, 'jobDetails.benefits', []))\n\tconst [benefitsVal, setBenefitsVal] = useState()\n\n\tconst [additionalInformation, setAdditionalInformation] = useState(\n\t\tget(job, 'jobDetails.additionalInformation', '')\n\t)\n\tconst [targetDate, setTargetDate] = useState(\n\t\tpickerDateFormat(get(job, 'jobDetails.targetDate'))\n\t)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\t//functions\n\n\t//handlers\n\tconst saveHandler = async (isEdit) => {\n\t\tconst newJobData = {\n\t\t\tjobOpeningInfo: {\n\t\t\t\tjobTitle,\n\t\t\t\tjobType,\n\t\t\t\tindustry,\n\t\t\t\tassignedOn: new Date(),\n\t\t\t\tnoOfOpenings: Number(noOfOpening),\n\t\t\t},\n\t\t\tcompanyDetails: {\n\t\t\t\tcompanyId,\n\t\t\t\tcompanyName,\n\t\t\t\tisCompanyDetailsVisible,\n\t\t\t},\n\t\t\tjobAddress: {\n\t\t\t\tjobLocation,\n\t\t\t\tcity,\n\t\t\t\tzone,\n\t\t\t\tstate,\n\t\t\t\tpincode,\n\t\t\t\tcountry,\n\t\t\t},\n\t\t\tjobDetails: {\n\t\t\t\tjobCode: codeGenerator(jobTitle, industry, companyId),\n\t\t\t\tjobDescription,\n\t\t\t\tadditionalInformation,\n\t\t\t\ttargetDate,\n\t\t\t\teligibility,\n\t\t\t\tresponsibilities,\n\t\t\t\tbenefits,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\t\ttry {\n\t\t\tif (isEdit) {\n\t\t\t\tawait axios.patch(`${jobEndpoint}/${jobId}`, newJobData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\n\t\t\t\ttoast.success('Job Edited')\n\t\t\t\thistory.goBack()\n\t\t\t} else {\n\t\t\t\tawait axios.post(jobEndpoint, newJobData, { withCredentials: true })\n\t\t\t\ttoast.success('New Job Added')\n\t\t\t\thistory.goBack()\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst renderCompaniesOption =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName }) => {\n\t\t\treturn (\n\t\t\t\t<MenuItem key={_id} value={_id}>\n\t\t\t\t\t{companyName}\n\t\t\t\t</MenuItem>\n\t\t\t)\n\t\t})\n\n\tconst addCompanyHandler = () => {\n\t\thistory.push('/company/add')\n\t}\n\n\treturn (\n\t\t<JobInputContainer>\n\t\t\t{/* Control */}\n\t\t\t<Controls title='Job Control'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.permissions.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.job.update')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tonClick={() => saveHandler(edit)}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Opening Info</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}\n\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={noOfOpening}\n\t\t\t\t\t\tonChange={(e) => setNoOfOpening(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='No. of Opening'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobtype'>Job type</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobType}\n\t\t\t\t\t\t\tlabel='Job type'\n\t\t\t\t\t\t\tonChange={(e) => setJobType(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Full-time'>Full-Time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Part-time'>Part-time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Freelancing'>Part-time</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='company'>Company</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabelId='company'\n\t\t\t\t\t\t\tvalue={companyId}\n\t\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t\t\tonChange={(e) => setCompanyId(e.target.value)}>\n\t\t\t\t\t\t\t{renderCompaniesOption}\n\n\t\t\t\t\t\t\t<MenuItem value='add New' onClick={addCompanyHandler}>\n\t\t\t\t\t\t\t\t+ Add New Company\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<CheckBoxContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isCompanyDetailsVisible}\n\t\t\t\t\t\t\tonChange={(e) => setIsCompanyDetailsVisible(e.target.checked)}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CheckBoxLabel>Company Details Visible</CheckBoxLabel>\n\t\t\t\t\t</CheckBoxContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Address</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t\tlabel='City'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}\n\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobLocation'>Job Location</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobLocation}\n\t\t\t\t\t\t\tonChange={(e) => setJobLocation(e.target.value)}\n\t\t\t\t\t\t\tlabel='Job Location'>\n\t\t\t\t\t\t\t<MenuItem value='On Location'>On Location</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Remote'>Remote</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='zone'>Zone</InputLabel>\n\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={zone}\n\t\t\t\t\t\t\tonChange={(e) => setZone(e.target.value)}\n\t\t\t\t\t\t\tlabel='Zone'>\n\t\t\t\t\t\t\t<MenuItem value='North'>North</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='East'>East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='West'>West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South'>South</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-East'>North-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-West'>North-West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-East'>South-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-West'>South-West</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Details</CardTitle>\n\n\t\t\t\t\t{eligibility.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(eligibility, setEligibility)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, eligibilityVal, eligibility, setEligibility)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={eligibilityVal}\n\t\t\t\t\t\t\tonChange={(e) => setEligibilityVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Eligibility'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{responsibilities.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(responsibilities, setResponsibilities)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tresponsibilitiesVal,\n\t\t\t\t\t\t\t\tresponsibilities,\n\t\t\t\t\t\t\t\tsetResponsibilities\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Responsibilities'\n\t\t\t\t\t\t\tvalue={responsibilitiesVal}\n\t\t\t\t\t\t\tonChange={(e) => setResponsibilitiesVal(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{benefits.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(benefits, setBenefits)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, benefitsVal, benefits, setBenefits)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Benefits'\n\t\t\t\t\t\t\tvalue={benefitsVal}\n\t\t\t\t\t\t\tonChange={(e) => setBenefitsVal(e.target.value)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={jobDescription}\n\t\t\t\t\t\tonChange={(e) => setJobDescription(e.target.value)}\n\t\t\t\t\t\tlabel='Job Description'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={additionalInformation}\n\t\t\t\t\t\tonChange={(e) => setAdditionalInformation(e.target.value)}\n\t\t\t\t\t\tlabel='Additional Information'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tdefaultValue={targetDate}\n\t\t\t\t\t\t\tlabel='Target Date'\n\t\t\t\t\t\t\tonChange={(e) => setTargetDate(e.target.value)}\n\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\tplaceholder='Target Date'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\n\t\t\t{/* inputs */}\n\t\t\t{toast}\n\t\t\t{/* {isSaved && <Redirect to='/job' />} */}\n\t\t</JobInputContainer>\n\t)\n}\n\nexport default JobInput\n\nconst JobInputContainer = styled.div``\n\nconst CheckBoxContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\nconst CheckBoxLabel = styled.p`\n\t${RemoveSpaces}\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React from 'react'\nimport JobInput from './components/JobInput'\nimport styled from 'styled-components'\nimport { PageLayout } from '../../styles'\n\nfunction AddJob() {\n\treturn (\n\t\t<>\n\t\t\t<JobInput />\n\t\t</>\n\t)\n}\n\nexport default AddJob\n\n\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { useRecoilState } from 'recoil'\nimport { Card } from '../styles'\nimport styled from 'styled-components'\nimport { v4 as uuid } from 'uuid'\n\n\nexport default function PageTab({ atom, labels }) {\n\tconst [value, setValue] = useRecoilState(atom)\n\n\tconst handleChange = (_event, newValue) => {\n\t\tsetValue(newValue)\n\t}\n\n\tconst renderLabels = labels.map((item) => <Tab key={uuid()} label={item} />)\n\treturn (\n\t\t<TabBG>\n\t\t\t<Tabs\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tindicatorColor='primary'\n\t\t\t\ttextColor='primary'\n\t\t\t\t// centered\n\t\t\t>\n\t\t\t\t{renderLabels}\n\t\t\t</Tabs>\n\t\t</TabBG>\n\t)\n}\n\nconst TabBG = styled(Card)`\n\tpadding: 0px;\n\tmargin: 0px;\n\twidth: fit-content;\n`\n","export const stages = [\n\t'Shortlisted',\n\t'Assessment',\n\t'Hiring manager review',\n\t'Interview 1',\n\t'Interview 2',\n\t'Interview 3',\n\t'Salary Fitment',\n\t'Offer',\n\t'Documentation',\n\t'Joining',\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n\tCard,\n\tCategory,\n\tCategoryGrid,\n\tCategoryMainTitle,\n\tCategoryTitle,\n\tContent,\n\tDataContainer,\n\tDataContent,\n\tDataTitle,\n\tthemeBorder,\n\tTitle,\n} from '../../../styles'\nimport JobDetails from '../JobDetails'\nimport { v4 as uuid } from 'uuid'\nimport { formatDate } from '../../../utils/helperFunctions'\n\nfunction JobInfo({ job }) {\n\tconst { companyDetails, jobAddress, jobDetails, jobOpeningInfo } = job || {}\n\tconst { companyName, companyAddress } = companyDetails || {}\n\tconst { city, country, jobLocation, pincode, state, zone } = jobAddress || {}\n\tconst {\n\t\teligibility,\n\t\tresponsibilities,\n\t\tbenefits,\n\t\tjobCode,\n\t\tadditionalInformation,\n\t\tjobDescription,\n\t\ttargetDate,\n\t} = jobDetails || {}\n\n\tconst { assignedOn, industry, jobTitle, jobType, noOfOpenings } =\n\t\tjobOpeningInfo || {}\n\n\tconst renderList = (arr) =>\n\t\tarr.map((item) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{item}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Opening Info</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Type</Title>\n\t\t\t\t\t\t<Content>{jobType}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Openings</Title>\n\t\t\t\t\t\t<Content>{noOfOpenings}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Location</Title>\n\t\t\t\t\t\t<Content>{jobLocation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>City</Title>\n\t\t\t\t\t\t<Content>{city}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Zone</Title>\n\t\t\t\t\t\t<Content>{zone}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Details</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Code</Title>\n\t\t\t\t\t\t<Content>{jobCode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Description</Title>\n\t\t\t\t\t\t<Content>{jobDescription}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Additional Information</Title>\n\t\t\t\t\t\t<Content>{additionalInformation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Target Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(targetDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Eligibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(eligibility)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Responsibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(responsibilities)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Benifits</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(benefits)}</CategoryGrid>\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default JobInfo\n","import axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { jobEndpoint } from '../../api'\nimport ArrowBG from '../../assets/icons/arrow.svg'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport PageTab from '../../components/PageTab'\nimport Table from '../../components/Table'\nimport { currentUserAtom, jobAtom, jobTab } from '../../recoil/atoms'\n\nimport {\n\tCard,\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tRemoveSpaces,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\n\nimport { counter, renderWithLoader } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport JobInfo from './components/JobInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction JobDetails({ match }) {\n\tconst history = useHistory()\n\tconst id = match.params.id\n\tconst jobTabIndex = useRecoilValue(jobTab)\n\tconst labels = ['PipeLine', 'Applied Candidates', 'Job Details']\n\tconst [job, setJob] = useState()\n\tconst jobFullData = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst selectedJob = jobFullData\n\t\t? jobFullData.find((job) => job.jobDetails.jobCode === id)\n\t\t: job\n\n\tconst stageDataCount = counter(\n\t\tget(selectedJob, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJob(data)\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst candidateData = get(selectedJob, 'statusIds', []).map(\n\t\t(item) => item.candidateId\n\t)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\ttoast.success('Job Deleted')\n\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst editNavHandler = () => {\n\t\thistory.push(`/job/edit/${id}`)\n\t}\n\n\tconst candidateHeading = [\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t'Status',\n\t]\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderCandidateData = get(selectedJob, 'statusIds', []).map(\n\t\t({ candidateId, currentStage, _id }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={candidateId._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<NavLink to={`/applied/${_id}`}>\n\t\t\t\t\t\t\t{candidateId.candidateCode}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.fullName}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.primaryEmail}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.mobile}</TableData>\n\t\t\t\t\t<TableData>{candidateId.address.state}</TableData>\n\t\t\t\t\t{/* <TableData>45</TableData> */}\n\t\t\t\t\t<TableData>{candidateId.professional.industry}</TableData>\n\t\t\t\t\t<TableData>{candidateId.professional.functionalArea}</TableData>\n\t\t\t\t\t<TableData>{currentStage.stageName}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{renderWithLoader(\n\t\t\t\t\t\t\tcandidateData,\n\t\t\t\t\t\t\t<Table headings={renderCandidateHeading}>\n\t\t\t\t\t\t\t\t{renderCandidateData}\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\treturn <JobInfo job={selectedJob} />\n\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls\n\t\t\t\ttitle={get(selectedJob, 'jobOpeningInfo.jobTitle', 'Loading..')}>\n\t\t\t\t{/* <Controls title='Details'> */}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t<ControlButton onClick={toggleModal} color='secondary'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={editNavHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<DeleteModal\n\t\t\t\t\topen={isModalOpen}\n\t\t\t\t\tonClose={toggleModal}\n\t\t\t\t\tcount={1}\n\t\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t\t/>\n\t\t\t\t<PageTab atom={jobTab} labels={labels} />\n\t\t\t\t{renderTabBody(jobTabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobDetails\n","import {\n\tButton,\n\tIconButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n} from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { candidateEndpoint, createCandidate } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tCategoryTitle,\n\tContentContainer,\n\tControlButton,\n\tInputContainer,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tStyledTextField,\n} from '../../../styles'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\n\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { useRecoilValue } from 'recoil'\nimport { candidateAtom, currentUserAtom } from '../../../recoil/atoms'\nimport { get } from 'lodash'\nimport { useHistory } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport { toast } from '../../../components/Toast'\n\nfunction CandidateInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst candidateCode = get(match, 'params.id', '')\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState(\n\t\tcandidates &&\n\t\t\tcandidates.find((candidate) => candidate.candidateCode === candidateCode)\n\t)\n\n\tconst { basic, address, professional } = candidate || {}\n\n\tconst {\n\t\tfullName: _fullName,\n\t\tprimaryEmail: _primaryEmail,\n\t\tsecondaryEmail: _secondaryEmail,\n\t\tmobile: _mobile,\n\t\tpan: _pan,\n\t\tdateOfBirth: _dateOfBirth,\n\t} = basic || {}\n\n\tconst {\n\t\tcountry: _country,\n\t\tpincode: _pincode,\n\t\tstate: _state,\n\t\tstreetName: _streetName,\n\t} = address || {}\n\n\tconst {\n\t\tcurrentSalary: _currentSalary,\n\t\teducation: _education,\n\t\texpected: _expected,\n\t\texperience: _experience,\n\t\tfunctionalArea: _functionalArea,\n\t\tindustry: _industry,\n\t\tskillSet: _skillSet,\n\t} = professional || {}\n\n\t// Basic\n\tconst [fullName, setFullName] = useState(_fullName)\n\n\tconst [primaryEmail, setPrimaryEmail] = useState(_primaryEmail)\n\tconst [secondaryEmail, setSecondaryEmail] = useState(_secondaryEmail)\n\tconst [mobile, setMobile] = useState(_mobile)\n\tconst [pan, setPan] = useState(_pan)\n\tconst [dateOfBirth, setDateOfBirth] = useState(pickerDateFormat(_dateOfBirth))\n\n\t// Address\n\tconst [streetName, setStreetName] = useState(_streetName)\n\tconst [state, setState] = useState(_state)\n\tconst [country, setCountry] = useState(_country)\n\tconst [pincode, setPincode] = useState(_pincode)\n\n\t// Professional\n\tconst [experience, setExperience] = useState(_experience || [])\n\tconst [education, setEducation] = useState(_education || [])\n\tconst [skillSet, setSkillSet] = useState(_skillSet || [])\n\tconst [skillSetVal, setSkillSetVal] = useState()\n\n\tconst [currentSalary, setCurrentSalary] = useState(_currentSalary)\n\tconst [expected, setExpected] = useState(_expected)\n\tconst [industry, setIndustry] = useState(_industry)\n\tconst [functionalArea, setFunctionalArea] = useState(_functionalArea)\n\n\tconst [jobTitle, setJobTitle] = useState()\n\tconst [company, setCompany] = useState()\n\tconst [summary, setSummary] = useState()\n\tconst [fromDate, setFromDate] = useState(pickerDateFormat())\n\tconst [tillDate, setTillDate] = useState(pickerDateFormat())\n\n\tconst [qualificationName, setQualificationName] = useState()\n\tconst [instituteName, setInstituteName] = useState()\n\tconst [studiedFromDate, setStudiedFromDate] = useState(pickerDateFormat())\n\tconst [studiedTillDate, setStudiedTillDate] = useState(pickerDateFormat())\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${candidateEndpoint}/${candidateCode}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\t\n\tconst addExpHandler = () => {\n\t\tconst data = {\n\t\t\tjobTitle,\n\t\t\tcompany,\n\t\t\tsummary,\n\t\t\tfromDate,\n\t\t\ttillDate,\n\t\t}\n\n\t\tconst tempExp = [...experience]\n\t\ttempExp.push(data)\n\t\tsetExperience(tempExp)\n\t}\n\n\tconst addEduHandler = () => {\n\t\tconst data = {\n\t\t\tqualificationName,\n\t\t\tinstituteName,\n\t\t\tstudiedFromDate,\n\t\t\tstudiedTillDate,\n\t\t}\n\n\t\tconst tempEdu = [...education]\n\t\ttempEdu.push(data)\n\t\tsetEducation(tempEdu)\n\t}\n\n\tconst saveHandler = async () => {\n\t\tconst candidateData = {\n\t\t\tbasic: {\n\t\t\t\tfullName,\n\t\t\t\tprimaryEmail,\n\t\t\t\tsecondaryEmail,\n\t\t\t\tmobile,\n\t\t\t\tpan,\n\t\t\t\tdateOfBirth: new Date(dateOfBirth),\n\t\t\t},\n\n\t\t\tprofessional: {\n\t\t\t\texperience,\n\t\t\t\teducation,\n\t\t\t\tskillSet,\n\t\t\t\tcurrentSalary: Number(currentSalary),\n\t\t\t\texpected: Number(expected),\n\t\t\t\tindustry,\n\t\t\t\tfunctionalArea,\n\t\t\t},\n\t\t\tcandidateCode: codeGenerator(fullName, pan, mobile),\n\t\t\tstatus: 'New',\n\t\t\tstage: 'Not Applied',\n\n\t\t\taddress: {\n\t\t\t\tstreetName,\n\t\t\t\tstate,\n\t\t\t\tcountry,\n\t\t\t\tpincode,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tawait axios.patch(\n\t\t\t\t\t`${candidateEndpoint}/${candidateCode}`,\n\t\t\t\t\tcandidateData,\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t)\n\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('Candidate Edited')\n\t\t\t} else {\n\t\t\t\tawait axios.post(candidateEndpoint, candidateData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('New Candidate Added')\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate Controls'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.candidate.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.candidate.create')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={saveHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Basic</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={fullName}\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\n\t\t\t\t\t\tlabel='Full Name'\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={[primaryEmail]}\n\t\t\t\t\t\tonChange={(e) => setPrimaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Primary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={secondaryEmail}\n\t\t\t\t\t\tonChange={(e) => setSecondaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Secondary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={mobile}\n\t\t\t\t\t\tonChange={(e) => setMobile(e.target.value)}\n\t\t\t\t\t\tlabel='Mobile No.'\n\t\t\t\t\t/> \n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pan}\n\t\t\t\t\t\tonChange={(e) => setPan(e.target.value)}\n\t\t\t\t\t\tlabel='PAN No'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Date of Birth'\n\t\t\t\t\t\tdefaultValue={dateOfBirth}\n\t\t\t\t\t\tonChange={(e) => setDateOfBirth(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Address</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={streetName}\n\t\t\t\t\t\tonChange={(e) => setStreetName(e.target.value)}\n\t\t\t\t\t\tlabel='Street Name'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}\n\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Professional</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={currentSalary}\n\t\t\t\t\t\tonChange={(e) => setCurrentSalary(e.target.value)}\n\t\t\t\t\t\tlabel='Current Salary'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={expected}\n\t\t\t\t\t\tonChange={(e) => setExpected(e.target.value)}\n\t\t\t\t\t\tlabel='Expected Salary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='industry'>Industry</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Finance'>Finance</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Marketing'>Marketing</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='functionalArea'>Functional Area</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Functional Area'\n\t\t\t\t\t\t\tvalue={functionalArea}\n\t\t\t\t\t\t\tonChange={(e) => setFunctionalArea(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Software'>Software</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Accounting'>Accounting</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t{skillSet.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(skillSet, setSkillSet)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, skillSetVal, skillSet, setSkillSet)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={skillSetVal}\n\t\t\t\t\t\t\tonChange={(e) => setSkillSetVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Skill Set'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</MultipleItemInputContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Experience</CardTitle>\n\n\t\t\t\t\t{experience.map(\n\t\t\t\t\t\t({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Job Title</h1>\n\t\t\t\t\t\t\t\t\t<p>{jobTitle}</p>\n\t\t\t\t\t\t\t\t\t<h1>Company</h1>\n\t\t\t\t\t\t\t\t\t<p>{company}</p>\n\t\t\t\t\t\t\t\t\t<h1>Summary</h1>\n\t\t\t\t\t\t\t\t\t<p>{summary}</p>\n\t\t\t\t\t\t\t\t\t<h1>From Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{fromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Till Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{tillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={company}\n\t\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\n\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={summary}\n\t\t\t\t\t\tonChange={(e) => setSummary(e.target.value)}\n\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='From Date'\n\t\t\t\t\t\tvalue={fromDate}\n\t\t\t\t\t\tonChange={(e) => setFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={tillDate}\n\t\t\t\t\t\tonChange={(e) => setTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addExpHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Education</CardTitle>\n\n\t\t\t\t\t{education.map(\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\tqualificationName,\n\t\t\t\t\t\t\tinstituteName,\n\t\t\t\t\t\t\tstudiedFromDate,\n\t\t\t\t\t\t\tstudiedTillDate,\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Qualification</h1>\n\t\t\t\t\t\t\t\t\t<p>{qualificationName}</p>\n\t\t\t\t\t\t\t\t\t<h1>Institute</h1>\n\t\t\t\t\t\t\t\t\t<p>{instituteName}</p>\n\n\t\t\t\t\t\t\t\t\t<h1>Studied From</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedFromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Studied Till</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedTillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={qualificationName}\n\t\t\t\t\t\tonChange={(e) => setQualificationName(e.target.value)}\n\t\t\t\t\t\tlabel='Qualification Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={instituteName}\n\t\t\t\t\t\tonChange={(e) => setInstituteName(e.target.value)}\n\t\t\t\t\t\tlabel='Institute Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Studied From Date'\n\t\t\t\t\t\tvalue={studiedFromDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Studied Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={studiedTillDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addEduHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateInput\n","import React from 'react'\nimport { PageLayout } from '../../styles'\nimport CandidateInput from './components/CandidateInput'\n\nfunction AddCandidate() {\n\treturn (\n\t\t<>\n\t\t\t<CandidateInput />\n\t\t</>\n\t)\n}\n\nexport default AddCandidate\n","import React from 'react'\nimport { Card, Category, CategoryGrid, CategoryMainTitle, Content, DataContainer, RemoveSpaces, Title } from '../../../styles'\nimport styled from 'styled-components'\nimport { get } from 'lodash'\nimport { formatDate } from '../../../utils/helperFunctions'\nimport { v4 as uuid } from 'uuid'\n\nfunction CandidateInfo({ data }) {\n\tconst { basic, professional, address, source } = data || {}\n\tconst { fullName, primaryEmail, secondaryEmail, mobile, pan, dateOfBirth } =\n\t\tbasic || {}\n\n\t\n\tconst {\n\t\texperience,\n\t\teducation,\n\t\tskillSet,\n\t\tcurrentSalary,\n\t\texpected,\n\t\tindustry,\n\t\tfunctionalArea,\n\t} = professional || {}\n\n\tconst { streetName, state, country, pincode } = address || {}\n\n\tconst renderExperience =\n\t\texperience &&\n\t\texperience.map(({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\treturn (\n\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Company</Title>\n\t\t\t\t\t\t<Content>{company}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Summary</Title>\n\t\t\t\t\t\t<Content>{summary}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>From Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(fromDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Till Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(tillDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t)\n\t\t})\n\n\tconst renderSkill =\n\t\tskillSet &&\n\t\tskillSet.map((skill) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{skill}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\tconst renderEducation =\n\t\teducation &&\n\t\teducation.map(\n\t\t\t({\n\t\t\t\tqualificationName,\n\t\t\t\tinstituteName,\n\t\t\t\tstudiedFromDate,\n\t\t\t\tstudiedTillDate,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Qualification</Title>\n\t\t\t\t\t\t\t<Content>{qualificationName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Institute</Title>\n\t\t\t\t\t\t\t<Content>{instituteName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Start Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedFromDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>End Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedTillDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Basic</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Fullname</Title>\n\t\t\t\t\t\t<Content>{fullName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Primary Email</Title>\n\t\t\t\t\t\t<Content>{primaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Secondary Email</Title>\n\t\t\t\t\t\t<Content>{secondaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Mobile</Title>\n\t\t\t\t\t\t<Content>{mobile}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>PAN Number</Title>\n\t\t\t\t\t\t<Content>{pan}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Date Of Birth</Title>\n\t\t\t\t\t\t<Content>{formatDate(dateOfBirth)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Street Name</Title>\n\t\t\t\t\t\t<Content>{streetName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>SkillSet</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderSkill}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Professional</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Functional Area</Title>\n\t\t\t\t\t\t<Content>{functionalArea}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Current Salary</Title>\n\t\t\t\t\t\t<Content>{currentSalary}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Expected Salary</Title>\n\t\t\t\t\t\t<Content>{expected}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t\t{renderExperience}\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Education</CategoryMainTitle>\n\t\t\t\t{renderEducation}\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default CandidateInfo\n\n\n","import { IconButton } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcandidateTab,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport CandidateInfo from './components/CandidateInfo'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport {\n\tcounter,\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport Table from '../../components/Table'\nimport { stages } from '../../utils/sharedVariables'\n\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction CandidateDetails({ match }) {\n\tconst id = match.params.id\n\tconst history = useHistory()\n\tconst tabLabels = ['Pipeline', 'Applied Jobs', 'Candidate Details']\n\tconst tabIndex = useRecoilValue(candidateTab)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${candidateEndpoint}/${id}`, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Deleted')\n\t\t} catch (e) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState()\n\n\tconst singleCandidate = candidates\n\t\t? candidates.find((candidate) => candidate.candidateCode === id)\n\t\t: candidate\n\n\tuseEffect(() => {\n\t\taxios.get(`${candidateEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst navHandler = () => {\n\t\thistory.push(`/candidate/edit/${id}`)\n\t}\n\n\tconst assignHandler = () => {\n\t\tsetChecked({ [singleCandidate._id]: true })\n\t\thistory.push('/job/apply')\n\t}\n\n\tconst headings = ['Job Code', 'Job Title', 'Openings', 'Status', 'Posted on']\n\tconst renderHeading = headings.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\tconst renderData = get(singleCandidate, 'statusIds', []).map((status) => {\n\t\treturn (\n\t\t\t<TableRow key={status._id}>\n\t\t\t\t<TableData>{status.jobId.jobDetails.jobCode}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t<TableData>{status.currentStage.stageName}</TableData>\n\t\t\t\t<TableData>{formatDate(status.jobId.createdAt)}</TableData>\n\t\t\t</TableRow>\n\t\t)\n\t})\n\n\tconst stageDataCount = counter(\n\t\tget(singleCandidate, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{renderWithLoader(\n\t\t\t\t\t\t\tsingleCandidate,\n\t\t\t\t\t\t\t<Table headings={renderHeading}>{renderData}</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\treturn <CandidateInfo data={singleCandidate} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={get(singleCandidate, 'basic.fullName', 'Loading..')}>\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t\t\t\t<IconButton onClick={toggleModal} color='secondary'>\n\t\t\t\t\t\t<Delete />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={assignHandler}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tAssign\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={navHandler}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={1}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={candidateTab} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateDetails\n","import React from 'react'\nimport JobPage from './JobPage'\nimport styled from 'styled-components'\nfunction ApplyJobList() {\n\treturn (\n\t\t<ApplyJobListContainer>\n\t\t\t<JobPage toApply />\n\t\t</ApplyJobListContainer>\n\t)\n}\n\nexport default ApplyJobList\n\nconst ApplyJobListContainer = styled.div`\n\twidth: 100%;\n\t\n`\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../recoil/atoms'\nimport {\n\tCard,\n\tCategoryMainTitle,\n\tCategory,\n\tCategoryGrid,\n\tDataContainer,\n\tTitle,\n\tContent,\n} from '../../styles'\nimport { formatDate } from '../../utils/helperFunctions'\n\nfunction ProfilePage() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { firstName, lastName, userName, email, contact, roleId, createdAt } =\n\t\tcurrentUser || {}\n\tconst { name } = roleId || {}\n\n\treturn (\n\t\t<>\n\t\t\t<Card>\n\t\t\t\t<Category>\n\t\t\t\t\t<CategoryMainTitle>Profile</CategoryMainTitle>\n\t\t\t\t\t<CategoryGrid>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>First Name</Title>\n\t\t\t\t\t\t\t<Content>{firstName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Last Name</Title>\n\t\t\t\t\t\t\t<Content>{lastName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Username</Title>\n\t\t\t\t\t\t\t<Content>{userName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Email</Title>\n\t\t\t\t\t\t\t<Content>{email}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Contact</Title>\n\t\t\t\t\t\t\t<Content>{contact}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Role</Title>\n\t\t\t\t\t\t\t<Content>{name}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Created At</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(createdAt)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t</Category>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n\nexport default ProfilePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n\tModalBody,\n\tModalTitle,\n\tModalWarning,\n\tModalText,\n\tModalButtonContainer,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport { IconButton } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport {\n\tcompanyAtom,\n\tcompanyCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport axios from 'axios'\nimport { companiesEndpoint } from '../../api'\nimport { v4 as uuid } from 'uuid'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport { selectedCompanies } from '../../recoil/selectors'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { SMUIButton, SMUIIconButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\n\nfunction CompanyPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\tconst [checked, setChecked] = useRecoilState(companyCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst selectedCompany = useRecoilValue(selectedCompanies)\n\n\tuseEffect(() => {\n\t\taxios.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\t\n\tconst companyHeading = [\n\t\t'Select',\n\t\t'Company Name',\n\t\t'Company Address',\n\t\t'Jobs Assigned',\n\t\t'Created On',\n\t]\n\n\tconst renderCompanyHeading = companyHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteManyHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(companiesEndpoint, selectedCompany, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Companies deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.success('Something went wrong')\n\t\t}\n\t}\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst renderCompanyData =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName, companyAddress, jobIds, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{companyName}</TableData>\n\t\t\t\t\t<TableData>{companyAddress}</TableData>\n\t\t\t\t\t<TableData>{jobIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Company'>\n\t\t\t\t{selectedCompany.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<SMUIModal open={isModalOpen} onClose={toggleModal}>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<ModalTitle>{selectedCompany.length} Items Selected</ModalTitle>\n\t\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t\t<SMUIButton onClick={toggleModal}>Cancel</SMUIButton>\n\t\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\t\tonClick={deleteManyHandler}\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</SMUIButton>\n\t\t\t\t\t</ModalButtonContainer>\n\t\t\t\t</ModalBody>\n\t\t\t</SMUIModal>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tcompanies,\n\t\t\t\t\t<Table headings={renderCompanyHeading}>{renderCompanyData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyPage\n","import styled from 'styled-components'\nimport { Button, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tContentContainer,\n\tRemoveSpaces,\n\tControlButton,\n} from '../../../styles'\nimport axios from 'axios'\nimport { companyEndpoint } from '../../../api'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from '../../../components/Toast'\n\nfunction CompanyInput() {\n\tconst history = useHistory()\n\tconst [companyName, setCompanyName] = useState('')\n\tconst [companyAddress, setCompanyAddress] = useState('')\n\n\tconst AddCompanyHandler = async () => {\n\t\tconst companyData = {\n\t\t\tcompanyName,\n\t\t\tcompanyAddress,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(companyEndpoint, companyData, { withCredentials: true })\n\t\t\ttoast.success('Company Added')\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Company'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={AddCompanyHandler}\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tvariant='contained'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<Title>Company Details</Title>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={companyName}\n\t\t\t\t\t\tonChange={(e) => setCompanyName(e.target.value)}\n\t\t\t\t\t\tlabel='Company Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvalue={companyAddress}\n\t\t\t\t\t\tonChange={(e) => setCompanyAddress(e.target.value)}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tlabel='Company Address'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyInput\n\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nconst CompanyTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\tfont-size: 0.8em;\n\t}\n`\n","import React from 'react'\nimport CompanyInput from './components/CompanyInput'\nimport styled from 'styled-components'\nfunction AddCompany() {\n\treturn (\n\t\t<>\n\t\t\t<CompanyInput />\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n\nconst AddCompanyContainer = styled.div`\n\t/* height: 100vh; */\n`\n","import { SMUIButton, SMUITextField } from '../../../styles/StyledMaterialUI'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces, StyledTextField } from '../../../styles'\nimport { Button, TextField, CircularProgress } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport {\n\tcredentialAtom,\n\tcurrentUserAtom,\n\tisAuthAtom,\n\tloading\n} from '../../../recoil/atoms'\nimport { useHistory } from 'react-router-dom'\nimport { loginEndpoint } from '../../../api'\n\nimport axios from 'axios'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\nimport { toast } from '../../../components/Toast'\n\nfunction SigninForm() {\n\tconst history = useHistory()\n\n\tconst [user, setUser] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [isAuth, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst submitHandler = async (e) => {\n\t\te.preventDefault()\n\t\tconst cred = { user, password }\n\t\tconst data = encryptObj(cred)\n\t\ttry {\n\t\t\tsetIsLoading(true);\n\t\t\tconst resData = await axios.post(\n\t\t\t\tloginEndpoint,\n\t\t\t\t{ data },\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\tif (resData.data.userData) {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetIsAuth(true)\n\t\t\t\tsetCurrentUser(resData.data.userData)\n\t\t\t\thistory.push('/dashboard')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetIsLoading(false);\n\t\t\ttoast.error('Invalid Credentials')\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<SigninFormContainer onSubmit={submitHandler}>\n\t\t\t<SiginFormTitle>SOS Dashboard</SiginFormTitle>\n\t\t\t<SiginFormDesc>Welcome Back, Please enter your credentials</SiginFormDesc>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={user}\n\t\t\t\tonChange={(e) => setUser(e.target.value)}\n\t\t\t\tlabel='Email / Username'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='text'\n\t\t\t/>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\tlabel='Password'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='password'\n\t\t\t/>\n\t\t\t<SignInButton type='submit' variant='contained' color='primary'>\n\t\t\t\t{/* Sign In */}\n\t\t\t\t{\n\t\t\t\t\tisLoading ? <CircularProgress size={24} style={{color: 'white'}} /> : \"Sign In\"\n\t\t\t\t}\n\t\t\t</SignInButton>\n\t\t</SigninFormContainer>\n\t)\n}\n\nexport default SigninForm\n\nconst SiginFormTitle = styled.h1`\n\t${RemoveSpaces};\n\tpadding-bottom: 5px;\n`\n\nconst SiginFormDesc = styled.p`\n\t${RemoveSpaces};\n\tpadding-bottom: 30px;\n`\n\nconst SigninInput = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t}\n`\n\nconst SignInButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px 0px;\n\n\t\t/* padding: 15px; */\n\t}\n`\n\nconst SigninFormContainer = styled.form`\n\tdisplay: flex;\n\tflex: 1;\n\tpadding: 70px;\n\tflex-direction: column;\n\ttext-align: left;\n\tjustify-content: space-around;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport SigninForm from './components/SigninForm'\nimport AuthIcon from '../../assets/icons/auth.svg'\n\nfunction Signin() {\n\treturn (\n\t\t<SigninContainer>\n\t\t\t{/* Image */}\n\t\t\t<AuthImage src={AuthIcon} />\n\n\t\t\t{/* SiginForm */}\n\t\t\t<SigninForm />\n\t\t</SigninContainer>\n\t)\n}\n\nexport default Signin\n\nconst SigninContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: space-around;\n\theight: 100%;\n`\n\nconst AuthImage = styled.img`\n\twidth: 500px;\n\tflex: 1;\n\tpadding: 70px;\n`\n","import { Button } from '@material-ui/core'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\nimport axios from 'axios'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { logoutEndpoint } from '../api'\nimport { currentUserAtom, isAuthAtom } from '../recoil/atoms'\nimport { RemoveSpaces, themeBorder } from '../styles/index'\nimport { toast } from './Toast'\n\nfunction Navbar() {\n\tconst [anchorEl, setAnchorEl] = useState(null)\n\tconst [, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst history = useHistory()\n\tconst handleClick = (event) => setAnchorEl(event.currentTarget)\n\tconst handleClose = () => setAnchorEl(null)\n\n\tconst navHandler = () => {\n\t\thistory.push(`/profile`)\n\t\thandleClose()\n\t}\n\n\tconst logoutHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.post(logoutEndpoint, {}, { withCredentials: true })\n\t\t\tsetIsAuth(false)\n\t\t\thandleClose()\n\t\t\thistory.push(`/`)\n\t\t} catch (e) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<NavbarContainer>\n\t\t\t<Logo>\n\t\t\t\tSwitch <LogoHighlight>On Success</LogoHighlight>\n\t\t\t</Logo>\n\n\t\t\t<Button startIcon={<AccountCircleOutlinedIcon />} onClick={handleClick}>\n\t\t\t\t{currentUser && currentUser.firstName}\n\t\t\t</Button>\n\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}>\n\t\t\t\t<MenuItem onClick={navHandler}>Profile</MenuItem>\n\t\t\t\t<MenuItem onClick={logoutHandler}>Logout</MenuItem>\n\t\t\t</Menu>\n\t\t</NavbarContainer>\n\t)\n}\n\nexport default Navbar\n\nconst NavbarContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tposition: sticky;\n\tpadding: 10px 20px;\n\t${themeBorder}\n\tborder-radius: 0px;\n\tjustify-content: space-between;\n`\nconst Logo = styled.h4`\n\t${RemoveSpaces};\n\tcolor: blue;\n`\n\nconst LogoHighlight = styled.span`\n\tcolor: orange;\n`\n","import { Checkbox, TextField } from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { roleEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport { SMUITextField } from '../../../styles/StyledMaterialUI'\n\nimport { toast } from '../../../components/Toast'\nimport { useHistory } from 'react-router-dom'\n\nfunction RoleInput() {\n\tconst history = useHistory()\n\n\tconst [name, setName] = useState('')\n\tconst [vendor, setVendor] = useState('')\n\n\tconst defaultPermissions = {\n\t\tjob: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tcandidate: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tuser: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\trole: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t}\n\n\tconst [permissions, setPermissions] = useState(defaultPermissions)\n\n\tuseEffect(() => {}, [])\n\n\tconst resetHandler = () => {}\n\n\tconst submitHandler = async () => {\n\t\tconsole.log({ permissions })\n\t\tconst roleData = {\n\t\t\tname,\n\t\t\tvendor,\n\t\t\tpermissions,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(roleEndpoint, roleData, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New Role Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst checkHandler = (e, role, type) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp[type] = checked\n\t\tif (\n\t\t\t!(\n\t\t\t\ttype === 'read' &&\n\t\t\t\t(permissionsTemp['delete'] || permissionsTemp['update'])\n\t\t\t)\n\t\t) {\n\t\t\tif ((type === 'delete' && checked) || (type === 'update' && checked)) {\n\t\t\t\tpermissionsTemp['read'] = checked\n\t\t\t}\n\t\t\tsetPermissions({\n\t\t\t\t...permissions,\n\t\t\t\t[role]: permissionsTemp,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst selectAllHandler = (e, role) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp.read = checked\n\t\tpermissionsTemp.create = checked\n\t\tpermissionsTemp.update = checked\n\t\tpermissionsTemp.delete = checked\n\t\tsetPermissions({\n\t\t\t...permissions,\n\t\t\t[role]: permissionsTemp,\n\t\t})\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Role'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={submitHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Role Details</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={vendor}\n\t\t\t\t\t\tonChange={(e) => setVendor(e.target.value)}\n\t\t\t\t\t\tlabel='Vendor'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Permissions</CardTitle>\n\t\t\t\t\t<PermissionTable>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'job')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Jobs</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'candidate')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Candidates</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'role')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Roles</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'user')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>User</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</PermissionTable>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RoleInput\n\nconst RoleTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 5px 0px;\n\t}\n`\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 10px 0px;\n`\n\nconst PermissionTable = styled.table`\n\twidth: 100%;\n\ttext-align: left;\n\tborder-collapse: collapse;\n`\nconst PermissionTableRow = styled.tr`\n\tdisplay: flex;\n`\n\nconst PermissionTableData = styled.td`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst PermissionTableHead = styled.th`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst Content = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 10px;\n`\n","import React from 'react'\nimport Controls from '../../components/Controls'\nimport RoleInput from './components/RoleInput'\n\nfunction AddRole() {\n    return (\n        <div>\n          <RoleInput/>\n        </div>\n    )\n}\n\nexport default AddRole\n","import {\n\tInputLabel,\n\tMenuItem\n} from '@material-ui/core'\nimport axios from 'axios'\nimport passwordGenerator from 'generate-password'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport { rolesEndpoint, userEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { toast } from '../../../components/Toast'\nimport { roleAtom } from '../../../recoil/atoms'\nimport {\n\tCard, ContentContainer, ControlButton,\n\n\n\n\tRemoveSpaces, StyledCheckbox\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField\n} from '../../../styles/StyledMaterialUI'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\n//------------\n\nfunction UserInput() {\n\tconst history = useHistory()\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [roleId, setRoleId] = useState('')\n\n\tconst [firstName, setFirstName] = useState('')\n\tconst [lastName, setLastName] = useState('')\n\tconst [userName, setUserName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [contact, setContact] = useState('')\n\tconst [isAutoGenerated, setIsAutoGenerated] = useState('')\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst saveUserHandler = async () => {\n\t\tconst userData = {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tuserName,\n\t\t\tpassword,\n\t\t\temail,\n\t\t\tcontact,\n\t\t\troleId,\n\t\t}\n\t\tconst data = encryptObj(userData)\n\n\t\ttry {\n\t\t\tawait axios.post(userEndpoint, { data }, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New User Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('New User Added')\n\t\t}\n\t}\n\n\tconst autoGeneratePassword = (e) => {\n\t\tconst checked = e.target.checked\n\n\t\tsetIsAutoGenerated(checked)\n\t\tif (checked) {\n\t\t\tconst password = passwordGenerator.generate({\n\t\t\t\tlength: 14,\n\t\t\t\tnumbers: true,\n\t\t\t\tsymbols: true,\n\t\t\t\texcludeSimilarCharacters: true,\n\t\t\t})\n\t\t\tsetPassword(password)\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add User'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={saveUserHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='role'>Role</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Role'\n\t\t\t\t\t\t\tvalue={roleId}\n\t\t\t\t\t\t\tonChange={(e) => setRoleId(e.target.value)}>\n\t\t\t\t\t\t\t{roles &&\n\t\t\t\t\t\t\t\troles.map((role) => {\n\t\t\t\t\t\t\t\t\treturn <MenuItem key={role._id} value={role._id}>{role.name}</MenuItem>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tdisabled={isAutoGenerated}\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t/>\n\t\t\t\t\t<AutoGeneratorPassContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isAutoGenerated}\n\t\t\t\t\t\t\tonChange={autoGeneratePassword}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AutoGeneratorLabel>Auto Generated</AutoGeneratorLabel>\n\t\t\t\t\t</AutoGeneratorPassContainer>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\n\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\n\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={contact}\n\t\t\t\t\t\tonChange={(e) => setContact(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Contact No.'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserInput\n\nconst AutoGeneratorPassContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\n\nconst AutoGeneratorLabel = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React from 'react'\nimport UserInput from './components/UserInput'\n\nfunction AddUser() {\n    return (\n        <>\n            <UserInput/>\n        </>\n    )\n}\n\nexport default AddUser\n","import React from 'react'\nimport JobInput from './components/JobInput'\n\nfunction EditJob(props) {\n\treturn (\n\t\t<>\n\t\t\t<JobInput edit {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditJob\n","import { MenuItem } from '@material-ui/core'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Timeline, TimelineEvent } from 'react-event-timeline'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint, statusEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tappliedCandidateTabAtom,\n\tcandidateAtom,\n\tcurrentUserAtom,\n\tstatusAtom,\n} from '../../recoil/atoms'\n\nimport { Card, ContentContainer, ControlButton } from '../../styles'\nimport { SMUISelect } from '../../styles/StyledMaterialUI'\nimport { formatDate } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport CandidateInfo from './components/CandidateInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction AppliedCandidate({ match }) {\n\tconst { id } = match.params\n\n\tconst history = useHistory()\n\tconst tabIndex = useRecoilValue(appliedCandidateTabAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [status, setStatus] = useRecoilState(statusAtom)\n\tconst [selectedStage, setSelectedStage] = useState(newStageGenerator()[0])\n\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState()\n\tconst { candidateId } = status || {}\n\tconst singleCandidate = () =>\n\t\tcandidates\n\t\t\t? candidates.find((candidate) => candidate._id.toString() === candidateId)\n\t\t\t: candidate\n\n\t//new stage --> stages\n\t//Current stage -> new stage\n\n\tuseEffect(() => {\n\t\taxios.get(`${statusEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setStatus(data))\n\t\t\t.catch((e) => console.log(e))\n\n\t\taxios.get(`${candidateEndpoint}/${candidateId}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t\t// setSelectedStage(get(status, 'currentStage.stageName', ''))\n\t}, [candidateId])\n\n\tconst changeStageHangler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(\n\t\t\t\t`${statusEndpoint}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tstageName: selectedStage,\n\t\t\t\t\tuserId: currentUser._id,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Stage Change')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst tabLabels = ['Timeline', 'Candidate Details']\n\n\tconst renderTimelineData = get(status, 'stages', []).map(\n\t\t({ stageName, createdAt, userId }) => {\n\t\t\treturn (\n\t\t\t\t<TimelineEvent\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\ttitle={`${stageName} set by ${userId.firstName} ${userId.lastName}`}\n\t\t\t\t\tcreatedAt={formatDate(createdAt)}></TimelineEvent>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Timeline>{renderTimelineData}</Timeline>\n\t\t\t\t\t</Card>\n\t\t\t\t)\n\t\t\tcase 1:\n\t\t\t\treturn <CandidateInfo data={singleCandidate()} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\t// const renderStageOption =\n\t// \tstatus &&\n\t// \tstages\n\t// \t\t.filter((stage) => stage !== status.currentStage.stageName)\n\t// \t\t.map((stage) => {\n\t// \t\t\treturn <MenuItem value={stage}>{stage}</MenuItem>\n\t// \t\t})\n\n\tfunction newStageGenerator() {\n\t\tconst currentStatus = status && status.currentStage.stageName\n\t\tconst index = stages.indexOf(currentStatus)\n\t\tconst newStages = stages.slice(index + 1)\n\t\treturn newStages\n\t}\n\n\tconst renderStageOption = newStageGenerator().map((stage) => {\n\t\treturn <MenuItem key={uuid()} value={stage}>{stage}</MenuItem>\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate'>\n\t\t\t\t<SMUISelect\n\t\t\t\t\tvalue={selectedStage}\n\t\t\t\t\tonChange={(e) => setSelectedStage(e.target.value)}>\n\t\t\t\t\t{renderStageOption}\n\t\t\t\t</SMUISelect>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={changeStageHangler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSet\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={appliedCandidateTabAtom} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default AppliedCandidate\n","import React from 'react'\nimport CandidateInput from './components/CandidateInput'\n\nfunction EditCandidate(props) {\n\treturn (\n\t\t<>\n\t\t\t<CandidateInput edit {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditCandidate\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Sidebar from './components/Sidebar'\nimport { HashRouter, Switch, Route, useHistory } from 'react-router-dom'\nimport DashboardPage from './pages/Dashboard'\nimport JobPage from './pages/Job/JobPage'\nimport CandidatePage from './pages/Candidate'\nimport RolePage from './pages/Role'\nimport UserPage from './pages/User'\nimport AddJob from './pages/Job/AddJob'\nimport JobDetails from './pages/Job/JobDetails'\nimport AddCandidate from './pages/Candidate/AddCandidate'\nimport CandidateDetails from './pages/Candidate/CandidateDetails'\nimport ApplyJobList from './pages/Job/ApplyJobList'\nimport ProfilePage from './pages/Profile'\nimport CompanyPage from './pages/Company'\nimport AddCompany from './pages/Company/AddCompany'\nimport Signin from './pages/Signin'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { credentialAtom, currentUserAtom, isAuthAtom } from './recoil/atoms'\nimport Navbar from './components/Navbar'\nimport AddRole from './pages/Role/AddRole'\nimport AddUser from './pages/User/AddUser'\nimport EditJob from './pages/Job/EditJob'\nimport axios from 'axios'\nimport { verifyEndpoint } from './api'\nimport AppliedCandidate from './pages/Candidate/AppliedCandidate'\nimport EditCandidate from './pages/Candidate/EditCandidate'\nimport Loader from './components/Loader'\n\nfunction App() {\n\tconst [isAuth, setAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n\n\t// CurrentUser Null --> skeleton\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.post(verifyEndpoint, {}, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetAuth(true)\n\t\t\t\tsetCurrentUser(data.userData)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tsetAuth(false)\n\t\t\t\tsetCurrentUser({})\n\t\t\t})\n\t}, [])\n\n\tconst routes = (\n\t\t<Switch>\n\t\t\t<Route path='/dashboard' exact component={DashboardPage} />\n\t\t\t<Route path='/job/add' component={AddJob} />\n\t\t\t<Route path='/job/apply' component={ApplyJobList} />\n\t\t\t<Route path='/job/edit/:id' component={EditJob} />\n\t\t\t<Route path='/job/:id' component={JobDetails} />\n\t\t\t<Route path='/job' component={JobPage} />\n\n\t\t\t<Route path='/candidate/add' component={AddCandidate} />\n\t\t\t<Route path='/candidate/edit/:id' component={EditCandidate} />\n\n\t\t\t<Route path='/candidate/:id' component={CandidateDetails} />\n\t\t\t<Route path='/candidate' component={CandidatePage} />\n\n\t\t\t<Route path='/company/add' component={AddCompany} />\n\t\t\t<Route path='/company' component={CompanyPage} />\n\n\t\t\t<Route path='/role/add' component={AddRole} />\n\t\t\t<Route path='/role' component={RolePage} />\n\n\t\t\t<Route path='/user/add' component={AddUser} />\n\t\t\t<Route path='/user' component={UserPage} />\n\n\t\t\t<Route path='/profile' component={ProfilePage} />\n\t\t\t<Route path='/applied/:id' component={AppliedCandidate} />\n\t\t</Switch>\n\t)\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t{currentUser ? (\n\t\t\t\t<HashRouter>\n\t\t\t\t\t{isAuth ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t\t<ComponentContainer>{routes}</ComponentContainer>\n\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Route path='/' exact component={Signin} />\n\t\t\t\t\t)}\n\t\t\t\t</HashRouter>\n\t\t\t) : (\n\t\t\t\t<Loader />\n\t\t\t)}\n\t\t</AppContainer>\n\t)\n}\n\nexport default App\n\nconst AppContainer = styled.div`\n\ttext-align: center;\n\theight: 100%;\n`\nconst Layout = styled.div`\n\tdisplay: flex;\n\theight: 90%;\n\twidth: 100%;\n`\n\nconst ComponentContainer = styled.div`\n\tflex: 1;\n\tbackground-color: #0000000d;\n\t/* height: 100%; */\n\toverflow-y: auto;\n\tscroll-behavior: smooth;\n\t/* padding: 10px; */\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { RecoilRoot } from 'recoil'\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RecoilRoot>\n\t\t\t<App />\n\t\t</RecoilRoot>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}