{"version":3,"sources":["assets/icons/add.svg","assets/icons/candidate.svg","assets/icons/company.svg","assets/icons/dashboard.svg","assets/icons/job.svg","assets/icons/role.svg","assets/icons/user.svg","assets/icons/dual-ball-loader.svg","assets/icons/search.svg","assets/icons/auth.svg","assets/icons/arrow.svg","components/Loader.js","styles/index.js","components/Table/index.js","components/TableSkeletonLoader.js","utils/helperFunctions.js","recoil/atoms.js","components/Sidebar.js","components/PieChart.js","api/index.js","components/Toast.js","components/ChartSkeleton.js","pages/Dashboard/index.js","components/Search.js","components/Controls.js","styles/StyledMaterialUI.js","components/Modals/DeleteModal.js","recoil/selectors.js","pages/Job/components/NewTable.js","pages/Job/JobPage.js","components/SearchBar.js","pages/Candidate/components/NewCandidateTable.js","pages/Candidate/index.js","pages/Role/index.js","pages/User/index.js","pages/Job/components/JobInput.js","pages/Job/AddJob.js","components/PageTab.js","utils/sharedVariables.js","pages/Job/components/JobInfo.js","pages/Job/JobDetails.js","pages/Candidate/components/BulkUpload.js","pages/Candidate/components/CandidateInput.js","pages/Candidate/AddCandidate.js","pages/Candidate/components/CandidateInfo.js","pages/Candidate/CandidateDetails.js","pages/Job/ApplyJobList.js","pages/Profile/index.js","pages/Company/index.js","pages/Company/components/CompanyInput.js","pages/Company/AddCompany.js","pages/Signin/components/SigninForm.js","pages/Signin/index.js","components/Navbar.js","pages/Role/components/RoleInput.js","pages/Role/AddRole.js","pages/User/components/UserInput.js","pages/User/AddUser.js","pages/Job/EditJob.js","pages/Candidate/AppliedCandidate.js","pages/Candidate/EditCandidate.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Loader","LoaderContainer","LoaderIconContainer","src","LoaderIcon","styled","div","img","RemoveSpaces","css","themeBorder","MultipleItemInputContainer","form","Card","CardTitle","h5","StyledNavlink","NavLink","TableRow","tr","TableData","td","TableHead","th","ItemListContainer","h3","label","TextField","ul","ItemList","li","ContentContainer","p","ControlButton","Button","StyledCheckbox","input","ModalBody","ModalTitle","h4","ModalWarning","ModalText","ModalButtonContainer","PipelineContainer","PipelineCard","PipelineTitle","PipelineStat","Category","CategoryGrid","DataContainer","CategoryMainTitle","h1","Title","Content","Table","headings","children","TableContainer","TableHeadContainer","TableHeadingRow","TableBody","table","tbody","thead","TableSkeletonLoader","renderTableHeading","renderTableBody","limit","i","push","key","uuid","loopHead","loopBody","codeGenerator","field1","field2","field3","abbreviator","str","strArr","split","length","substring","toUpperCase","code","charCode","codeDigit","charCodeAt","compressedFields","join","charCodeLeft","charCodeRight","addValToArr","e","val","data","setData","preventDefault","includes","tempData","renderArr","map","item","onClick","dataTemp","filter","removeValFromArr","trueKeysToArr","obj","Object","keys","id","titleGenerator","arr","title","count","renderWithLoader","component","encryptObj","objStr","JSON","stringify","cryptojs","AES","encrypt","process","toString","formatDate","date","dateArr","Date","toDateString","shift","counter","countObj","pickerDateFormat","dateStr","toISOString","jobAtom","atom","default","candidateAtom","companyAtom","roleAtom","userAtom","statsAtom","jobCheckedAtom","candidateCheckedAtom","companyCheckedAtom","roleCheckedAtom","userCheckedAtom","jobTab","candidateTab","appliedCandidateTabAtom","isAuthAtom","email","password","currentUserAtom","statusAtom","Sidebar","permissions","useRecoilValue","roleId","activeLinkStyle","color","backgroundColor","fontWeight","boxShadow","SidebarContainer","MenuItem","uniqueID","activeStyle","to","NavIcon","DashboardIcon","get","JobIcon","CandidateIcon","CompanyIcon","RoleIcon","UserIcon","PieChart","labels","chartData","datasets","ChartContainer","API_URI","deleteJobs","createBulkCandidate","getCandidates","jobEndpoint","jobsEndpoint","candidateEndpoint","companyEndpoint","companiesEndpoint","roleEndpoint","rolesEndpoint","userEndpoint","usersEndpoint","loginEndpoint","logoutEndpoint","verifyEndpoint","statusEndpoint","statsEndpoint","toast","configure","position","POSITION","BOTTOM_RIGHT","autoClose","pauseOnFocusLoss","toastId","draggablePercent","ChartSkeleton","ChartCard","TitleContainer","width","circle","height","DashboardPage","useRecoilState","stats","setStats","useEffect","axios","withCredentials","then","catch","error","console","log","PieContainer","job","assigned","unassigned","ChartTitle","total","candidate","applied","unapplied","Search","onChange","SearchDiv","InputBase","placeholder","inputProps","Controls","onSearchChange","search","ControlContainer","ControlTitle","ControlSearch","ControlButtonContainer","SMUIButton","SMUITextField","SMUISelect","Select","SMUIFormControl","FormControl","SMUIIconButton","IconButton","SMUIModal","Modal","DeleteModal","open","onClose","deleteHandler","variant","filterTrueJobChecked","selector","checkedJob","filterTrueCandidateChecked","checkedCandidate","selectedCompanies","companyChecked","selectedRoles","roleChecked","selectedUsers","userChecked","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableCell","padding","Checkbox","indeterminate","checked","headCell","align","sortDirection","TableSortLabel","active","direction","property","event","className","visuallyHidden","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","secondary","main","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","jobData","setFilterData","rows","currentUser","history","useHistory","location","useLocation","pathname","Toolbar","clsx","Typography","style","textAlign","margin","inputVal","target","value","filterData","jobOpeningInfo","jobTitle","toLowerCase","companyDetails","companyId","companyName","jobDetails","jobCode","jobAddress","city","Tooltip","aria-label","headers","filename","useStyles","paper","marginBottom","minWidth","border","clip","overflow","top","EnhancedTable","toApply","React","useState","setOrder","setOrderBy","selected","setSelected","page","setPage","rowsPerPage","setRowsPerPage","company","openings","resumes","postedOn","noOfOpenings","statusIds","createdAt","emptyRows","Math","min","Paper","aria-labelledby","size","newSelecteds","n","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","onChangePage","newPage","onChangeRowsPerPage","parseInt","JobPage","setJobData","setChecked","ids","isModalOpen","setIsModalOpen","toggleModal","jobHeading","patch","success","heading","_id","newData","onCheckHandler","candidateName","resumeTitle","contactNumber","workExp","annualSalary","currentLocation","preferredLocation","currentEmployer","designation","UGCourse","PGCourse","PostPGCourse","DOB","postalAddress","resumeID","LastActive","commentOne","commentTwo","commentThree","commentFour","commentFive","href","CandidatePage","candidateData","setCandidateData","RolePage","roles","setRoles","renderHeading","renderRoleData","name","vendor","users","checkHandler","AddCircle","UserPage","setUsers","renderUserHeading","showUsers","user","renderUserData","firstName","lastName","userName","contact","JobInput","edit","match","jobId","companies","setCompanies","jobs","find","setJob","setJobTitle","jobType","setJobType","industry","setIndustry","noOfOpening","setNoOfOpening","salaryFrom","setSalaryFrom","salaryTo","setSalaryTo","setCompanyId","isCompanyDetailsVisible","setIsCompanyDetailsVisible","jobLocation","setJobLocation","setCity","zone","setZone","state","setState","pincode","setPincode","country","setCountry","jobDescription","setJobDescription","eligibility","setEligibility","eligibilityVal","setEligibilityVal","responsibilities","setResponsibilities","responsibilitiesVal","setResponsibilitiesVal","benefits","setBenefits","benefitsVal","setBenefitsVal","additionalInformation","setAdditionalInformation","targetDate","setTargetDate","saveHandler","isEdit","newJobData","salary","from","assignedOn","Number","source","goBack","post","renderCompaniesOption","JobInputContainer","InputLabel","industries","CheckBoxContainer","CheckBoxLabel","states","onSubmit","multiline","rowsMax","defaultValue","AddJob","PageTab","setValue","renderLabels","Tab","TabBG","Tabs","_event","newValue","indicatorColor","textColor","stages","JobInfo","companyAddress","renderList","JobDetails","params","jobTabIndex","jobFullData","selectedJob","stageDataCount","statusId","currentStage","stageName","renderPipeline","stage","candidateId","delete","renderCandidateHeading","renderCandidateData","candidateCode","basic","fullName","primaryEmail","mobile","address","professional","functionalArea","renderTabBody","BulkUpload","selectedFile","setSelectedFile","files","formData","FormData","append","method","url","alert","err","lastModifiedDate","CandidateInput","candidates","setCandidate","_fullName","_primaryEmail","_secondaryEmail","secondaryEmail","_mobile","_pan","pan","_dateOfBirth","dateOfBirth","_country","_pincode","_state","_streetName","streetName","_currentSalary","currentSalary","_education","education","_expected","expected","_experience","experience","_functionalArea","_industry","_skillSet","skillSet","setFullName","setPrimaryEmail","setSecondaryEmail","setMobile","setPan","setDateOfBirth","setStreetName","setExperience","setEducation","setSkillSet","skillSetVal","setSkillSetVal","setCurrentSalary","setExpected","setFunctionalArea","setCompany","summary","setSummary","fromDate","setFromDate","tillDate","setTillDate","qualificationName","setQualificationName","instituteName","setInstituteName","studiedFromDate","setStudiedFromDate","studiedTillDate","setStudiedTillDate","status","tempExp","tempEdu","AddCandidate","CandidateInfo","renderExperience","renderSkill","skill","renderEducation","CandidateDetails","singleCandidate","renderData","ApplyJobList","ApplyJobListContainer","ProfilePage","CompanyPage","selectedCompany","renderCompanyHeading","deleteManyHandler","renderCompanyData","jobIds","CompanyInput","setCompanyName","setCompanyAddress","AddCompanyHandler","companyData","CompanyTextField","AddCompany","SigninForm","setUser","setPassword","setIsAuth","setCurrentUser","isLoading","setIsLoading","submitHandler","resData","userData","SigninFormContainer","SiginFormTitle","SiginFormDesc","SigninInput","required","SignInButton","CircularProgress","Signin","SigninContainer","AuthImage","AuthIcon","Navbar","anchorEl","setAnchorEl","handleClose","logoutHandler","NavbarContainer","Logo","LogoHighlight","startIcon","currentTarget","Menu","keepMounted","Boolean","span","RoleInput","setName","setVendor","create","update","read","setPermissions","roleData","permissionsTemp","selectAllHandler","PermissionTable","PermissionTableRow","PermissionTableHead","PermissionTableData","AddRole","UserInput","setRoleId","setFirstName","setLastName","setUserName","setEmail","setContact","isAutoGenerated","setIsAutoGenerated","saveUserHandler","disabled","AutoGeneratorPassContainer","passwordGenerator","generate","numbers","symbols","excludeSimilarCharacters","AutoGeneratorLabel","AddUser","EditJob","AppliedCandidate","setStatus","newStageGenerator","selectedStage","setSelectedStage","changeStageHangler","userId","renderTimelineData","currentStatus","renderStageOption","EditCandidate","App","isAuth","setAuth","routes","path","exact","AppContainer","Layout","ComponentContainer","isLocalhost","window","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","ReactDOM","render","StrictMode","document","getElementById","URL","origin","addEventListener","fetch","response","contentType","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.352e888b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/add.15cf12ce.svg\";","module.exports = __webpack_public_path__ + \"static/media/candidate.5138f324.svg\";","module.exports = __webpack_public_path__ + \"static/media/company.5c37dd19.svg\";","module.exports = __webpack_public_path__ + \"static/media/dashboard.3949fa5b.svg\";","module.exports = __webpack_public_path__ + \"static/media/job.df887e14.svg\";","module.exports = __webpack_public_path__ + \"static/media/role.9f9a7329.svg\";","module.exports = __webpack_public_path__ + \"static/media/user.a0b238c9.svg\";","module.exports = __webpack_public_path__ + \"static/media/dual-ball-loader.d6d67d34.svg\";","module.exports = __webpack_public_path__ + \"static/media/search.19142cc5.svg\";","module.exports = __webpack_public_path__ + \"static/media/auth.910669c3.svg\";","module.exports = __webpack_public_path__ + \"static/media/arrow.dc486541.svg\";","import React from 'react'\nimport styled from 'styled-components'\nimport LoaderIcon from '../assets/icons/dual-ball-loader.svg'\n\nfunction Loader() {\n\treturn (\n\t\t<LoaderContainer>\n\t\t\t<LoaderIconContainer src={LoaderIcon} />\n\t\t</LoaderContainer>\n\t)\n}\n\nexport default Loader\n\nconst LoaderContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: center;\n\talign-items: center;\n\theight: 100vh;\n`\n\nconst LoaderIconContainer = styled.img`\n\twidth: 100px;\n`\n","import styled, { css } from 'styled-components'\nimport { NavLink } from 'react-router-dom'\nimport {\n\tButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n\tTextField,\n} from '@material-ui/core'\n\nexport const RemoveSpaces = css`\n\tmargin: 0px;\n\tpadding: 0px;\n`\n\nexport const themeBorder = css`\n\tborder: 1px solid #0000003b;\n\tborder-radius: 6px;\n`\n\nexport const MultipleItemInputContainer = styled.form`\n\tdisplay: flex;\n\talign-items: center;\n\twidth: 100%;\n`\n\nexport const Card = styled.div`\n\tpadding: 10px 20px;\n\t/* border-radius: 3px; */\n\t/* border: 1px solid #0000003b; */\n\tbackground-color: white;\n\tmargin-bottom: 10px;\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nexport const CardTitle = styled.h5`\n\ttext-align: left;\n\tcolor: #333;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nexport const StyledNavlink = styled(NavLink)`\n\twidth: 150px;\n\tpadding: 6px 10px;\n\tborder-radius: 0.25rem;\n\tdisplay: flex;\n\talign-items: center;\n\tcolor: black;\n\ttext-decoration: none;\n\tfont-weight: 400;\n\t&:focus {\n\t\tcolor: black;\n\t}\n\t&:hover {\n\t\tcolor: black;\n\t}\n`\n\nexport const TableRow = styled.tr`\n\t/* cursor: pointer; */\n\ttransition: all 0.5s;\n\t&:hover {\n\t\tbackground-color: #eef0f7;\n\t}\n`\n\nexport const TableData = styled.td`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n`\n\nexport const TableHead = styled.th`\n\tborder: 0;\n\tfont-size: 0.9em;\n\n\ttext-align: left;\n\tpadding: 4px;\n\n\tborder-bottom: 1px solid #00000021;\n\tcolor: #000000c2;\n`\nexport const PageLayout = styled.div`\n\t/* width: 100%; */\n\tpadding: 10px;\n`\n\nexport const InputContainer = styled.div`\n\tdisplay: flex;\n\tflex-direction: column;\n\twidth: 100%;\n\talign-items: flex-start;\n`\n\nexport const CategoryContainer = styled.div``\n\nexport const CategoryTitle = styled.h3`\n\t${RemoveSpaces};\n`\n\nexport const Label = styled.label``\n\nexport const StyledTextField = styled(TextField)`\n\twidth: 100%;\n\tmargin: 10px;\n`\n\nexport const ItemListContainer = styled.ul`\n\tlist-style: none;\n\tpadding: 0;\n\tmargin: 0;\n\tdisplay: flex;\n\tpadding: 10px;\n\tborder: 1px dashed #0000003b;\n\tbackground-color: #0000000d;\n\tborder-radius: 6px;\n\tmargin: 20px 0px;\n\tflex-flow: wrap;\n`\n\nexport const ItemList = styled.li`\n\tmargin: 5px;\n\tpadding: 5px 10px;\n\tborder-radius: 6px;\n\tbackground-color: white;\n\tborder: 1px solid #0000003b;\n`\nexport const DataTitle = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n`\n\nexport const DataContent = styled.p`\n\t${RemoveSpaces};\n\ttext-align: left;\n`\n\nexport const ContentContainer = styled.div`\n\tpadding: 10px;\n`\n\nexport const IconButton = styled.img`\n\twidth: 28px;\n\tcursor: pointer;\n`\n\nexport const ControlButton = styled(Button)`\n\t&& {\n\t\tmargin: 5px;\n\t\tpadding: 2px 10px;\n\t}\n`\n\nexport const StyledCheckbox = styled.input`\n\twidth: 18px;\n\theight: 18px;\n`\n\n// Modal\n\nexport const ModalBody = styled.div`\n\tbackground-color: white;\n\tmargin-top: 50px;\n\tpadding: 20px;\n\tborder-radius: 5px;\n`\nexport const ModalTitle = styled.h4`\n\t${RemoveSpaces};\n\tpadding-bottom: 10px;\n`\n\nexport const ModalWarning = styled.p`\n\t${RemoveSpaces}\n\tpadding: 10px;\n\tfont-weight: bold;\n\tborder: 2px solid red;\n\tborder-radius: 5px;\n\tborder-left: 10px solid red;\n`\n\nexport const ModalText = styled.p`\n\t${RemoveSpaces};\n\tpadding-top: 10px;\n`\n\nexport const ModalButtonContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-end;\n\tmargin-top: 20px;\n`\n\n//Pipeline\nexport const PipelineContainer = styled(Card)`\n\tdisplay: grid;\n\tgrid-template-columns: repeat(3, 1fr);\n\trow-gap: 1em;\n\tpadding: 50px;\n`\nexport const PipelineCard = styled.div`\n\tdisplay: flex;\n\tpadding: 20px;\n\talign-items: center;\n\tjustify-content: center;\n\tbackground-color: #4caf5029;\n\tmargin: 0px;\n\theight: 50px;\n\ttransition: all 0.3s;\n\tclip-path: polygon(90% 0, 100% 50%, 90% 100%, 0% 100%, 10% 50%, 0% 0%);\n\n\t&:hover {\n\t\tbackground-color: #ffc10726;\n\t\ttransform: translateX(10px);\n\t}\n`\nexport const PipelineTitle = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-weight: lighter;\n\tfont-size: 1.25em;\n`\n\nexport const PipelineStat = styled.p`\n\t${RemoveSpaces};\n\tpadding-right: 10px;\n\n\tfont-size: 2em;\n\tfont-weight: bold;\n\tcolor: #333;\n`\n\n//\nexport const Category = styled.div`\n\tpadding: 20px;\n`\n\nexport const CategoryGrid = styled.div`\n\tdisplay: grid;\n\tgap: 1em;\n\tgrid-template-columns: repeat(2, 1fr);\n\tpadding-bottom: 20px;\n`\n\nexport const DataContainer = styled.div`\n\ttext-align: left;\n`\nexport const CategoryMainTitle = styled.h1`\n\t${RemoveSpaces};\n\ttext-align: left;\n\tcolor: #333;\n\tfont-size: 1.5em;\n\tpadding-bottom: 15px;\n`\n\nexport const Title = styled.h3`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1em;\n`\n\nexport const Content = styled.p`\n\t${RemoveSpaces};\n\tcolor: #333;\n\tfont-size: 1.2em;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport { themeBorder } from '../../styles'\n\nfunction Table({ headings, children }) {\n\treturn (\n\t\t<TableContainer>\n\t\t\t<TableHeadContainer>\n\t\t\t\t<TableHeadingRow>{headings}</TableHeadingRow>\n\t\t\t</TableHeadContainer>\n\t\t\t<TableBody>{children}</TableBody>\n\t\t</TableContainer>\n\t)\n}\n\nexport default Table\n\nconst TableHeadingRow = styled.tr`\n\tbackground-color: #eef0f7;\n\tcolor: #eee;\n`\n\nconst TableContainer = styled.table`\n\tpadding: 5px;\n\tborder: 0;\n\twidth: 100%;\n\tbackground-color: white;\n\t/* box-shadow: 2px 3px 20px 0px #00000017; */\n\t/* border-collapse: collapse; */\n\toverflow: scroll;\n\t/* ${themeBorder}; */\n\tbox-shadow: 3px 3px 5px 0px #00000017;\n`\n\nconst TableBody = styled.tbody``\n\nconst TableHeadContainer = styled.thead``\n","import React from 'react'\nimport Table from './Table'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport { TableData, TableHead, TableRow } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction TableSkeletonLoader() {\n\tlet renderTableHeading = []\n\tlet renderTableBody = []\n\n\tconst loopHead = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableHeading.push(\n\t\t\t\t<TableHead key={uuid()}>\n\t\t\t\t\t<Skeleton />\n\t\t\t\t</TableHead>\n\t\t\t)\n\t\t}\n\t}\n\n\tconst loopBody = (limit) => {\n\t\tfor (let i = 0; i < limit; i++) {\n\t\t\trenderTableBody.push(\n\t\t\t\t<TableRow key={i}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<Skeleton />\n\t\t\t\t\t</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t}\n\n\tloopHead(6)\n\tloopBody(6)\n\n\treturn <Table headings={renderTableHeading}>{renderTableBody}</Table>\n}\n\nexport default TableSkeletonLoader\n","import React from 'react'\nimport Loader from '../components/Loader'\nimport { Card, ItemList, TableData, TableHead, TableRow } from '../styles'\nimport cryptojs from 'crypto-js'\nimport { v4 as uuid } from 'uuid'\nimport Skeleton, { SkeletonTheme } from 'react-loading-skeleton'\nimport TableSkeletonLoader from '../components/TableSkeletonLoader'\n\nexport const codeGenerator = (field1, field2, field3) => {\n\t//Helper Function\n\tconst abbreviator = (str, limit) => {\n\t\tconst strArr = str.split(' ')\n\t\tif (strArr.length === 1) {\n\t\t\treturn str.substring(0, limit).toUpperCase()\n\t\t} else {\n\t\t\tlet code = ''\n\t\t\tfor (let letter of strArr) {\n\t\t\t\tcode += letter[0]\n\t\t\t}\n\t\t\treturn code.substring(0, limit).toUpperCase()\n\t\t}\n\t}\n\n\tconst charCode = (str) => {\n\t\tlet codeDigit = 0\n\t\tfor (let i = 0; i < str.length; i++) {\n\t\t\tcodeDigit += str.charCodeAt(i) - 64\n\t\t}\n\t\treturn codeDigit\n\t}\n\n\t// Converting full string to short form\n\tconst compressedFields = [\n\t\tabbreviator(field1, 2),\n\t\tabbreviator(field2, 2),\n\t\tabbreviator(field3, 2),\n\t].join('')\n\n\t// Char code of field\n\tconst charCodeLeft = charCode(field1)\n\tconst charCodeRight = charCode(field2)\n\n\treturn `${compressedFields}${charCodeLeft}${charCodeRight}`\n}\n\nexport const addValToArr = (e, val, data, setData) => {\n\te.preventDefault()\n\tif (!data.includes(val)) {\n\t\tconst tempData = [...data]\n\t\ttempData.push(val)\n\t\tsetData(tempData)\n\t}\n}\n\nconst removeValFromArr = (item, data, setData) => {\n\tlet dataTemp = [...data]\n\tdataTemp = dataTemp.filter((val) => val !== item)\n\tsetData(dataTemp)\n}\n\nexport const renderArr = (data, setData) =>\n\tdata.map((item) => (\n\t\t<ItemList\n\t\t\tonClick={() => removeValFromArr(item, data, setData)}\n\t\t\tkey={uuid()}>\n\t\t\t{item} X\n\t\t</ItemList>\n\t))\n\nexport const trueKeysToArr = (obj) => {\n\tconst ids = Object.keys(obj)\n\treturn ids.filter((id) => obj[id] === true)\n}\n\nexport const titleGenerator = (arr, title) => {\n\tconst count = arr.length\n\tif (count > 0) {\n\t\treturn `${count} Selected`\n\t} else {\n\t\treturn title\n\t}\n}\n\nexport const renderWithLoader = (val, component) =>\n\tval ? (\n\t\tcomponent\n\t) : (\n\t\t<TableSkeletonLoader/>\n\t)\n\nexport const encryptObj = (obj) => {\n\tconst objStr = JSON.stringify(obj)\n\treturn cryptojs.AES.encrypt(\n\t\tobjStr,\n\t\tprocess.env.REACT_APP_ENCRYPTION_SECRET_KEY\n\t).toString()\n}\n\nexport const formatDate = (date) => {\n\tconst dateArr = new Date(date).toDateString().split(' ')\n\tdateArr.shift()\n\treturn dateArr.join(' ')\n}\n\nexport const counter = (arr) => {\n\tconst countObj = {}\n\tfor (const item of arr) {\n\t\tif (countObj[item]) {\n\t\t\tcountObj[item] += 1\n\t\t} else {\n\t\t\tcountObj[item] = 1\n\t\t}\n\t}\n\n\treturn countObj\n}\n\nexport const pickerDateFormat = (dateStr) => {\n\tif (dateStr) return new Date(dateStr).toISOString().split('T')[0]\n\treturn new Date().toISOString().split('T')[0]\n}\n","import { atom, selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\n\nexport const jobAtom = atom({\n\tkey: 'jobs',\n\tdefault: null,\n})\n\nexport const candidateAtom = atom({\n\tkey: 'candidates',\n\tdefault: null,\n})\n\nexport const companyAtom = atom({\n\tkey: 'companies',\n\tdefault: null,\n})\n\nexport const roleAtom = atom({\n\tkey: 'roles',\n\tdefault: null,\n})\n\nexport const userAtom = atom({\n\tkey: 'users',\n\tdefault: null,\n})\n\nexport const statsAtom = atom({\n\tkey: 'stats',\n\tdefault: null\n})\n\n//--------------\n\nexport const jobCheckedAtom = atom({\n\tkey: 'jobChecked',\n\tdefault: {},\n})\n\nexport const candidateCheckedAtom = atom({\n\tkey: 'candidateChecked',\n\tdefault: {},\n})\n\nexport const companyCheckedAtom = atom({\n\tkey: 'companyChecked',\n\tdefault: {},\n})\n\nexport const roleCheckedAtom = atom({\n\tkey: 'roleChecked',\n\tdefault: {},\n})\n\nexport const userCheckedAtom = atom({\n\tkey: 'userChecked',\n\tdefault: {},\n})\n\n//------------\n\nexport const jobTab = atom({\n\tkey: 'jobTab',\n\tdefault: 0,\n})\n\nexport const candidateTab = atom({\n\tkey: 'candidateTab',\n\tdefault: 2,\n})\n\nexport const appliedCandidateTabAtom = atom({\n\tkey: 'appliedCandidateTabAtom',\n\tdefault: 0,\n})\n\n// -------------\nexport const credentialAtom = atom({\n\tkey: 'cred',\n\tdefault: { email: '', password: '' },\n})\n\nexport const isAuthAtom = atom({\n\tkey: 'isAuth',\n\tdefault: true,\n})\n\nexport const currentUserAtom = atom({\n\tkey: 'currentUser',\n\tdefault: null,\n})\n\nexport const statusAtom = atom({\n\tkey: 'status',\n\tdefault: null,\n})\n","import { get } from 'lodash'\nimport React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { v4 as uniqueID } from 'uuid'\nimport CandidateIcon from '../assets/icons/candidate.svg'\nimport CompanyIcon from '../assets/icons/company.svg'\nimport DashboardIcon from '../assets/icons/dashboard.svg'\nimport JobIcon from '../assets/icons/job.svg'\nimport RoleIcon from '../assets/icons/role.svg'\nimport UserIcon from '../assets/icons/user.svg'\nimport { currentUserAtom } from '../recoil/atoms'\nimport { StyledNavlink } from '../styles'\n\n\n\nfunction Sidebar() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { roleId } = currentUser || {}\n\tconst { permissions } = roleId || {}\n\n\t// const { job, candidate, role, user } = permissions || {}\n\n\n\tconst activeLinkStyle = {\n\t\tcolor: '#0168fa',\n\t\tbackgroundColor: '#EEF0F7',\n\t\tfontWeight: '500',\n\t\tboxShadow: 'inset 1px 1px 3px 0px #016afa2e',\n\t}\n\n\n\treturn (\n\t\t<SidebarContainer>\n\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/dashboard'>\n\t\t\t\t\t<NavIcon src={DashboardIcon} />\n\t\t\t\t\tDashboard\n\t\t\t\t</StyledNavlink>\n\t\t\t</MenuItem>\n\n\t\t\t{get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/job'>\n\t\t\t\t\t\t<NavIcon src={JobIcon} />\n\t\t\t\t\t\tJob\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'candidate.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/candidate'>\n\t\t\t\t\t\t<NavIcon src={CandidateIcon} />\n\t\t\t\t\t\tCandidate\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'job.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/company'>\n\t\t\t\t\t\t<NavIcon src={CompanyIcon} />\n\t\t\t\t\t\tCompany\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'role.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/role'>\n\t\t\t\t\t\t<NavIcon src={RoleIcon} />\n\t\t\t\t\t\tRole\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\n\t\t\t{get(permissions, 'user.read') && (\n\t\t\t\t<MenuItem key={uniqueID()}>\n\t\t\t\t\t<StyledNavlink activeStyle={activeLinkStyle} to='/user'>\n\t\t\t\t\t\t<NavIcon src={UserIcon} />\n\t\t\t\t\t\tUser\n\t\t\t\t\t</StyledNavlink>\n\t\t\t\t</MenuItem>\n\t\t\t)}\n\t\t</SidebarContainer>\n\t)\n}\n\nexport default Sidebar\n\nconst SidebarContainer = styled.ul`\n\tbackground-color: white;\n\tlist-style: none;\n\tmargin: 0px;\n\tpadding: 0px;\n\tborder: 1px solid #0000003b;\n\tborder-top: 0px;\n\tpadding: 10px;\n\ttext-align: left;\n\t/* overflow-y: scroll; */\n`\n\nconst MenuItem = styled.li``\n\nconst NavIcon = styled.img`\n\tmargin-right: 10px;\n`\n","import React from 'react'\nimport { Pie } from 'react-chartjs-2'\n\nimport styled from 'styled-components'\n\nfunction PieChart({ labels, data }) {\n\tconst chartData = {\n\t\tdatasets: [\n\t\t\t{\n\t\t\t\tdata,\n\t\t\t\tbackgroundColor: ['#007bff', '#FFA500'],\n\t\t\t},\n\t\t],\n\t\tlabels,\n\t}\n\n\treturn (\n\t\t<ChartContainer>\n\t\t\t<Pie data={chartData} />\n\t\t</ChartContainer>\n\t)\n}\n\nexport default PieChart\n\nconst ChartContainer = styled.div`\n\t/* width: 400px; */\n`\n","const STAGE = process.env.NODE_ENV === 'production' ? true : false\n\nexport const API_URI = STAGE\n\t? 'https://careerebest-business-dashboard.herokuapp.com'\n\t: 'http://localhost:4000'\n\nexport const createJob = `${API_URI}/job`\nexport const getJobs = `${API_URI}/jobs`\n\nexport const getJob = `${API_URI}/job`\nexport const deleteJob = `${API_URI}/job`\nexport const deleteJobs = `${API_URI}/jobs`\n\nexport const createCandidate = `${API_URI}/candidate`\nexport const createBulkCandidate = `${API_URI}/candidateupload`\nexport const getCandidates = `${API_URI}/candidates`\n\nexport const applyJob = `${API_URI}/apply`\n\nexport const jobEndpoint = `${API_URI}/job`\nexport const jobsEndpoint = `${API_URI}/jobs`\n\nexport const candidateEndpoint = `${API_URI}/candidate`\nexport const candidatesEndpoint = `${API_URI}/candidates`\n\nexport const companyEndpoint = `${API_URI}/company`\nexport const companiesEndpoint = `${API_URI}/companies`\n\nexport const roleEndpoint = `${API_URI}/role`\nexport const rolesEndpoint = `${API_URI}/roles`\n\nexport const userEndpoint = `${API_URI}/user`\nexport const usersEndpoint = `${API_URI}/users`\n\nexport const loginEndpoint = `${API_URI}/login`\nexport const logoutEndpoint = `${API_URI}/logout`\nexport const verifyEndpoint = `${API_URI}/verify`\n\nexport const statusEndpoint = `${API_URI}/status`\n\nexport const statsEndpoint = `${API_URI}/stats`\n\n// export const getPublicJobs = `${API_URI}/public-jobs`\n","import { toast } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css'\nimport { v4 as uuid } from 'uuid'\nimport { Slide, Zoom, Flip, Bounce } from 'react-toastify'\n\ntoast.configure({\n\tposition: toast.POSITION.BOTTOM_RIGHT,\n\tautoClose: 3000,\n\tpauseOnFocusLoss: false,\n\ttoastId: uuid(),\n\t// transition: Slide,\n\tdraggablePercent: 60,\n})\n\nexport { toast }\n","import React from 'react'\nimport Skeleton from 'react-loading-skeleton'\nimport styled from 'styled-components'\nimport { Card } from '../styles'\n\nfunction ChartSkeleton() {\n\treturn (\n\t\t<ChartCard>\n\t\t\t<TitleContainer>\n\t\t\t\t<Skeleton width={100} />\n\t\t\t\t<Skeleton width={100} />\n\t\t\t</TitleContainer>\n\t\t\t<Skeleton circle={true} height={200} width={200} />\n\t\t\t<Skeleton width={300} />\n\t\t</ChartCard>\n\t)\n}\n\nexport default ChartSkeleton\n\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n\nconst TitleContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-evenly;\n`\n","import React, { useEffect } from 'react'\nimport PieChart from '../../components/PieChart'\nimport { Card, ContentContainer, PageLayout, Title } from '../../styles'\nimport styled from 'styled-components'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { statsAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { statsEndpoint } from '../../api'\nimport { toast } from '../../components/Toast'\nimport Skeleton from 'react-loading-skeleton'\nimport ChartSkeleton from '../../components/ChartSkeleton'\n\nfunction DashboardPage() {\n\tconst [stats, setStats] = useRecoilState(statsAtom)\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(statsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setStats(data))\n\t\t\t.catch((e) => toast.error('Something went wrong'))\n\t}, [])\n\n\tconsole.log({ stats })\n\n\treturn (\n\t\t<>\n\t\t\t<ContentContainer>\n\t\t\t\t<PieContainer>\n\t\t\t\t\t{stats ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Assigned Jobs', 'Unassigned Jobs']}\n\t\t\t\t\t\t\t\t\tdata={[stats.stats.job.assigned, stats.stats.job.unassigned]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>{stats.stats.job.total} Jobs</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t\t<ChartCard>\n\t\t\t\t\t\t\t\t<PieChart\n\t\t\t\t\t\t\t\t\tlabels={['Applied Candidates', 'Candidates Not Applied']}\n\t\t\t\t\t\t\t\t\tdata={[\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.applied,\n\t\t\t\t\t\t\t\t\t\tstats.stats.candidate.unapplied,\n\t\t\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<ChartTitle>\n\t\t\t\t\t\t\t\t\t{stats.stats.candidate.total} Candidates\n\t\t\t\t\t\t\t\t</ChartTitle>\n\t\t\t\t\t\t\t</ChartCard>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t\t<ChartSkeleton />\n\t\t\t\t\t\t</>\n\t\t\t\t\t)}\n\t\t\t\t</PieContainer>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default DashboardPage\n\nconst PieContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: space-between;\n`\n\nconst ChartTitle = styled.h3`\n\tcolor: #333;\n`\nconst ChartCard = styled(Card)`\n\tflex: 1;\n\tmargin: 10px;\n\tpadding: 20px;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport {InputBase} from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\n\nfunction Search({onChange}) {\n        return (\n                <SearchDiv>\n                        <>\n                                <SearchIcon />\n                        </>\n                        <InputBase \n                                placeholder=\"Search…\"\n                                inputProps={{ 'aria-label': 'search' }} \n                                onChange={onChange}\n                        />\n                </SearchDiv>\n        )\n}\n\nexport default Search\n\nconst SearchDiv = styled.div`\n        padding: 4px 10px;\n        display: flex;\n        align-items: center;\n        color: #ABABAB;\n        background-color: #EEF0F7;\n        border-radius: 4px;\n`;\n","import React from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces } from '../styles'\nimport Search from '../components/Search'\n\nfunction Controls({ title, children, onSearchChange, search }) {\n\treturn (\n\t\t<ControlContainer>\n\t\t\t<ControlTitle>{title}</ControlTitle>\n\t\t\t{\n\t\t\t\tsearch ? <ControlSearch><Search onChange={onSearchChange} /></ControlSearch> : null\n\t\t\t}\n\t\t\t<ControlButtonContainer>{children}</ControlButtonContainer>\n\t\t</ControlContainer>\n\t)\n}\n\nexport default Controls\n\nconst ControlContainer = styled.div`\n\tposition: sticky;\n\ttop: 0px;\n\tz-index: 10;\n\tpadding: 10px 20px;\n\tbackground-color: white;\n\tdisplay: flex;\n\tborder: 1px solid #0000003b;\n\tborder-top: none;\n\tborder-left: none;\n\t/* border-radius: 6px; */\n\talign-items: center;\n\tjustify-content: space-between;\n`\n\nconst ControlTitle = styled.h4`\n\t${RemoveSpaces}\n\tcolor: #333;\n`\n\nconst ControlSearch = styled.div`\n\tmargin: 0 auto;\t\n`\n\nconst ControlButtonContainer = styled.div`\n\tdisplay: flex;\n`\n","import styled from 'styled-components'\nimport {\n\tButton,\n\tFormControl,\n\tIconButton,\n\tModal,\n\tSelect,\n\tTextField,\n} from '@material-ui/core'\n\nexport const SMUIButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px;\n\t\tpadding: 5px 20px;\n\t}\n`\nexport const SMUITextField = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t\twidth: 100%;\n\t}\n`\nexport const SMUISelect = styled(Select)`\n\t&& {\n\t\twidth: 100%;\n\t\t/* margin: 10px 0px; */\n\t\t/* padding: 5px 0px; */\n\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIFormControl = styled(FormControl)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\ttext-align: left;\n\t}\n`\nexport const SMUIIconButton = styled(IconButton)`\n\t&&{\n\t\tpadding: 0px;\n\t}\n`\n\nexport const SMUIModal = styled(Modal)`\n\t&& {\n\t\tposition: fixed;\n\t\ttop: auto;\n\t\tbottom: auto;\n\t\tleft: auto;\n\t\tmargin: 0 auto;\n\t\tright: auto;\n\t\twidth: 500px;\n\t\toutline: none;\n\t\tborder-style: none;\n\t}\n\t&&:focus {\n\t\toutline: none;\n\t}\n`\n","import React from 'react'\nimport {\n\tModalBody,\n\tModalButtonContainer,\n\n\tModalText, ModalTitle,\n\n\tModalWarning\n} from '../../styles'\nimport { SMUIButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nfunction DeleteModal({ open, onClose, count, deleteHandler }) {\n\treturn (\n\t\t<SMUIModal open={open} onClose={onClose}>\n\t\t\t<ModalBody>\n\t\t\t\t<ModalTitle>{count} Items Selected</ModalTitle>\n\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t<SMUIButton onClick={onClose}>Cancel</SMUIButton>\n\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\tonClick={deleteHandler}\n\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tDelete\n\t\t\t\t\t</SMUIButton>\n\t\t\t\t</ModalButtonContainer>\n\t\t\t</ModalBody>\n\t\t</SMUIModal>\n\t)\n}\n\nexport default DeleteModal\n","import { selector } from 'recoil'\nimport { trueKeysToArr } from '../utils/helperFunctions'\nimport {\n\tcandidateCheckedAtom,\n\tcompanyCheckedAtom,\n\tjobCheckedAtom,\n\troleCheckedAtom,\n\tuserCheckedAtom,\n} from './atoms'\n\nexport const filterTrueJobChecked = selector({\n\tkey: 'filterTrueJobChecked',\n\tget: ({ get }) => {\n\t\tconst checkedJob = get(jobCheckedAtom)\n\t\treturn trueKeysToArr(checkedJob)\n\t},\n})\n\nexport const filterTrueCandidateChecked = selector({\n\tkey: 'filterTrueCandidateChecked',\n\tget: ({ get }) => {\n\t\tconst checkedCandidate = get(candidateCheckedAtom)\n\t\treturn trueKeysToArr(checkedCandidate)\n\t},\n})\n\nexport const selectedCompanies = selector({\n\tkey: 'filterTrueCompanyChecked',\n\tget: ({ get }) => {\n\t\tconst companyChecked = get(companyCheckedAtom)\n\t\treturn trueKeysToArr(companyChecked)\n\t},\n})\n\nexport const selectedRoles = selector({\n\tkey: 'filterTrueRoleChecked',\n\tget: ({ get }) => {\n\t\tconst roleChecked = get(roleCheckedAtom)\n\t\treturn trueKeysToArr(roleChecked)\n\t},\n})\n\nexport const selectedUsers = selector({\n\tkey: 'filterTrueUsersChecked',\n\tget: ({ get }) => {\n\t\tconst userChecked = get(userCheckedAtom)\n\t\treturn trueKeysToArr(userChecked)\n\t},\n})\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { filter, get } from 'lodash'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../../recoil/atoms'\n\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip\n} from \"@material-ui/core\";\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../../utils/helperFunctions'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nimport Search from '../../../components/Search'\n\nfunction createData(code, title, company, city, openings, resumes, postedOn) {\n  return { code, title, company, city, openings, resumes, postedOn};\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'code', numeric: false, disablePadding: true, label: 'job code' },\n  { id: 'title', numeric: false, disablePadding: true, label: 'job title' },\n  { id: 'company', numeric: false, disablePadding: true, label: 'company' },\n  { id: 'city', numeric: false, disablePadding: true, label: 'city' },\n  { id: 'openings', numeric: false, disablePadding: true, label: 'openings' },\n  { id: 'resumes', numeric: false, disablePadding: true, label: 'resumes' },\n  { id: 'postedOn', numeric: false, disablePadding: true, label: 'posted on' },\n];\n\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n        //     padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label.toUpperCase()}</b>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold'\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, jobData, setFilterData, rows } = props;\n  const currentUser = useRecoilValue(currentUserAtom)\n  const history = useHistory()\n  const location = useLocation().pathname\n  \n  const onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n\t\t\treturn data.jobOpeningInfo.jobTitle.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.companyDetails.companyId.companyName.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobDetails.jobCode.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobAddress.city.toLowerCase().includes(inputVal) \n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\n  return (\n    <>\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Jobs\n        </Typography>\n      )}\n\n      {/* search */}\n      <div style={{margin: '0 auto'}}>\n        <Search onChange={(e) => {onSearchChange(e)} } />\n      </div>\n\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon onClick={() => console.log('delete button click')} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <>\n        {get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<Tooltip title=\"Add Job\">\n              <IconButton aria-label=\"add job\" onClick={() => history.push(`${location}/add`)}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n\t\t\t\t\t\t)}\n            <CSVLink data={rows} headers={headCells.label} filename={\"jobs.csv\"}>\n              <Tooltip title=\"Download\">\n                <IconButton aria-label=\"download\">\n                  <GetAppIcon />\n                </IconButton>\n              </Tooltip>\n            </CSVLink>\n          </>\n        \n      )}\n    </Toolbar>\n    </>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable({filterData,setFilterData, jobData, toApply}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('postedOn');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const location = useLocation().pathname\n  const rows = [];\n\n  filterData.map(job => {\n          rows.push(\n            createData(job.jobDetails.jobCode, job.jobOpeningInfo.jobTitle, job.companyDetails.companyId.companyName, job.jobAddress.city, job.jobOpeningInfo.noOfOpenings, job.statusIds.length, formatDate(job.createdAt))\n          );\n  })\n\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const isSelected = (code) => selected.indexOf(code) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} jobData={jobData} setFilterData={setFilterData} rows={rows} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy} \n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.code)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\">\n                      {toApply ? (\n                          row.code\n                        ) : (\n                          <NavLink to={`${location}/${row.code}`}>\n                            {row.code}\n                          </NavLink>\n                        )}\n\n                      </TableCell>\n                      <TableCell>{row.title}</TableCell>\n                      <TableCell>{row.company}</TableCell>\n                      <TableCell>{row.city}</TableCell>\n                      <TableCell>{row.openings}</TableCell>\n                      <TableCell>{row.resumes}</TableCell>\n                      <TableCell>{row.postedOn}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={8} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import { AddCircle, Delete, Search } from '@material-ui/icons'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { v4 as uuid } from 'uuid'\nimport { applyJob, deleteJobs, getJobs, jobsEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport Table from '../../components/Table'\n\nimport {\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n\tjobAtom,\n\tjobCheckedAtom,\n} from '../../recoil/atoms'\nimport {\n\tfilterTrueCandidateChecked,\n\tfilterTrueJobChecked,\n} from '../../recoil/selectors'\nimport {\n\tContentContainer,\n\tControlButton,\n\tStyledCheckbox,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { toast } from '../../components/Toast'\nimport { filter, get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\nimport EnhancedTable from './components/NewTable'\n\nfunction JobPage({ toApply }) {\n\t// React Hooks\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tvar [jobData, setJobData] = useRecoilState(jobAtom)\n\tconst [checked, setChecked] = useRecoilState(jobCheckedAtom)\n\tconst [, setCandidateChecked] = useRecoilState(candidateCheckedAtom)\n\tconst ids = useRecoilValue(filterTrueJobChecked)\n\tconst candidateSelectedIds = useRecoilValue(filterTrueCandidateChecked)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false);\n\tconst [filterData, setFilterData] = useState();\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(jobsEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJobData(data);\n\t\t\t\tsetFilterData(data);\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\n\tconst jobHeading = [\n\t\t<StyledCheckbox\n\t\t\ttype='checkbox'\n\t\t\tcolor='primary'\n\t\t\tonChange={() => console.log('checked')}\n\t\t/>,\n\t\t'Job Code',\n\t\t'Job Title',\n\t\t'Company',\n\t\t'City',\n\t\t'Openings',\n\t\t`Resumes`,\n\t\t`Posted On`,\n\t\t// `Assigned On`,\n\t]\n\t      \n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(deleteJobs, { ids }, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Job Deleted')\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst candidateApplyHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.post(\n\t\t\t\tapplyJob,\n\t\t\t\t{\n\t\t\t\t\tcandidates: candidateSelectedIds,\n\t\t\t\t\tjobs: ids,\n\t\t\t\t\tuserId: currentUser._id,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\tsetChecked({})\n\t\t\tsetCandidateChecked({})\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidates Assigned')\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// Renderers\n\tconst renderJobHeading = jobHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\n\n\tconst renderJobData =\n\t\tfilterData &&\n\t\tfilterData.map((job) => {\n\t\t\treturn (\n\t\t\t\t<TableRow\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\tbackgroundColor: checked[job._id] ? '#0c68fa1f' : 'white',\n\t\t\t\t\t}}\n\t\t\t\t\tkey={job._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\tchecked={checked[job._id]}\n\t\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\t\tonChange={() => onCheckHandler(job._id)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\tjob.jobDetails.jobCode\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<NavLink to={`${location}/${job.jobDetails.jobCode}`}>\n\t\t\t\t\t\t\t\t{job.jobDetails.jobCode}\n\t\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t\t<TableData>{job.companyDetails.companyId.companyName}</TableData>\n\t\t\t\t\t<TableData>{job.jobAddress.city}</TableData>\n\t\t\t\t\t<TableData>{job.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t\t<TableData>{job.statusIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(job.createdAt)}</TableData>\n\t\t\t\t\t{/* <TableData>\n\t\t\t\t\t\t{new Date(job.jobOpeningInfo.assignedOn).toDateString()}\n\t\t\t\t\t</TableData> */}\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\tconst addHandler = () => {\n\t\thistory.push(`${location}/add`)\n\t}\n\n\tconst onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n\t\t\treturn data.jobOpeningInfo.jobTitle.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.companyDetails.companyId.companyName.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobDetails.jobCode.toLowerCase().includes(inputVal) ||\n\t\t\t\tdata.jobAddress.city.toLowerCase().includes(inputVal) \n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\t// console.log(jobData)\n\n\treturn (\n\t\t<>\n\t\t\t{/* <Controls title={titleGenerator(ids, 'Jobs')} onSearchChange={(e) => onSearchChange(e)} search={true}>\n\t\t\t\t{ids.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{toApply ? (\n\t\t\t\t\t\t\t<ControlButton\n\t\t\t\t\t\t\t\tonClick={candidateApplyHandler}\n\t\t\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t\t\tApply\n\t\t\t\t\t\t\t</ControlButton>\n\t\t\t\t\t\t) : (\n\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={addHandler}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls> */}\n\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={ids.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tfilterData,\n\t\t\t\t\t// <Table headings={renderJobHeading}>{renderJobData}</Table>\n\t\t\t\t\t<EnhancedTable filterData = {filterData} setFilterData={setFilterData} jobData={jobData} toApply={toApply} />\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobPage\n","import { Button, MenuItem, Select } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport SearchIcon from '../assets/icons/search.svg'\nimport { themeBorder } from '../styles'\nimport { v4 as uuid } from 'uuid'\n\nfunction SearchBar({ options }) {\n\tconst [searchCriteria, setSearchCriteria] = useState(options[0].value)\n\tconst [searchVal, setSearchVal] = useState('')\n\tconst renderOption = () =>\n\t\toptions.map(({ value, name }) => {\n\t\t\treturn <MenuItem key={uuid()} value={value}>{name}</MenuItem>\n\t\t})\n\n\n\tconst searchInputHandler = (e) => setSearchVal(e.target.value)\n\tconst searchCriteriaHandler = (e) => setSearchCriteria(e.target.value)\n\n\treturn (\n\t\t<SearchBarForm>\n\t\t\t<StyledSelect value={searchCriteria} onChange={searchCriteriaHandler}>\n\t\t\t\t{renderOption()}\n\t\t\t</StyledSelect>\n\t\t\t<SearchInput\n\t\t\t\tvalue={searchVal}\n\t\t\t\tonChange={searchInputHandler}\n\t\t\t\tplaceholder='Search Here...'\n\t\t\t/>\n\n\t\t\t<Button>\n\t\t\t\t<img src={SearchIcon} alt='Search Icon' />\n\t\t\t</Button>\n\t\t</SearchBarForm>\n\t)\n}\n\nexport default SearchBar\n\nconst StyledSelect = styled(Select)`\n\tpadding: 0px 20px;\n`\n\nconst SearchBarForm = styled.form`\n\tdisplay: flex;\n\tmargin: 10px 0px;\n\tjustify-content: space-between;\n\t${themeBorder}\n\tbackground-color: white;\n`\nconst SearchInput = styled.input`\n\tflex: 1;\n\tpadding: 0px 10px;\n\tborder-style: none;\n\t&:focus {\n\t\toutline: none;\n\t}\n`\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { filter, get } from 'lodash'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\nimport { lighten, makeStyles } from '@material-ui/core/styles';\n\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../../recoil/atoms'\n\nimport { CSVLink, CSVDownload } from \"react-csv\";\n\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableContainer,\n  TableHead,\n  TablePagination,\n  TableRow,\n  TableSortLabel,\n  Toolbar,\n  Typography,\n  Paper,\n  Checkbox,\n  IconButton,\n  Tooltip\n} from \"@material-ui/core\";\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../../utils/helperFunctions'\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport AddIcon from '@material-ui/icons/Add';\nimport GetAppIcon from '@material-ui/icons/GetApp';\n\nimport Search from '../../../components/Search'\n\nfunction createData(code, candidateName, resumeTitle, contactNumber, email, workExp, annualSalary, currentLocation, preferredLocation, currentEmployer, designation, UGCourse, PGCourse, PostPGCourse, DOB, postalAddress, resumeID, LastActive, commentOne, commentTwo, commentThree, commentFour, commentFive) {\n  return { code, candidateName, resumeTitle, contactNumber, email, workExp, annualSalary, currentLocation, preferredLocation, currentEmployer, designation, UGCourse, PGCourse, PostPGCourse, DOB, postalAddress, resumeID, LastActive, commentOne, commentTwo, commentThree, commentFour, commentFive};\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === 'desc'\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  { id: 'candidateName', numeric: false, disablePadding: true, label: 'candidate name' },\n  { id: 'resumeTitle', numeric: false, disablePadding: true, label: 'resume title' },\n  { id: 'contactNumber', numeric: false, disablePadding: true, label: 'contact no' },\n  { id: 'email', numeric: false, disablePadding: true, label: 'email' },\n  { id: 'workExp', numeric: false, disablePadding: true, label: 'work exp' },\n  { id: 'annualSalary', numeric: false, disablePadding: true, label: 'annual salary' },\n  { id: 'currentLocation', numeric: false, disablePadding: true, label: 'current location' },\n  { id: 'preferredLocation', numeric: false, disablePadding: true, label: 'preferred location' },\n  { id: 'currentEmployer', numeric: false, disablePadding: true, label: 'current employer' },\n  { id: 'designation', numeric: false, disablePadding: true, label: 'designation' },\n  { id: 'UGCourse', numeric: false, disablePadding: true, label: 'u.g. course' },\n  { id: 'PGCourse', numeric: false, disablePadding: true, label: 'p.g. course' },\n  { id: 'postPGCourse', numeric: false, disablePadding: true, label: 'post p.g. course' },\n  { id: 'DOB', numeric: false, disablePadding: true, label: 'age/DOB' },\n  { id: 'postalAddress', numeric: false, disablePadding: true, label: 'postal address' },\n  { id: 'resumeId', numeric: false, disablePadding: true, label: 'resume id'},\n  { id: 'lastActiveDate', numeric: false, disablePadding: true, label: 'Last Active' },\n  { id: 'commentOne', numeric: false, disablePadding: true, label: 'comment 1' },\n  { id: 'commentTwo', numeric: false, disablePadding: true, label: 'comment 2' },\n  { id: 'commentThree', numeric: false, disablePadding: true, label: 'comment 3' },\n  { id: 'commentFour', numeric: false, disablePadding: true, label: 'comment 4' },\n  { id: 'commentFive', numeric: false, disablePadding: true, label: 'comment 5' },\n];\n\n\nfunction EnhancedTableHead(props) {\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ 'aria-label': 'select all desserts' }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? 'right' : 'left'}\n        //     padding={headCell.disablePadding ? 'none' : 'default'}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : 'asc'}\n              onClick={createSortHandler(headCell.id)}\n            >\n              <b>{headCell.label.toUpperCase()}</b>\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === 'desc' ? 'sorted descending' : 'sorted ascending'}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === 'light'\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: '1 1 100%',\n    fontWeight: 'bold'\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, jobData, setFilterData, rows } = props;\n  const currentUser = useRecoilValue(currentUserAtom)\n  const history = useHistory()\n  const location = useLocation().pathname\n  \n  const onSearchChange = (e) => {\n\t\tvar inputVal = e.target.value\n\t\tvar filterData = jobData.filter(data => {\n                        return data['candidateName'].toLowerCase().includes(inputVal) ||\n                                data['email'].toLowerCase().includes(inputVal) ||\n                                data['currentLocation'].toLowerCase().includes(inputVal) ||\n                                data['preferredLocation'].toLowerCase().includes(inputVal) ||\n                                data['designation'].toLowerCase().includes(inputVal) ||\n                                data['currentEmployer'].toLowerCase().includes(inputVal)\n\t\t});\n\t\tsetFilterData(filterData);\n\t}\n\n  return (\n    <>\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography style={{textAlign: 'left', flex: 'none'}} className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\n          Candidates\n        </Typography>\n      )}\n\n      {/* search */}\n      <div style={{margin: '0 auto'}}>\n        <Search onChange={(e) => {onSearchChange(e)} } />\n      </div>\n\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon onClick={() => console.log('delete button click')} />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <>\n        {get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<Tooltip title=\"Add Job\">\n              <IconButton aria-label=\"add job\" onClick={() => history.push(`${location}/add`)}>\n                <AddIcon />\n              </IconButton>\n            </Tooltip>\n\t\t\t\t\t\t)}\n            <CSVLink data={rows} headers={headCells.label} filename={\"candidates.csv\"}>\n              <Tooltip title=\"Download\">\n                <IconButton aria-label=\"download\">\n                  <GetAppIcon />\n                </IconButton>\n              </Tooltip>\n            </CSVLink>\n          </>\n        \n      )}\n    </Toolbar>\n    </>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: '100%',\n  },\n  paper: {\n    width: '100%',\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: 'rect(0 0 0 0)',\n    height: 1,\n    margin: -1,\n    overflow: 'hidden',\n    padding: 0,\n    position: 'absolute',\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function EnhancedTable({filterData,setFilterData, jobData, toApply}) {\n  const classes = useStyles();\n  const [order, setOrder] = React.useState('asc');\n  const [orderBy, setOrderBy] = React.useState('postedOn');\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n  const location = useLocation().pathname\n  const rows = [];\n\n  filterData.map(candidate => {\n        rows.push(\n                createData(candidate._id, candidate['candidateName'], candidate['resumeTitle'], candidate['contactNo'], candidate['email'], candidate['workExp'], candidate['annualSalary'], candidate['currentLocation'], candidate['preferredLocation'], candidate['currentEmployer'], candidate['designation'], candidate['UGCourse'], candidate['PGCourse'], candidate['postPGCourse'], candidate['DOB'], candidate['postalAddress'], candidate['resumeId'],  candidate['lastActiveDate'], candidate['commentOne'], candidate['commentOne'], candidate['commentTwo'], candidate['commentThree'],  candidate['commentFour'], candidate['commentFive'])\n        );\n        console.log(rows)\n  })\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === 'asc';\n    setOrder(isAsc ? 'desc' : 'asc');\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1),\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n\n  const isSelected = (code) => selected.indexOf(code) !== -1;\n\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar numSelected={selected.length} jobData={jobData} setFilterData={setFilterData} rows={rows} />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"tableTitle\"\n            size=\"medium\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy} \n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.code)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ 'aria-labelledby': labelId }}\n                        />\n                      </TableCell>\n                      <TableCell component=\"th\" id={labelId} scope=\"row\" style={{minWidth: 180}}>\n                      {toApply ? (\n                          row.candidateName\n                        ) : (\n                          <NavLink to={`${location}/${row.code}`}>\n                            {row.candidateName}\n                          </NavLink>\n                        )}\n\n                      </TableCell>\n                      <TableCell style={{minWidth: 300}}>{row.resumeTitle}</TableCell>\n                      <TableCell style={{minWidth: 150}}>\n                              <a href={\"tel:\"+row.contactNumber}>{row.contactNumber}</a>\n                        </TableCell>\n                      <TableCell>\n                              <a href={\"mailto:\"+row.email} target=\"_blank\">{row.email}</a>\n                        </TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.workExp}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.annualSalary}</TableCell>\n                      <TableCell style={{minWidth: 180}}>{row.currentLocation}</TableCell>\n                      <TableCell style={{minWidth: 200}}>{row.preferredLocation}</TableCell>\n                      <TableCell style={{minWidth: 180}}>{row.currentEmployer}</TableCell>\n                      <TableCell>{row.designation}</TableCell>\n                      <TableCell style={{minWidth: 130}}>{row.UGCourse}</TableCell>\n                      <TableCell style={{minWidth: 120}}>{row.PGCourse}</TableCell>\n                      <TableCell style={{minWidth: 170}}>{row.PostPGCourse}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.DOB}</TableCell>\n                      <TableCell style={{minWidth: 200}}>{row.postalAddress}</TableCell>\n                      <TableCell>\n                                {toApply ? (\n                                        row.code\n                                        ) : (\n                                        <NavLink to={`${location}/${row.code}`}>\n                                        {row.resumeID}\n                                        </NavLink>\n                                )}\n                      </TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.LastActive}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentOne}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentTwo}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentThree}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentFour}</TableCell>\n                      <TableCell style={{minWidth: 150}}>{row.commentFive}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 53 * emptyRows }}>\n                  <TableCell colSpan={23} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport {\n\tapplyJob,\n\tcandidatesEndpoint,\n\tcompaniesEndpoint,\n\tgetCandidates,\n\tgetJobs,\n} from '../../api'\nimport Table from '../../components/Table'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tPageLayout,\n\tTableData,\n\tTableHead,\n\tTableRow,\n\tStyledCheckbox,\n\tContentContainer,\n\tControlButton,\n} from '../../styles'\n\nimport Checkbox from '@material-ui/core/Checkbox'\n\nimport Controls from '../../components/Controls'\nimport { NavLink, useHistory, useLocation } from 'react-router-dom'\n\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n\ttrueKeysToArr,\n} from '../../utils/helperFunctions'\n\nimport { useRecoilValue } from 'recoil'\nimport { filterTrueCandidateChecked } from '../../recoil/selectors'\nimport SearchBar from '../../components/SearchBar'\nimport AddIcon from '../../assets/icons/add.svg'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { AddCircle, Delete } from '@material-ui/icons'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { v4 as uuid } from 'uuid'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\nimport NewCandidateTable from './components/NewCandidateTable'\n\n\nfunction CandidatePage() {\n\t// React Hooks\n\n\tconst [candidateData, setCandidateData] = useRecoilState(candidateAtom)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst selected = useRecoilValue(filterTrueCandidateChecked)\n\tconst [filterData, setFilterData] = useState();\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\n\tuseEffect(() => {\n\t\taxios.get(getCandidates, { withCredentials: true })\n\t\t\t.then(({ data }) => {setCandidateData(data); setFilterData(data);})\n\t\t\t.catch((e) => console.log(e))\n\t}, [checked, isModalOpen])\n\n\t// Variables\n\tconst candidateHeading = [\n\t\t'Select',\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t`Entered On`,\n\t]\n\n\t// Helper Functions\n\tconst onCheckHandler = (id) => {\n\t\tconst newData = {\n\t\t\t...checked,\n\t\t\t[id]: !checked[id],\n\t\t}\n\t\tsetChecked(newData)\n\t}\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(candidatesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Candidates Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\t// Renderers\n\t// const renderCandidateData =\n\t// \tcandidateData &&\n\t// \tcandidateData.map((candidate) => {\n\t// \t\treturn (\n\t// \t\t\t<TableRow key={candidate._id}>\n\t// \t\t\t\t<TableData>\n\t// \t\t\t\t\t<StyledCheckbox\n\t// \t\t\t\t\t\ttype='checkbox'\n\t// \t\t\t\t\t\tchecked={checked[candidate._id]}\n\t// \t\t\t\t\t\tcolor='primary'\n\t// \t\t\t\t\t\tonChange={() => onCheckHandler(candidate._id)}\n\t// \t\t\t\t\t/>\n\t// \t\t\t\t</TableData>\n\t// \t\t\t\t<TableData>\n\t// \t\t\t\t\t<NavLink to={`${location}/${candidate.candidateCode}`}>\n\t// \t\t\t\t\t\t{candidate.candidateCode}\n\t// \t\t\t\t\t</NavLink>{' '}\n\t// \t\t\t\t</TableData>\n\t// \t\t\t\t<TableData>{candidate.basic.fullName}</TableData>\n\t// \t\t\t\t<TableData>{candidate.basic.primaryEmail}</TableData>\n\t// \t\t\t\t<TableData>{candidate.basic.mobile}</TableData>\n\t// \t\t\t\t<TableData>{candidate.address.state}</TableData>\n\t// \t\t\t\t{/* <TableData>45</TableData> */}\n\t// \t\t\t\t<TableData>{candidate.professional.industry}</TableData>\n\t// \t\t\t\t<TableData>{candidate.professional.functionalArea}</TableData>\n\t// \t\t\t\t<TableData>{formatDate(candidate.createdAt)}</TableData>\n\t// \t\t\t</TableRow>\n\t// \t\t)\n\t// \t})\n\n\tconst toPage = (link) => {\n\t\thistory.push(link)\n\t}\n\n\treturn (\n\t\t<ContentContainer>\n\t\t\t{renderWithLoader(\n\t\t\t\tfilterData,\n\t\t\t\t<NewCandidateTable filterData = {filterData} setFilterData={setFilterData} jobData={candidateData}/>\n\t\t\t)}\n\t\t</ContentContainer>\n\t\t// <>\n\t\t// \t<Controls title={titleGenerator(selected, 'Candidate Controls')}>\n\t\t// \t\t{selected.length > 0 ? (\n\t\t// \t\t\t<>\n\t\t// \t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t// \t\t\t\t\t<SMUIIconButton\n\t\t// \t\t\t\t\t\tcolor='secondary'\n\t\t// \t\t\t\t\t\tonClick={toggleModal}\n\t\t// \t\t\t\t\t\tcolor='secondary'>\n\t\t// \t\t\t\t\t\t<Delete />\n\t\t// \t\t\t\t\t</SMUIIconButton>\n\t\t// \t\t\t\t)}\n\n\t\t// \t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t// \t\t\t\t\t<ControlButton\n\t\t// \t\t\t\t\t\tvariant='contained'\n\t\t// \t\t\t\t\t\tcolor='primary'\n\t\t// \t\t\t\t\t\tonClick={() => toPage('/job/apply')}>\n\t\t// \t\t\t\t\t\tAssign\n\t\t// \t\t\t\t\t</ControlButton>\n\t\t// \t\t\t\t)}\n\t\t// \t\t\t</>\n\t\t// \t\t) : (\n\t\t// \t\t\t<>\n\t\t// \t\t\t\t{get(currentUser, 'roleId.permissions.candidate.create') && (\n\t\t// \t\t\t\t\t<SMUIIconButton\n\t\t// \t\t\t\t\t\tcolor='primary'\n\t\t// \t\t\t\t\t\tonClick={() => toPage(`${location}/add`)}>\n\t\t// \t\t\t\t\t\t<AddCircle />\n\t\t// \t\t\t\t\t</SMUIIconButton>\n\t\t// \t\t\t\t)}\n\t\t// \t\t\t</>\n\t\t// \t\t)}\n\t\t// \t\t{/* <Button variant=\"contained\" color=\"primary\">Import</Button>\n\t\t// \t\t<Button variant=\"contained\" color=\"primary\">Export</Button> */}\n\t\t// \t</Controls>\n\t\t// \t<DeleteModal\n\t\t// \t\topen={isModalOpen}\n\t\t// \t\tonClose={toggleModal}\n\t\t// \t\tcount={selected.length}\n\t\t// \t\tdeleteHandler={deleteHandler}\n\t\t// \t/>\n\t\t// \t<ContentContainer>\n\t\t// \t\t{renderWithLoader(\n\t\t// \t\t\tcandidateData,\n\t\t// \t\t\t<Table headings={renderCandidateHeading}>{renderCandidateData}</Table>\n\t\t// \t\t)}\n\t\t// \t</ContentContainer>\n\t\t// </>\n\t)\n}\n\nexport default CandidatePage\n\nconst CandidatePageContainer = styled.div`\n\tbackground-color: #0000000d;\n\twidth: 100%;\n\tpadding: 10px;\n`\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport AddIcon from '../../assets/icons/add.svg'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, roleAtom, roleCheckedAtom } from '../../recoil/atoms'\nimport axios from 'axios'\nimport { rolesEndpoint } from '../../api'\nimport Table from '../../components/Table'\nimport { v4 as uuid } from 'uuid'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\nimport { selectedRoles } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction RolePage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [checked, setChecked] = useRecoilState(roleCheckedAtom)\n\tconst selected = useRecoilValue(selectedRoles)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(rolesEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Roles Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst roleHeading = ['Select', 'Name', 'Vendor', 'Total Users', 'Created On']\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst renderHeading = roleHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderRoleData =\n\t\troles &&\n\t\troles.map(({ _id, name, vendor, users, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{name}</TableData>\n\t\t\t\t\t<TableData>{vendor}</TableData>\n\t\t\t\t\t<TableData>{users.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Roles')}>\n\t\t\t\t{selected.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.role.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\n\t\t\t\t{/* <IconButton onClick={() => navHandler('add')} src={AddIcon} /> */}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\troles,\n\t\t\t\t\t<Table headings={renderHeading}>{renderRoleData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RolePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tPageLayout,\n\tTableHead,\n\tTableRow,\n\tTableData,\n\tStyledCheckbox,\n} from '../../styles'\nimport Controls from '../../components/Controls'\n\nimport { useHistory, useLocation } from 'react-router-dom'\nimport AddIcon from '../../assets/icons/add.svg'\nimport axios from 'axios'\nimport { usersEndpoint } from '../../api'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { currentUserAtom, userAtom, userCheckedAtom } from '../../recoil/atoms'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n\ttitleGenerator,\n} from '../../utils/helperFunctions'\n\nimport { v4 as uuid } from 'uuid'\nimport { selectedUsers } from '../../recoil/selectors'\nimport { IconButton } from '@material-ui/core'\nimport { AddCircle, Delete } from '@material-ui/icons'\nimport DeleteModal from '../../components/Modals/DeleteModal'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\nimport { SMUIIconButton } from '../../styles/StyledMaterialUI'\n\nfunction UserPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [users, setUsers] = useRecoilState(userAtom)\n\tconst [checked, setChecked] = useRecoilState(userCheckedAtom)\n\tconst selected = useRecoilValue(selectedUsers)\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(usersEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setUsers(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst userHeading = [\n\t\t'Select',\n\t\t'Fullname',\n\t\t'Username',\n\t\t'Contact',\n\t\t'Email',\n\t\t'Assigned Role',\n\t\t'Created On',\n\t]\n\n\tconst renderUserHeading = userHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(usersEndpoint, selected, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('User Deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\tconst showUsers =\n\t\tusers &&\n\t\tusers.filter((user) => {\n\t\t\tif (currentUser) {\n\t\t\t\treturn currentUser._id.toString() !== user._id.toString()\n\t\t\t}\n\t\t})\n\tconst renderUserData =\n\t\tshowUsers &&\n\t\tshowUsers.map(\n\t\t\t({\n\t\t\t\t_id,\n\t\t\t\tfirstName,\n\t\t\t\tlastName,\n\t\t\t\tuserName,\n\t\t\t\tcontact,\n\t\t\t\temail,\n\t\t\t\troleId,\n\t\t\t\tcreatedAt,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t\t<TableData>\n\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TableData>\n\n\t\t\t\t\t\t<TableData>{`${firstName} ${lastName}`}</TableData>\n\t\t\t\t\t\t<TableData>{userName}</TableData>\n\t\t\t\t\t\t<TableData>{contact}</TableData>\n\t\t\t\t\t\t<TableData>{email}</TableData>\n\t\t\t\t\t\t<TableData>{roleId.name}</TableData>\n\t\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t\t</TableRow>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={titleGenerator(selected, 'Users')}>\n\t\t\t\t{selected.length ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<Delete />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.user.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={selected.length}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tusers,\n\t\t\t\t\t<Table headings={renderUserHeading}>{renderUserData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserPage\n","import { IconButton, InputLabel, MenuItem } from '@material-ui/core'\nimport { AddCircle } from '@material-ui/icons'\nimport axios from 'axios'\nimport 'date-fns'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { companiesEndpoint, jobEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { companyAtom, currentUserAtom, jobAtom } from '../../../recoil/atoms'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\nimport { toast } from '../../../components/Toast'\n\nimport industries from '../../../industrires.json'\nimport states from '../../../states.json'\n\nfunction JobInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst jobId = get(match, 'params.id', '')\n\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\n\tconst jobs = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [job, setJob] = useState(\n\t\tjobs && jobs.find((job) => job.jobDetails.jobCode === jobId)\n\t)\n\n\tuseEffect(() => {\n\t\tif (!job) {\n\t\t\taxios\n\t\t\t\t.get(`${jobEndpoint}/${jobId}`)\n\t\t\t\t.then(({ data }) => setJob(data))\n\t\t\t\t.catch((e) => console.log(e))\n\t\t}\n\t}, [])\n\n\tconst [jobTitle, setJobTitle] = useState(\n\t\tget(job, 'jobOpeningInfo.jobTitle', '')\n\t)\n\tconst [jobType, setJobType] = useState(get(job, 'jobOpeningInfo.jobType', ''))\n\tconst [industry, setIndustry] = useState(\n\t\tget(job, 'jobOpeningInfo.industry', '')\n\t)\n\tconst [noOfOpening, setNoOfOpening] = useState(\n\t\tget(job, 'jobOpeningInfo.noOfOpenings')\n\t)\n\n\tconst [salaryFrom, setSalaryFrom] = useState(\n\t\tget(job, 'jobOpeningInfo.salary.from')\n\t)\n\n\tconst [salaryTo, setSalaryTo] = useState(\n\t\tget(job, 'jobOpeningInfo.salary.to')\n\t)\n\n\t//companydetails\n\tconst [companyId, setCompanyId] = useState(\n\t\tget(job, 'companyDetails.companyId._id', '')\n\t)\n\n\tconst [companyName, setCompanyName] = useState(\n\t\tget(job, 'companyDetails.companyName', '')\n\t)\n\n\tconst [isCompanyDetailsVisible, setIsCompanyDetailsVisible] = useState(\n\t\tget(job, 'companyDetails.isCompanyDetailsVisible', true)\n\t)\n\t//jobaddress\n\tconst [jobLocation, setJobLocation] = useState(\n\t\tget(job, 'jobAddress.jobLocation')\n\t)\n\tconst [city, setCity] = useState(get(job, 'jobAddress.city', ''))\n\tconst [zone, setZone] = useState(get(job, 'jobAddress.zone'))\n\tconst [state, setState] = useState(get(job, 'jobAddress.state', ''))\n\tconst [pincode, setPincode] = useState(get(job, 'jobAddress.pincode'))\n\tconst [country, setCountry] = useState(get(job, 'jobAddress.country', ''))\n\n\t//jobdetails\n\tconst [jobDescription, setJobDescription] = useState(\n\t\tget(job, 'jobDetails.jobDescription', '')\n\t)\n\n\tconst [eligibility, setEligibility] = useState(\n\t\tget(job, 'jobDetails.eligibility', [])\n\t)\n\tconst [eligibilityVal, setEligibilityVal] = useState()\n\n\tconst [responsibilities, setResponsibilities] = useState(\n\t\tget(job, 'jobDetails.responsibilities', [])\n\t)\n\tconst [responsibilitiesVal, setResponsibilitiesVal] = useState()\n\n\tconst [benefits, setBenefits] = useState(get(job, 'jobDetails.benefits', []))\n\tconst [benefitsVal, setBenefitsVal] = useState()\n\n\tconst [additionalInformation, setAdditionalInformation] = useState(\n\t\tget(job, 'jobDetails.additionalInformation', '')\n\t)\n\tconst [targetDate, setTargetDate] = useState(\n\t\tpickerDateFormat(get(job, 'jobDetails.targetDate'))\n\t)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\t//functions\n\n\t//handlers\n\tconst saveHandler = async (isEdit) => {\n\t\tconst newJobData = {\n\t\t\tjobOpeningInfo: {\n\t\t\t\tjobTitle,\n\t\t\t\tjobType,\n\t\t\t\tindustry,\n\t\t\t\tsalary: {\n\t\t\t\t\tfrom: salaryFrom,\n\t\t\t\t\tto: salaryTo\n\t\t\t\t},\n\t\t\t\tassignedOn: new Date(),\n\t\t\t\tnoOfOpenings: Number(noOfOpening),\n\t\t\t},\n\t\t\tcompanyDetails: {\n\t\t\t\tcompanyId,\n\t\t\t\tcompanyName,\n\t\t\t\tisCompanyDetailsVisible,\n\t\t\t},\n\t\t\tjobAddress: {\n\t\t\t\tjobLocation,\n\t\t\t\tcity,\n\t\t\t\tzone,\n\t\t\t\tstate,\n\t\t\t\tpincode,\n\t\t\t\tcountry,\n\t\t\t},\n\t\t\tjobDetails: {\n\t\t\t\tjobCode: codeGenerator(jobTitle, industry, companyId),\n\t\t\t\tjobDescription,\n\t\t\t\tadditionalInformation,\n\t\t\t\ttargetDate,\n\t\t\t\teligibility,\n\t\t\t\tresponsibilities,\n\t\t\t\tbenefits,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\t\ttry {\n\t\t\tif (isEdit) {\n\t\t\t\tawait axios.patch(`${jobEndpoint}/${jobId}`, newJobData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\n\t\t\t\ttoast.success('Job Edited')\n\t\t\t\thistory.goBack()\n\t\t\t} else {\n\t\t\t\tawait axios.post(jobEndpoint, newJobData, { withCredentials: true })\n\t\t\t\ttoast.success('New Job Added')\n\t\t\t\thistory.goBack()\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst renderCompaniesOption =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName }) => {\n\t\t\treturn (\n\t\t\t\t<MenuItem key={_id} value={_id}>\n\t\t\t\t\t{companyName}\n\t\t\t\t</MenuItem>\n\t\t\t)\n\t\t})\n\n\tconst addCompanyHandler = () => {\n\t\thistory.push('/company/add')\n\t}\n\n\treturn (\n\t\t<JobInputContainer>\n\t\t\t{/* Control */}\n\t\t\t<Controls title='Job Control'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.permissions.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.job.update')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tonClick={() => saveHandler(edit)}>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Opening Info</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='industry'>Industry</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tindustries.map((data, i) => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={i} value={data.name}>{data.name}</MenuItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={noOfOpening}\n\t\t\t\t\t\tonChange={(e) => setNoOfOpening(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='No. of Opening'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobtype'>Job type</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobType}\n\t\t\t\t\t\t\tlabel='Job type'\n\t\t\t\t\t\t\tonChange={(e) => setJobType(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Full-time'>Full-Time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Part-time'>Part-time</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Freelancing'>Freelancing</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={salaryFrom}\n\t\t\t\t\t\tonChange={(e) => setSalaryFrom(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Salary from'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={salaryTo}\n\t\t\t\t\t\tonChange={(e) => setSalaryTo(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Salary To'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='company'>Company</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabelId='company'\n\t\t\t\t\t\t\tvalue={companyId}\n\t\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t\t\tonChange={(e) => setCompanyId(e.target.value)}>\n\t\t\t\t\t\t\t{renderCompaniesOption}\n\n\t\t\t\t\t\t\t<MenuItem value='add New' onClick={addCompanyHandler}>\n\t\t\t\t\t\t\t\t+ Add New Company\n\t\t\t\t\t\t\t</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<CheckBoxContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isCompanyDetailsVisible}\n\t\t\t\t\t\t\tonChange={(e) => setIsCompanyDetailsVisible(e.target.checked)}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<CheckBoxLabel>Company Details Visible</CheckBoxLabel>\n\t\t\t\t\t</CheckBoxContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Address</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={city}\n\t\t\t\t\t\tonChange={(e) => setCity(e.target.value)}\n\t\t\t\t\t\tlabel='City'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='state'>State</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tstates.map(data => (\n\t\t\t\t\t\t\t\t\t<MenuItem key={data.key} value={data.name}>{data.name}</MenuItem>\n\t\t\t\t\t\t\t\t))\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='jobLocation'>Job Location</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={jobLocation}\n\t\t\t\t\t\t\tonChange={(e) => setJobLocation(e.target.value)}\n\t\t\t\t\t\t\tlabel='Job Location'>\n\t\t\t\t\t\t\t<MenuItem value='On Location'>On Location</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Remote'>Remote</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='zone'>Zone</InputLabel>\n\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={zone}\n\t\t\t\t\t\t\tonChange={(e) => setZone(e.target.value)}\n\t\t\t\t\t\t\tlabel='Zone'>\n\t\t\t\t\t\t\t<MenuItem value='North'>North</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='East'>East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='West'>West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South'>South</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-East'>North-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='North-West'>North-West</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-East'>South-East</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='South-West'>South-West</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Job Details</CardTitle>\n\n\t\t\t\t\t{eligibility.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(eligibility, setEligibility)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, eligibilityVal, eligibility, setEligibility)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={eligibilityVal}\n\t\t\t\t\t\t\tonChange={(e) => setEligibilityVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Eligibility'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{responsibilities.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(responsibilities, setResponsibilities)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(\n\t\t\t\t\t\t\t\te,\n\t\t\t\t\t\t\t\tresponsibilitiesVal,\n\t\t\t\t\t\t\t\tresponsibilities,\n\t\t\t\t\t\t\t\tsetResponsibilities\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Responsibilities'\n\t\t\t\t\t\t\tvalue={responsibilitiesVal}\n\t\t\t\t\t\t\tonChange={(e) => setResponsibilitiesVal(e.target.value)}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t{benefits.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(benefits, setBenefits)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, benefitsVal, benefits, setBenefits)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tlabel='Benefits'\n\t\t\t\t\t\t\tvalue={benefitsVal}\n\t\t\t\t\t\t\tonChange={(e) => setBenefitsVal(e.target.value)}\n\t\t\t\t\t\t/>\n\n\t\t\t\t\t\t<IconButton type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\t<AddCircle />\n\t\t\t\t\t\t</IconButton>\n\n\t\t\t\t\t</MultipleItemInputContainer>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={jobDescription}\n\t\t\t\t\t\tonChange={(e) => setJobDescription(e.target.value)}\n\t\t\t\t\t\tlabel='Job Description'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tvalue={additionalInformation}\n\t\t\t\t\t\tonChange={(e) => setAdditionalInformation(e.target.value)}\n\t\t\t\t\t\tlabel='Additional Information'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tdefaultValue={targetDate}\n\t\t\t\t\t\t\tlabel='Target Date'\n\t\t\t\t\t\t\tonChange={(e) => setTargetDate(e.target.value)}\n\t\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\t\tplaceholder='Target Date'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\n\t\t\t{/* inputs */}\n\t\t\t{toast}\n\t\t\t{/* {isSaved && <Redirect to='/job' />} */}\n\t\t</JobInputContainer>\n\t)\n}\n\nexport default JobInput\n\nconst JobInputContainer = styled.div``\n\nconst CheckBoxContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\nconst CheckBoxLabel = styled.p`\n\t${RemoveSpaces}\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React from 'react'\nimport JobInput from './components/JobInput'\nimport styled from 'styled-components'\nimport { PageLayout } from '../../styles'\n\nfunction AddJob() {\n\treturn (\n\t\t<>\n\t\t\t<JobInput />\n\t\t</>\n\t)\n}\n\nexport default AddJob\n\n\n","import React from 'react'\nimport Tabs from '@material-ui/core/Tabs'\nimport Tab from '@material-ui/core/Tab'\nimport { useRecoilState } from 'recoil'\nimport { Card } from '../styles'\nimport styled from 'styled-components'\nimport { v4 as uuid } from 'uuid'\n\n\nexport default function PageTab({ atom, labels }) {\n\tconst [value, setValue] = useRecoilState(atom)\n\n\tconst handleChange = (_event, newValue) => {\n\t\tsetValue(newValue)\n\t}\n\n\tconst renderLabels = labels.map((item) => <Tab key={uuid()} label={item} />)\n\treturn (\n\t\t<TabBG>\n\t\t\t<Tabs\n\t\t\t\tvalue={value}\n\t\t\t\tonChange={handleChange}\n\t\t\t\tindicatorColor='primary'\n\t\t\t\ttextColor='primary'\n\t\t\t\t// centered\n\t\t\t>\n\t\t\t\t{renderLabels}\n\t\t\t</Tabs>\n\t\t</TabBG>\n\t)\n}\n\nconst TabBG = styled(Card)`\n\tpadding: 0px;\n\tmargin: 0px;\n\twidth: fit-content;\n`\n","export const stages = [\n\t'Shortlisted',\n\t'Assessment',\n\t'Hiring manager review',\n\t'Interview 1',\n\t'Interview 2',\n\t'Interview 3',\n\t'Salary Fitment',\n\t'Offer',\n\t'Documentation',\n\t'Joining',\n]\n","import React from 'react'\nimport styled from 'styled-components'\nimport {\n\tCard,\n\tCategory,\n\tCategoryGrid,\n\tCategoryMainTitle,\n\tCategoryTitle,\n\tContent,\n\tDataContainer,\n\tDataContent,\n\tDataTitle,\n\tthemeBorder,\n\tTitle,\n} from '../../../styles'\nimport JobDetails from '../JobDetails'\nimport { v4 as uuid } from 'uuid'\nimport { formatDate } from '../../../utils/helperFunctions'\n\nfunction JobInfo({ job }) {\n\tconst { companyDetails, jobAddress, jobDetails, jobOpeningInfo } = job || {}\n\tconst { companyName, companyAddress } = companyDetails || {}\n\tconst { city, country, jobLocation, pincode, state, zone } = jobAddress || {}\n\tconst {\n\t\teligibility,\n\t\tresponsibilities,\n\t\tbenefits,\n\t\tjobCode,\n\t\tadditionalInformation,\n\t\tjobDescription,\n\t\ttargetDate,\n\t} = jobDetails || {}\n\n\tconst { assignedOn, industry, jobTitle, jobType, noOfOpenings, salary } =\n\t\tjobOpeningInfo || {}\n\n\tconst renderList = (arr) =>\n\t\tarr.map((item) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{item}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Opening Info</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Type</Title>\n\t\t\t\t\t\t<Content>{jobType}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Openings</Title>\n\t\t\t\t\t\t<Content>{noOfOpenings}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Salary P.A</Title>\n\t\t\t\t\t\t<Content>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tsalary ? <>{salary.from} - {salary.to}</> : <>Not specified</>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Location</Title>\n\t\t\t\t\t\t<Content>{jobLocation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>City</Title>\n\t\t\t\t\t\t<Content>{city}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Zone</Title>\n\t\t\t\t\t\t<Content>{zone}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Job Details</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Code</Title>\n\t\t\t\t\t\t<Content>{jobCode}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Description</Title>\n\t\t\t\t\t\t<Content>{jobDescription}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Additional Information</Title>\n\t\t\t\t\t\t<Content>{additionalInformation}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Target Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(targetDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Eligibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(eligibility)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Responsibility</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(responsibilities)}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Benifits</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderList(benefits)}</CategoryGrid>\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default JobInfo\n","import axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { NavLink, useHistory } from 'react-router-dom'\nimport { useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { jobEndpoint } from '../../api'\nimport ArrowBG from '../../assets/icons/arrow.svg'\nimport Controls from '../../components/Controls'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport PageTab from '../../components/PageTab'\nimport Table from '../../components/Table'\nimport { currentUserAtom, jobAtom, jobTab } from '../../recoil/atoms'\n\nimport {\n\tCard,\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tRemoveSpaces,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport IconButton from '@material-ui/core/IconButton';\nimport { counter, renderWithLoader } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport JobInfo from './components/JobInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\n\n\nfunction JobDetails({ match }) {\n\tconst history = useHistory()\n\tconst id = match.params.id\n\tconst jobTabIndex = useRecoilValue(jobTab)\n\tconst labels = ['PipeLine', 'Applied Candidates', 'Job Details']\n\tconst [job, setJob] = useState()\n\tconst jobFullData = useRecoilValue(jobAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst selectedJob = jobFullData\n\t\t? jobFullData.find((job) => job.jobDetails.jobCode === id)\n\t\t: job\n\n\tconst stageDataCount = counter(\n\t\tget(selectedJob, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetJob(data)\n\t\t\t})\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst candidateData = get(selectedJob, 'statusIds', []).map(\n\t\t(item) => item.candidateId\n\t)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${jobEndpoint}/${id}`, { withCredentials: true })\n\t\t\ttoggleModal()\n\t\t\ttoast.success('Job Deleted')\n\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoggleModal()\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst editNavHandler = () => {\n\t\thistory.push(`/job/edit/${id}`)\n\t}\n\n\tconst candidateHeading = [\n\t\t'Candidate Code',\n\t\t'Name',\n\t\t'Email',\n\t\t'Mobile',\n\t\t'City',\n\t\t// `Experience`,\n\t\t`Industry`,\n\t\t`Functional Area`,\n\t\t'Status',\n\t]\n\n\tconst renderCandidateHeading = candidateHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\tconst renderCandidateData = get(selectedJob, 'statusIds', []).map(\n\t\t({ candidateId, currentStage, _id }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={candidateId._id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<NavLink to={`/applied/${_id}`}>\n\t\t\t\t\t\t\t{candidateId.candidateCode}\n\t\t\t\t\t\t</NavLink>\n\t\t\t\t\t</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.fullName}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.primaryEmail}</TableData>\n\t\t\t\t\t<TableData>{candidateId.basic.mobile}</TableData>\n\t\t\t\t\t<TableData>{candidateId.address.state}</TableData>\n\t\t\t\t\t{/* <TableData>45</TableData> */}\n\t\t\t\t\t<TableData>{candidateId.professional.industry}</TableData>\n\t\t\t\t\t<TableData>{candidateId.professional.functionalArea}</TableData>\n\t\t\t\t\t<TableData>{currentStage.stageName}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{renderWithLoader(\n\t\t\t\t\t\t\tcandidateData,\n\t\t\t\t\t\t\t<Table headings={renderCandidateHeading}>\n\t\t\t\t\t\t\t\t{renderCandidateData}\n\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\treturn <JobInfo job={selectedJob} />\n\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls\n\t\t\t\ttitle={get(selectedJob, 'jobOpeningInfo.jobTitle', 'Loading..')}>\n\t\t\t\t{/* <Controls title='Details'> */}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t<IconButton onClick={toggleModal}>\n\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.job.update') && (\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={editNavHandler}>\n\t\t\t\t\t\t<EditIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<DeleteModal\n\t\t\t\t\topen={isModalOpen}\n\t\t\t\t\tonClose={toggleModal}\n\t\t\t\t\tcount={1}\n\t\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t\t/>\n\t\t\t\t<PageTab atom={jobTab} labels={labels} />\n\t\t\t\t{renderTabBody(jobTabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default JobDetails\n","import React, {useState} from 'react'\nimport axios from 'axios'\nimport {createBulkCandidate} from '../../../api/index'\n\nconst BulkUpload = () => {\n\n        const [selectedFile, setSelectedFile] = useState(null)\n\n        const onFileChange = e => {\n                setSelectedFile(e.target.files[0])\n        }\n\n        const onFileUpload = () => {\n                const formData = new FormData()\n                formData.append(\n                        \"myFile\",\n                        selectedFile,\n                        selectedFile.name\n                )\n\n                console.log(selectedFile)\n\n                axios({\n                        method: 'post',\n                        url: createBulkCandidate,\n                        data: formData,\n                        withCredentials: true,\n                        headers: {'Content-Type': 'multipart/form-data'}\n                })\n                .then(() => alert('Data Upload Successfully'))\n                .catch(err => alert(err))\n        }\n\n        const fileData = () => { \n\t\n                if (selectedFile) { \n                        \n                        return ( \n                        <div> \n                                <h2>File Details:</h2> \n                                <p>File Name: {selectedFile.name}</p> \n                                {/* <p>File Type: {selectedFile.type}</p>  */}\n                                <p> \n                                Last Modified:{\" \"} \n                                {selectedFile.lastModifiedDate.toDateString()} \n                                </p> \n                        </div> \n                        )\n                } else { \n                        return ( \n                                <div> \n                                        <br /> \n                                        <h4>Choose before Pressing the Upload button</h4> \n                                </div> \n                                )\n                        } \n                }\n\n        return (\n                <div>\n                      <h2>Bulk Upload</h2>\n                      <input type = 'file' onChange = {onFileChange} />\n                      <button onClick={onFileUpload}>Upload!</button>\n                      {fileData()}\n                </div>\n        )\n}\n\nexport default BulkUpload\n","import {\n\tButton,\n\tIconButton,\n\tInputLabel,\n\tMenuItem,\n\tSelect,\n} from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport { candidateEndpoint, createCandidate } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tCategoryTitle,\n\tContentContainer,\n\tControlButton,\n\tInputContainer,\n\tItemListContainer,\n\tMultipleItemInputContainer,\n\tStyledTextField,\n} from '../../../styles'\nimport {\n\taddValToArr,\n\tcodeGenerator,\n\tpickerDateFormat,\n\trenderArr,\n} from '../../../utils/helperFunctions'\n\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField,\n} from '../../../styles/StyledMaterialUI'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { useRecoilValue } from 'recoil'\nimport { candidateAtom, currentUserAtom } from '../../../recoil/atoms'\nimport { get } from 'lodash'\nimport { useHistory } from 'react-router-dom'\nimport { v4 as uuid } from 'uuid'\n\nimport { toast } from '../../../components/Toast'\n\nfunction CandidateInput({ edit, match }) {\n\tconst history = useHistory()\n\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst candidateCode = get(match, 'params.id', '')\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState(\n\t\tcandidates &&\n\t\t\tcandidates.find((candidate) => candidate.candidateCode === candidateCode)\n\t)\n\n\tconst { basic, address, professional } = candidate || {}\n\n\tconst {\n\t\tfullName: _fullName,\n\t\tprimaryEmail: _primaryEmail,\n\t\tsecondaryEmail: _secondaryEmail,\n\t\tmobile: _mobile,\n\t\tpan: _pan,\n\t\tdateOfBirth: _dateOfBirth,\n\t} = basic || {}\n\n\tconst {\n\t\tcountry: _country,\n\t\tpincode: _pincode,\n\t\tstate: _state,\n\t\tstreetName: _streetName,\n\t} = address || {}\n\n\tconst {\n\t\tcurrentSalary: _currentSalary,\n\t\teducation: _education,\n\t\texpected: _expected,\n\t\texperience: _experience,\n\t\tfunctionalArea: _functionalArea,\n\t\tindustry: _industry,\n\t\tskillSet: _skillSet,\n\t} = professional || {}\n\n\t// Basic\n\tconst [fullName, setFullName] = useState(_fullName)\n\n\tconst [primaryEmail, setPrimaryEmail] = useState(_primaryEmail)\n\tconst [secondaryEmail, setSecondaryEmail] = useState(_secondaryEmail)\n\tconst [mobile, setMobile] = useState(_mobile)\n\tconst [pan, setPan] = useState(_pan)\n\tconst [dateOfBirth, setDateOfBirth] = useState(pickerDateFormat(_dateOfBirth))\n\n\t// Address\n\tconst [streetName, setStreetName] = useState(_streetName)\n\tconst [state, setState] = useState(_state)\n\tconst [country, setCountry] = useState(_country)\n\tconst [pincode, setPincode] = useState(_pincode)\n\n\t// Professional\n\tconst [experience, setExperience] = useState(_experience || [])\n\tconst [education, setEducation] = useState(_education || [])\n\tconst [skillSet, setSkillSet] = useState(_skillSet || [])\n\tconst [skillSetVal, setSkillSetVal] = useState()\n\n\tconst [currentSalary, setCurrentSalary] = useState(_currentSalary)\n\tconst [expected, setExpected] = useState(_expected)\n\tconst [industry, setIndustry] = useState(_industry)\n\tconst [functionalArea, setFunctionalArea] = useState(_functionalArea)\n\n\tconst [jobTitle, setJobTitle] = useState()\n\tconst [company, setCompany] = useState()\n\tconst [summary, setSummary] = useState()\n\tconst [fromDate, setFromDate] = useState(pickerDateFormat())\n\tconst [tillDate, setTillDate] = useState(pickerDateFormat())\n\n\tconst [qualificationName, setQualificationName] = useState()\n\tconst [instituteName, setInstituteName] = useState()\n\tconst [studiedFromDate, setStudiedFromDate] = useState(pickerDateFormat())\n\tconst [studiedTillDate, setStudiedTillDate] = useState(pickerDateFormat())\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(`${candidateEndpoint}/${candidateCode}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\t\n\tconst addExpHandler = () => {\n\t\tconst data = {\n\t\t\tjobTitle,\n\t\t\tcompany,\n\t\t\tsummary,\n\t\t\tfromDate,\n\t\t\ttillDate,\n\t\t}\n\n\t\tconst tempExp = [...experience]\n\t\ttempExp.push(data)\n\t\tsetExperience(tempExp)\n\t}\n\n\tconst addEduHandler = () => {\n\t\tconst data = {\n\t\t\tqualificationName,\n\t\t\tinstituteName,\n\t\t\tstudiedFromDate,\n\t\t\tstudiedTillDate,\n\t\t}\n\n\t\tconst tempEdu = [...education]\n\t\ttempEdu.push(data)\n\t\tsetEducation(tempEdu)\n\t}\n\n\tconst saveHandler = async () => {\n\t\tconst candidateData = {\n\t\t\tbasic: {\n\t\t\t\tfullName,\n\t\t\t\tprimaryEmail,\n\t\t\t\tsecondaryEmail,\n\t\t\t\tmobile,\n\t\t\t\tpan,\n\t\t\t\tdateOfBirth: new Date(dateOfBirth),\n\t\t\t},\n\n\t\t\tprofessional: {\n\t\t\t\texperience,\n\t\t\t\teducation,\n\t\t\t\tskillSet,\n\t\t\t\tcurrentSalary: Number(currentSalary),\n\t\t\t\texpected: Number(expected),\n\t\t\t\tindustry,\n\t\t\t\tfunctionalArea,\n\t\t\t},\n\t\t\tcandidateCode: codeGenerator(fullName, pan, mobile),\n\t\t\tstatus: 'New',\n\t\t\tstage: 'Not Applied',\n\n\t\t\taddress: {\n\t\t\t\tstreetName,\n\t\t\t\tstate,\n\t\t\t\tcountry,\n\t\t\t\tpincode,\n\t\t\t},\n\t\t\tsource: currentUser._id,\n\t\t}\n\n\t\ttry {\n\t\t\tif (edit) {\n\t\t\t\tawait axios.patch(\n\t\t\t\t\t`${candidateEndpoint}/${candidateCode}`,\n\t\t\t\t\tcandidateData,\n\t\t\t\t\t{ withCredentials: true }\n\t\t\t\t)\n\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('Candidate Edited')\n\t\t\t} else {\n\t\t\t\tawait axios.post(candidateEndpoint, candidateData, {\n\t\t\t\t\twithCredentials: true,\n\t\t\t\t})\n\t\t\t\thistory.goBack()\n\t\t\t\ttoast.success('New Candidate Added')\n\t\t\t}\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate Controls'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t{(get(currentUser, 'roleId.candidate.job.create') ||\n\t\t\t\t\tget(currentUser, 'roleId.permissions.candidate.create')) && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={saveHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Basic</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={fullName}\n\t\t\t\t\t\tonChange={(e) => setFullName(e.target.value)}\n\t\t\t\t\t\tlabel='Full Name'\n\t\t\t\t\t/>\n\t\t\t\t\t\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={[primaryEmail]}\n\t\t\t\t\t\tonChange={(e) => setPrimaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Primary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tvalue={secondaryEmail}\n\t\t\t\t\t\tonChange={(e) => setSecondaryEmail(e.target.value)}\n\t\t\t\t\t\tlabel='Secondary Email'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={mobile}\n\t\t\t\t\t\tonChange={(e) => setMobile(e.target.value)}\n\t\t\t\t\t\tlabel='Mobile No.'\n\t\t\t\t\t/> \n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pan}\n\t\t\t\t\t\tonChange={(e) => setPan(e.target.value)}\n\t\t\t\t\t\tlabel='PAN No'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Date of Birth'\n\t\t\t\t\t\tdefaultValue={dateOfBirth}\n\t\t\t\t\t\tonChange={(e) => setDateOfBirth(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Address</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={streetName}\n\t\t\t\t\t\tonChange={(e) => setStreetName(e.target.value)}\n\t\t\t\t\t\tlabel='Street Name'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={state}\n\t\t\t\t\t\tonChange={(e) => setState(e.target.value)}\n\t\t\t\t\t\tlabel='State'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={country}\n\t\t\t\t\t\tonChange={(e) => setCountry(e.target.value)}\n\t\t\t\t\t\tlabel='Country'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={pincode}\n\t\t\t\t\t\tonChange={(e) => setPincode(e.target.value)}\n\t\t\t\t\t\tlabel='Pincode'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Personal Information - Professional</CardTitle>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={currentSalary}\n\t\t\t\t\t\tonChange={(e) => setCurrentSalary(e.target.value)}\n\t\t\t\t\t\tlabel='Current Salary'\n\t\t\t\t\t/>\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={expected}\n\t\t\t\t\t\tonChange={(e) => setExpected(e.target.value)}\n\t\t\t\t\t\tlabel='Expected Salary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='industry'>Industry</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tvalue={industry}\n\t\t\t\t\t\t\tlabel='Industry'\n\t\t\t\t\t\t\tonChange={(e) => setIndustry(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Finance'>Finance</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Marketing'>Marketing</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='functionalArea'>Functional Area</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Functional Area'\n\t\t\t\t\t\t\tvalue={functionalArea}\n\t\t\t\t\t\t\tonChange={(e) => setFunctionalArea(e.target.value)}>\n\t\t\t\t\t\t\t<MenuItem value='Software'>Software</MenuItem>\n\t\t\t\t\t\t\t<MenuItem value='Accounting'>Accounting</MenuItem>\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\n\t\t\t\t\t{skillSet.length > 0 && (\n\t\t\t\t\t\t<ItemListContainer>\n\t\t\t\t\t\t\t{renderArr(skillSet, setSkillSet)}\n\t\t\t\t\t\t</ItemListContainer>\n\t\t\t\t\t)}\n\n\t\t\t\t\t<MultipleItemInputContainer\n\t\t\t\t\t\tonSubmit={(e) =>\n\t\t\t\t\t\t\taddValToArr(e, skillSetVal, skillSet, setSkillSet)\n\t\t\t\t\t\t}>\n\t\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\t\tvalue={skillSetVal}\n\t\t\t\t\t\t\tonChange={(e) => setSkillSetVal(e.target.value)}\n\t\t\t\t\t\t\tlabel='Skill Set'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type='submit' variant='contained' color='primary'>\n\t\t\t\t\t\t\tAdd\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</MultipleItemInputContainer>\n\t\t\t\t</Card>\n\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Experience</CardTitle>\n\n\t\t\t\t\t{experience.map(\n\t\t\t\t\t\t({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Job Title</h1>\n\t\t\t\t\t\t\t\t\t<p>{jobTitle}</p>\n\t\t\t\t\t\t\t\t\t<h1>Company</h1>\n\t\t\t\t\t\t\t\t\t<p>{company}</p>\n\t\t\t\t\t\t\t\t\t<h1>Summary</h1>\n\t\t\t\t\t\t\t\t\t<p>{summary}</p>\n\t\t\t\t\t\t\t\t\t<h1>From Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{fromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Till Date</h1>\n\t\t\t\t\t\t\t\t\t<p>{tillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={jobTitle}\n\t\t\t\t\t\tonChange={(e) => setJobTitle(e.target.value)}\n\t\t\t\t\t\tlabel='Job Title'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={company}\n\t\t\t\t\t\tonChange={(e) => setCompany(e.target.value)}\n\t\t\t\t\t\tlabel='Company'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={summary}\n\t\t\t\t\t\tonChange={(e) => setSummary(e.target.value)}\n\t\t\t\t\t\tlabel='Summary'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='From Date'\n\t\t\t\t\t\tvalue={fromDate}\n\t\t\t\t\t\tonChange={(e) => setFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={tillDate}\n\t\t\t\t\t\tonChange={(e) => setTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addExpHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Education</CardTitle>\n\n\t\t\t\t\t{education.map(\n\t\t\t\t\t\t({\n\t\t\t\t\t\t\tqualificationName,\n\t\t\t\t\t\t\tinstituteName,\n\t\t\t\t\t\t\tstudiedFromDate,\n\t\t\t\t\t\t\tstudiedTillDate,\n\t\t\t\t\t\t}) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={uuid()}>\n\t\t\t\t\t\t\t\t\t<h1>Qualification</h1>\n\t\t\t\t\t\t\t\t\t<p>{qualificationName}</p>\n\t\t\t\t\t\t\t\t\t<h1>Institute</h1>\n\t\t\t\t\t\t\t\t\t<p>{instituteName}</p>\n\n\t\t\t\t\t\t\t\t\t<h1>Studied From</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedFromDate}</p>\n\t\t\t\t\t\t\t\t\t<h1>Studied Till</h1>\n\t\t\t\t\t\t\t\t\t<p>{studiedTillDate}</p>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t}\n\t\t\t\t\t)}\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={qualificationName}\n\t\t\t\t\t\tonChange={(e) => setQualificationName(e.target.value)}\n\t\t\t\t\t\tlabel='Qualification Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={instituteName}\n\t\t\t\t\t\tonChange={(e) => setInstituteName(e.target.value)}\n\t\t\t\t\t\tlabel='Institute Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tlabel='Studied From Date'\n\t\t\t\t\t\tvalue={studiedFromDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedFromDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tlabel='Studied Till Date'\n\t\t\t\t\t\ttype='date'\n\t\t\t\t\t\tvalue={studiedTillDate}\n\t\t\t\t\t\tonChange={(e) => setStudiedTillDate(e.target.value)}\n\t\t\t\t\t/>\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tonClick={addEduHandler}\n\t\t\t\t\t\tvariant='contained'\n\t\t\t\t\t\tcolor='primary'>\n\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t</IconButton>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateInput\n","import React from 'react'\nimport { PageLayout } from '../../styles'\nimport BulkUpload from './components/BulkUpload'\nimport CandidateInput from './components/CandidateInput'\n\nfunction AddCandidate() {\n\treturn (\n\t\t<>\n\t\t\t<BulkUpload />\n\t\t\t{/* <CandidateInput /> */}\n\t\t</>\n\t)\n}\n\nexport default AddCandidate\n","import React from 'react'\nimport { Card, Category, CategoryGrid, CategoryMainTitle, Content, DataContainer, RemoveSpaces, Title } from '../../../styles'\nimport styled from 'styled-components'\nimport { get } from 'lodash'\nimport { formatDate } from '../../../utils/helperFunctions'\nimport { v4 as uuid } from 'uuid'\n\nfunction CandidateInfo({ data }) {\n\tconst { basic, professional, address, source } = data || {}\n\tconst { fullName, primaryEmail, secondaryEmail, mobile, pan, dateOfBirth } =\n\t\tbasic || {}\n\n\t\n\tconst {\n\t\texperience,\n\t\teducation,\n\t\tskillSet,\n\t\tcurrentSalary,\n\t\texpected,\n\t\tindustry,\n\t\tfunctionalArea,\n\t} = professional || {}\n\n\tconst { streetName, state, country, pincode } = address || {}\n\n\tconst renderExperience =\n\t\texperience &&\n\t\texperience.map(({ jobTitle, company, summary, fromDate, tillDate }) => {\n\t\t\treturn (\n\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Job Title</Title>\n\t\t\t\t\t\t<Content>{jobTitle}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Company</Title>\n\t\t\t\t\t\t<Content>{company}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Summary</Title>\n\t\t\t\t\t\t<Content>{summary}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>From Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(fromDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Till Date</Title>\n\t\t\t\t\t\t<Content>{formatDate(tillDate)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t)\n\t\t})\n\n\tconst renderSkill =\n\t\tskillSet &&\n\t\tskillSet.map((skill) => {\n\t\t\treturn (\n\t\t\t\t<DataContainer key={uuid()}>\n\t\t\t\t\t<Content>{skill}</Content>\n\t\t\t\t</DataContainer>\n\t\t\t)\n\t\t})\n\tconst renderEducation =\n\t\teducation &&\n\t\teducation.map(\n\t\t\t({\n\t\t\t\tqualificationName,\n\t\t\t\tinstituteName,\n\t\t\t\tstudiedFromDate,\n\t\t\t\tstudiedTillDate,\n\t\t\t}) => {\n\t\t\t\treturn (\n\t\t\t\t\t<CategoryGrid key={uuid()}>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Qualification</Title>\n\t\t\t\t\t\t\t<Content>{qualificationName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Institute</Title>\n\t\t\t\t\t\t\t<Content>{instituteName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Start Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedFromDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>End Date</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(studiedTillDate)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t)\n\t\t\t}\n\t\t)\n\n\treturn (\n\t\t<Card>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Basic</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Fullname</Title>\n\t\t\t\t\t\t<Content>{fullName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Primary Email</Title>\n\t\t\t\t\t\t<Content>{primaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Secondary Email</Title>\n\t\t\t\t\t\t<Content>{secondaryEmail}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Mobile</Title>\n\t\t\t\t\t\t<Content>{mobile}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>PAN Number</Title>\n\t\t\t\t\t\t<Content>{pan}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Date Of Birth</Title>\n\t\t\t\t\t\t<Content>{formatDate(dateOfBirth)}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Address</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Street Name</Title>\n\t\t\t\t\t\t<Content>{streetName}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Pincode</Title>\n\t\t\t\t\t\t<Content>{pincode}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>State</Title>\n\t\t\t\t\t\t<Content>{state}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Country</Title>\n\t\t\t\t\t\t<Content>{country}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>SkillSet</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>{renderSkill}</CategoryGrid>\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Professional</CategoryMainTitle>\n\t\t\t\t<CategoryGrid>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Industry</Title>\n\t\t\t\t\t\t<Content>{industry}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Functional Area</Title>\n\t\t\t\t\t\t<Content>{functionalArea}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Current Salary</Title>\n\t\t\t\t\t\t<Content>{currentSalary}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t<Title>Expected Salary</Title>\n\t\t\t\t\t\t<Content>{expected}</Content>\n\t\t\t\t\t</DataContainer>\n\t\t\t\t</CategoryGrid>\n\t\t\t\t{renderExperience}\n\t\t\t</Category>\n\n\t\t\t<Category>\n\t\t\t\t<CategoryMainTitle>Education</CategoryMainTitle>\n\t\t\t\t{renderEducation}\n\t\t\t</Category>\n\t\t</Card>\n\t)\n}\n\nexport default CandidateInfo\n\n\n","import { IconButton } from '@material-ui/core'\nimport { Delete } from '@material-ui/icons'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tcandidateAtom,\n\tcandidateCheckedAtom,\n\tcandidateTab,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport {\n\tContentContainer,\n\tControlButton,\n\tPipelineCard,\n\tPipelineContainer,\n\tPipelineStat,\n\tPipelineTitle,\n\tTableData,\n\tTableHead,\n\tTableRow,\n} from '../../styles'\nimport CandidateInfo from './components/CandidateInfo'\nimport DeleteModal from '../../components/Modals/DeleteModal'\nimport {\n\tcounter,\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport Table from '../../components/Table'\nimport { stages } from '../../utils/sharedVariables'\n\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction CandidateDetails({ match }) {\n\tconst id = match.params.id\n\tconst history = useHistory()\n\tconst tabLabels = ['Pipeline', 'Applied Jobs', 'Candidate Details']\n\tconst tabIndex = useRecoilValue(candidateTab)\n\tconst [checked, setChecked] = useRecoilState(candidateCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst deleteHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.delete(`${candidateEndpoint}/${id}`, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Deleted')\n\t\t} catch (e) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState()\n\n\tconst singleCandidate = candidates\n\t\t? candidates.find((candidate) => candidate.candidateCode === id)\n\t\t: candidate\n\n\tuseEffect(() => {\n\t\taxios.get(`${candidateEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst navHandler = () => {\n\t\thistory.push(`/candidate/edit/${id}`)\n\t}\n\n\tconst assignHandler = () => {\n\t\tsetChecked({ [singleCandidate._id]: true })\n\t\thistory.push('/job/apply')\n\t}\n\n\tconst headings = ['Job Code', 'Job Title', 'Openings', 'Status', 'Posted on']\n\tconst renderHeading = headings.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\tconst renderData = get(singleCandidate, 'statusIds', []).map((status) => {\n\t\treturn (\n\t\t\t<TableRow key={status._id}>\n\t\t\t\t<TableData>{status.jobId.jobDetails.jobCode}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.jobTitle}</TableData>\n\t\t\t\t<TableData>{status.jobId.jobOpeningInfo.noOfOpenings}</TableData>\n\t\t\t\t<TableData>{status.currentStage.stageName}</TableData>\n\t\t\t\t<TableData>{formatDate(status.jobId.createdAt)}</TableData>\n\t\t\t</TableRow>\n\t\t)\n\t})\n\n\tconst stageDataCount = counter(\n\t\tget(singleCandidate, 'statusIds', []).map(\n\t\t\t(statusId) => statusId.currentStage.stageName\n\t\t)\n\t)\n\n\tconst renderPipeline = stages.map((stage) => {\n\t\treturn (\n\t\t\t<PipelineCard key={uuid()}>\n\t\t\t\t<PipelineStat>{get(stageDataCount, stage, 0)}</PipelineStat>\n\t\t\t\t<PipelineTitle>{stage}</PipelineTitle>\n\t\t\t</PipelineCard>\n\t\t)\n\t})\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn <PipelineContainer>{renderPipeline}</PipelineContainer>\n\t\t\tcase 1:\n\t\t\t\treturn (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{renderWithLoader(\n\t\t\t\t\t\t\tsingleCandidate,\n\t\t\t\t\t\t\t<Table headings={renderHeading}>{renderData}</Table>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)\n\n\t\t\tcase 2:\n\t\t\t\treturn <CandidateInfo data={singleCandidate} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title={get(singleCandidate, 'basic.fullName', 'Loading..')}>\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.delete') && (\n\t\t\t\t\t<IconButton onClick={toggleModal} color='secondary'>\n\t\t\t\t\t\t<Delete />\n\t\t\t\t\t</IconButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={assignHandler}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tAssign\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t\t{get(currentUser, 'roleId.permissions.candidate.update') && (\n\t\t\t\t\t<ControlButton\n\t\t\t\t\t\tonClick={navHandler}\n\t\t\t\t\t\tcolor='primary'\n\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\tEdit\n\t\t\t\t\t</ControlButton>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<DeleteModal\n\t\t\t\topen={isModalOpen}\n\t\t\t\tonClose={toggleModal}\n\t\t\t\tcount={1}\n\t\t\t\tdeleteHandler={deleteHandler}\n\t\t\t/>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={candidateTab} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CandidateDetails\n","import React from 'react'\nimport JobPage from './JobPage'\nimport styled from 'styled-components'\nfunction ApplyJobList() {\n\treturn (\n\t\t<ApplyJobListContainer>\n\t\t\t<JobPage toApply />\n\t\t</ApplyJobListContainer>\n\t)\n}\n\nexport default ApplyJobList\n\nconst ApplyJobListContainer = styled.div`\n\twidth: 100%;\n\t\n`\n","import React from 'react'\nimport { useRecoilValue } from 'recoil'\nimport { currentUserAtom } from '../../recoil/atoms'\nimport {\n\tCard,\n\tCategoryMainTitle,\n\tCategory,\n\tCategoryGrid,\n\tDataContainer,\n\tTitle,\n\tContent,\n} from '../../styles'\nimport { formatDate } from '../../utils/helperFunctions'\n\nfunction ProfilePage() {\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst { firstName, lastName, userName, email, contact, roleId, createdAt } =\n\t\tcurrentUser || {}\n\tconst { name } = roleId || {}\n\n\treturn (\n\t\t<>\n\t\t\t<Card>\n\t\t\t\t<Category>\n\t\t\t\t\t<CategoryMainTitle>Profile</CategoryMainTitle>\n\t\t\t\t\t<CategoryGrid>\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>First Name</Title>\n\t\t\t\t\t\t\t<Content>{firstName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Last Name</Title>\n\t\t\t\t\t\t\t<Content>{lastName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Username</Title>\n\t\t\t\t\t\t\t<Content>{userName}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Email</Title>\n\t\t\t\t\t\t\t<Content>{email}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Contact</Title>\n\t\t\t\t\t\t\t<Content>{contact}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Role</Title>\n\t\t\t\t\t\t\t<Content>{name}</Content>\n\t\t\t\t\t\t</DataContainer>\n\n\t\t\t\t\t\t<DataContainer>\n\t\t\t\t\t\t\t<Title>Created At</Title>\n\t\t\t\t\t\t\t<Content>{formatDate(createdAt)}</Content>\n\t\t\t\t\t\t</DataContainer>\n\t\t\t\t\t</CategoryGrid>\n\t\t\t\t</Category>\n\t\t\t</Card>\n\t\t</>\n\t)\n}\n\nexport default ProfilePage\n","import React, { useEffect, useState } from 'react'\nimport {\n\tContentContainer,\n\tStyledCheckbox,\n\tTableHead,\n\tTableData,\n\tTableRow,\n\tModalBody,\n\tModalTitle,\n\tModalWarning,\n\tModalText,\n\tModalButtonContainer,\n} from '../../styles'\nimport Controls from '../../components/Controls'\nimport { IconButton } from '@material-ui/core'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport {\n\tcompanyAtom,\n\tcompanyCheckedAtom,\n\tcurrentUserAtom,\n} from '../../recoil/atoms'\nimport axios from 'axios'\nimport { companiesEndpoint } from '../../api'\nimport { v4 as uuid } from 'uuid'\nimport Table from '../../components/Table'\nimport {\n\tformatDate,\n\trenderWithLoader,\n} from '../../utils/helperFunctions'\nimport { selectedCompanies } from '../../recoil/selectors'\nimport DeleteIcon from '@material-ui/icons/Delete'\nimport AddCircleIcon from '@material-ui/icons/AddCircle'\nimport { SMUIButton, SMUIIconButton, SMUIModal } from '../../styles/StyledMaterialUI'\n\nimport { toast } from '../../components/Toast'\nimport { get } from 'lodash'\n\nfunction CompanyPage() {\n\tconst history = useHistory()\n\tconst location = useLocation().pathname\n\tconst [companies, setCompanies] = useRecoilState(companyAtom)\n\tconst [checked, setChecked] = useRecoilState(companyCheckedAtom)\n\tconst [isModalOpen, setIsModalOpen] = useState(false)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst selectedCompany = useRecoilValue(selectedCompanies)\n\n\tuseEffect(() => {\n\t\taxios.get(companiesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setCompanies(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [isModalOpen])\n\n\tconst navHandler = (to) => {\n\t\thistory.push(`${location}/${to}`)\n\t}\n\t\n\tconst companyHeading = [\n\t\t'Select',\n\t\t'Company Name',\n\t\t'Company Address',\n\t\t'Jobs Assigned',\n\t\t'Created On',\n\t]\n\n\tconst renderCompanyHeading = companyHeading.map((heading) => (\n\t\t<TableHead key={uuid()}>{heading}</TableHead>\n\t))\n\n\n\tconst checkHandler = (e, _id) => {\n\t\tsetChecked({ ...checked, [_id]: e.target.checked })\n\t}\n\n\tconst deleteManyHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(companiesEndpoint, selectedCompany, {\n\t\t\t\twithCredentials: true,\n\t\t\t})\n\t\t\ttoggleModal()\n\t\t\tsetChecked({})\n\t\t\ttoast.success('Companies deleted')\n\t\t} catch (error) {\n\t\t\ttoggleModal()\n\n\t\t\ttoast.success('Something went wrong')\n\t\t}\n\t}\n\n\tconst toggleModal = () => setIsModalOpen(!isModalOpen)\n\n\tconst renderCompanyData =\n\t\tcompanies &&\n\t\tcompanies.map(({ _id, companyName, companyAddress, jobIds, createdAt }) => {\n\t\t\treturn (\n\t\t\t\t<TableRow key={_id}>\n\t\t\t\t\t<TableData>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, _id)}\n\t\t\t\t\t\t\tchecked={checked[_id] || false}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t</TableData>\n\n\t\t\t\t\t<TableData>{companyName}</TableData>\n\t\t\t\t\t<TableData>{companyAddress}</TableData>\n\t\t\t\t\t<TableData>{jobIds.length}</TableData>\n\t\t\t\t\t<TableData>{formatDate(createdAt)}</TableData>\n\t\t\t\t</TableRow>\n\t\t\t)\n\t\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Company'>\n\t\t\t\t{selectedCompany.length > 0 ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.delete') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='secondary' onClick={toggleModal}>\n\t\t\t\t\t\t\t\t<DeleteIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{get(currentUser, 'roleId.permissions.job.create') && (\n\t\t\t\t\t\t\t<SMUIIconButton color='primary' onClick={() => navHandler('add')}>\n\t\t\t\t\t\t\t\t<AddCircleIcon />\n\t\t\t\t\t\t\t</SMUIIconButton>\n\t\t\t\t\t\t)}\n\t\t\t\t\t</>\n\t\t\t\t)}\n\t\t\t</Controls>\n\t\t\t<SMUIModal open={isModalOpen} onClose={toggleModal}>\n\t\t\t\t<ModalBody>\n\t\t\t\t\t<ModalTitle>{selectedCompany.length} Items Selected</ModalTitle>\n\t\t\t\t\t<ModalWarning>Warning: This action cannot be undone</ModalWarning>\n\t\t\t\t\t<ModalText>Do you want to delete?</ModalText>\n\t\t\t\t\t<ModalButtonContainer>\n\t\t\t\t\t\t<SMUIButton onClick={toggleModal}>Cancel</SMUIButton>\n\t\t\t\t\t\t<SMUIButton\n\t\t\t\t\t\t\tonClick={deleteManyHandler}\n\t\t\t\t\t\t\tcolor='secondary'\n\t\t\t\t\t\t\tvariant='contained'>\n\t\t\t\t\t\t\tDelete\n\t\t\t\t\t\t</SMUIButton>\n\t\t\t\t\t</ModalButtonContainer>\n\t\t\t\t</ModalBody>\n\t\t\t</SMUIModal>\n\t\t\t<ContentContainer>\n\t\t\t\t{renderWithLoader(\n\t\t\t\t\tcompanies,\n\t\t\t\t\t<Table headings={renderCompanyHeading}>{renderCompanyData}</Table>\n\t\t\t\t)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyPage\n","import styled from 'styled-components'\nimport { Button, TextField } from '@material-ui/core'\nimport React, { useState } from 'react'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tContentContainer,\n\tRemoveSpaces,\n\tControlButton,\n} from '../../../styles'\nimport axios from 'axios'\nimport { companyEndpoint } from '../../../api'\nimport { useHistory } from 'react-router-dom'\nimport { toast } from '../../../components/Toast'\n\nfunction CompanyInput() {\n\tconst history = useHistory()\n\tconst [companyName, setCompanyName] = useState('')\n\tconst [companyAddress, setCompanyAddress] = useState('')\n\n\tconst AddCompanyHandler = async () => {\n\t\tconst companyData = {\n\t\t\tcompanyName,\n\t\t\tcompanyAddress,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(companyEndpoint, companyData, { withCredentials: true })\n\t\t\ttoast.success('Company Added')\n\t\t\thistory.goBack()\n\t\t} catch (err) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Company'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={AddCompanyHandler}\n\t\t\t\t\tcolor='primary'\n\t\t\t\t\tvariant='contained'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<Title>Company Details</Title>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={companyName}\n\t\t\t\t\t\tonChange={(e) => setCompanyName(e.target.value)}\n\t\t\t\t\t\tlabel='Company Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<CompanyTextField\n\t\t\t\t\t\tvalue={companyAddress}\n\t\t\t\t\t\tonChange={(e) => setCompanyAddress(e.target.value)}\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tmultiline\n\t\t\t\t\t\trows={4}\n\t\t\t\t\t\trowsMax={4}\n\t\t\t\t\t\tlabel='Company Address'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default CompanyInput\n\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 5px 0px;\n`\n\nconst CompanyTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 10px 0px;\n\t\tfont-size: 0.8em;\n\t}\n`\n","import React from 'react'\nimport CompanyInput from './components/CompanyInput'\nimport styled from 'styled-components'\nfunction AddCompany() {\n\treturn (\n\t\t<>\n\t\t\t<CompanyInput />\n\t\t</>\n\t)\n}\n\nexport default AddCompany\n\nconst AddCompanyContainer = styled.div`\n\t/* height: 100vh; */\n`\n","import { SMUIButton, SMUITextField } from '../../../styles/StyledMaterialUI'\nimport React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { RemoveSpaces, StyledTextField } from '../../../styles'\nimport { Button, TextField, CircularProgress } from '@material-ui/core'\nimport { useRecoilState } from 'recoil'\nimport {\n\tcredentialAtom,\n\tcurrentUserAtom,\n\tisAuthAtom,\n\tloading\n} from '../../../recoil/atoms'\nimport { useHistory } from 'react-router-dom'\nimport { loginEndpoint } from '../../../api'\n\nimport axios from 'axios'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\nimport { toast } from '../../../components/Toast'\n\nfunction SigninForm() {\n\tconst history = useHistory()\n\n\tconst [user, setUser] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [isAuth, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom);\n\tconst [isLoading, setIsLoading] = useState(false);\n\n\tconst submitHandler = async (e) => {\n\t\te.preventDefault()\n\t\tconst cred = { user, password }\n\t\tconst data = encryptObj(cred)\n\t\ttry {\n\t\t\tsetIsLoading(true);\n\t\t\tconst resData = await axios.post(\n\t\t\t\tloginEndpoint,\n\t\t\t\t{ data },\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\tif (resData.data.userData) {\n\t\t\t\tsetIsLoading(false);\n\t\t\t\tsetIsAuth(true)\n\t\t\t\tsetCurrentUser(resData.data.userData)\n\t\t\t\thistory.push('/dashboard')\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tsetIsLoading(false);\n\t\t\ttoast.error('Invalid Credentials')\n\t\t}\n\t}\n\n\n\treturn (\n\t\t<SigninFormContainer onSubmit={submitHandler}>\n\t\t\t<SiginFormTitle>SOS Dashboard</SiginFormTitle>\n\t\t\t<SiginFormDesc>Welcome Back, Please enter your credentials</SiginFormDesc>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={user}\n\t\t\t\tonChange={(e) => setUser(e.target.value)}\n\t\t\t\tlabel='Email / Username'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='text'\n\t\t\t/>\n\t\t\t<SigninInput\n\t\t\t\trequired\n\t\t\t\tvalue={password}\n\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\tlabel='Password'\n\t\t\t\tvariant='outlined'\n\t\t\t\ttype='password'\n\t\t\t/>\n\t\t\t<SignInButton type='submit' variant='contained' color='primary'>\n\t\t\t\t{/* Sign In */}\n\t\t\t\t{\n\t\t\t\t\tisLoading ? <CircularProgress size={24} style={{color: 'white'}} /> : \"Sign In\"\n\t\t\t\t}\n\t\t\t</SignInButton>\n\t\t</SigninFormContainer>\n\t)\n}\n\nexport default SigninForm\n\nconst SiginFormTitle = styled.h1`\n\t${RemoveSpaces};\n\tpadding-bottom: 5px;\n`\n\nconst SiginFormDesc = styled.p`\n\t${RemoveSpaces};\n\tpadding-bottom: 30px;\n`\n\nconst SigninInput = styled(TextField)`\n\t&& {\n\t\tmargin: 10px 0px;\n\t}\n`\n\nconst SignInButton = styled(Button)`\n\t&& {\n\t\tmargin: 10px 0px;\n\n\t\t/* padding: 15px; */\n\t}\n`\n\nconst SigninFormContainer = styled.form`\n\tdisplay: flex;\n\tflex: 1;\n\tpadding: 70px;\n\tflex-direction: column;\n\ttext-align: left;\n\tjustify-content: space-around;\n`\n","import React from 'react'\nimport styled from 'styled-components'\nimport SigninForm from './components/SigninForm'\nimport AuthIcon from '../../assets/icons/auth.svg'\n\nfunction Signin() {\n\treturn (\n\t\t<SigninContainer>\n\t\t\t{/* Image */}\n\t\t\t<AuthImage src={AuthIcon} />\n\n\t\t\t{/* SiginForm */}\n\t\t\t<SigninForm />\n\t\t</SigninContainer>\n\t)\n}\n\nexport default Signin\n\nconst SigninContainer = styled.div`\n\tdisplay: flex;\n\twidth: 100%;\n\talign-items: center;\n\tjustify-content: space-around;\n\theight: 100%;\n`\n\nconst AuthImage = styled.img`\n\twidth: 500px;\n\tflex: 1;\n\tpadding: 70px;\n`\n","import { Button } from '@material-ui/core'\nimport Menu from '@material-ui/core/Menu'\nimport MenuItem from '@material-ui/core/MenuItem'\nimport AccountCircleOutlinedIcon from '@material-ui/icons/AccountCircleOutlined'\nimport axios from 'axios'\nimport React, { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport styled from 'styled-components'\nimport { logoutEndpoint } from '../api'\nimport { currentUserAtom, isAuthAtom } from '../recoil/atoms'\nimport { RemoveSpaces, themeBorder } from '../styles/index'\nimport { toast } from './Toast'\n\nfunction Navbar() {\n\tconst [anchorEl, setAnchorEl] = useState(null)\n\tconst [, setIsAuth] = useRecoilState(isAuthAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\n\tconst history = useHistory()\n\tconst handleClick = (event) => setAnchorEl(event.currentTarget)\n\tconst handleClose = () => setAnchorEl(null)\n\n\tconst navHandler = () => {\n\t\thistory.push(`/profile`)\n\t\thandleClose()\n\t}\n\n\tconst logoutHandler = async () => {\n\t\ttry {\n\t\t\tawait axios.post(logoutEndpoint, {}, { withCredentials: true })\n\t\t\tsetIsAuth(false)\n\t\t\thandleClose()\n\t\t\thistory.push(`/`)\n\t\t} catch (e) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\treturn (\n\t\t<NavbarContainer>\n\t\t\t<Logo>\n\t\t\t\tSwitch <LogoHighlight>On Success</LogoHighlight>\n\t\t\t</Logo>\n\n\t\t\t<Button startIcon={<AccountCircleOutlinedIcon />} onClick={handleClick}>\n\t\t\t\t{currentUser && currentUser.firstName}\n\t\t\t</Button>\n\n\t\t\t<Menu\n\t\t\t\tanchorEl={anchorEl}\n\t\t\t\tkeepMounted\n\t\t\t\topen={Boolean(anchorEl)}\n\t\t\t\tonClose={handleClose}>\n\t\t\t\t<MenuItem onClick={navHandler}>Profile</MenuItem>\n\t\t\t\t<MenuItem onClick={logoutHandler}>Logout</MenuItem>\n\t\t\t</Menu>\n\t\t</NavbarContainer>\n\t)\n}\n\nexport default Navbar\n\nconst NavbarContainer = styled.div`\n\tdisplay: flex;\n\talign-items: center;\n\tposition: sticky;\n\tpadding: 10px 20px;\n\t${themeBorder}\n\tborder-radius: 0px;\n\tjustify-content: space-between;\n`\nconst Logo = styled.h4`\n\t${RemoveSpaces};\n\tcolor: blue;\n`\n\nconst LogoHighlight = styled.span`\n\tcolor: orange;\n`\n","import { Checkbox, TextField } from '@material-ui/core'\nimport axios from 'axios'\nimport React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport { roleEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport {\n\tCard,\n\tCardTitle,\n\tContentContainer,\n\tControlButton,\n\tRemoveSpaces,\n\tStyledCheckbox,\n} from '../../../styles'\nimport { SMUITextField } from '../../../styles/StyledMaterialUI'\n\nimport { toast } from '../../../components/Toast'\nimport { useHistory } from 'react-router-dom'\n\nfunction RoleInput() {\n\tconst history = useHistory()\n\n\tconst [name, setName] = useState('')\n\tconst [vendor, setVendor] = useState('')\n\n\tconst defaultPermissions = {\n\t\tjob: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tcandidate: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\tuser: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t\trole: {\n\t\t\tcreate: false,\n\t\t\tupdate: false,\n\t\t\tread: false,\n\t\t\tdelete: false,\n\t\t},\n\t}\n\n\tconst [permissions, setPermissions] = useState(defaultPermissions)\n\n\tuseEffect(() => {}, [])\n\n\tconst resetHandler = () => {}\n\n\tconst submitHandler = async () => {\n\t\tconsole.log({ permissions })\n\t\tconst roleData = {\n\t\t\tname,\n\t\t\tvendor,\n\t\t\tpermissions,\n\t\t}\n\t\ttry {\n\t\t\tawait axios.post(roleEndpoint, roleData, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New Role Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst checkHandler = (e, role, type) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp[type] = checked\n\t\tif (\n\t\t\t!(\n\t\t\t\ttype === 'read' &&\n\t\t\t\t(permissionsTemp['delete'] || permissionsTemp['update'])\n\t\t\t)\n\t\t) {\n\t\t\tif ((type === 'delete' && checked) || (type === 'update' && checked)) {\n\t\t\t\tpermissionsTemp['read'] = checked\n\t\t\t}\n\t\t\tsetPermissions({\n\t\t\t\t...permissions,\n\t\t\t\t[role]: permissionsTemp,\n\t\t\t})\n\t\t}\n\t}\n\n\tconst selectAllHandler = (e, role) => {\n\t\tconst checked = e.target.checked\n\t\tconst permissionsTemp = { ...permissions[role] }\n\t\tpermissionsTemp.read = checked\n\t\tpermissionsTemp.create = checked\n\t\tpermissionsTemp.update = checked\n\t\tpermissionsTemp.delete = checked\n\t\tsetPermissions({\n\t\t\t...permissions,\n\t\t\t[role]: permissionsTemp,\n\t\t})\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add Role'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={submitHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Role Details</CardTitle>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\tonChange={(e) => setName(e.target.value)}\n\t\t\t\t\t\tlabel='Role Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={vendor}\n\t\t\t\t\t\tonChange={(e) => setVendor(e.target.value)}\n\t\t\t\t\t\tlabel='Vendor'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t\t<Card>\n\t\t\t\t\t<CardTitle>Permissions</CardTitle>\n\t\t\t\t\t<PermissionTable>\n\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'job')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Jobs</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'candidate')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Candidates</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'role')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Roles</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t\t<PermissionTableHead>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => selectAllHandler(e, 'user')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>User</Content>\n\t\t\t\t\t\t\t\t</PermissionTableHead>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.read}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'read')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Read</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.create}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'create')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Create</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.update}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'update')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Update</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\n\t\t\t\t\t\t\t<PermissionTableRow>\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.job.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'job', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.candidate.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'candidate', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.role.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'role', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\n\t\t\t\t\t\t\t\t<PermissionTableData>\n\t\t\t\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\t\t\t\tchecked={permissions.user.delete}\n\t\t\t\t\t\t\t\t\t\tonChange={(e) => checkHandler(e, 'user', 'delete')}\n\t\t\t\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t<Content>Delete</Content>\n\t\t\t\t\t\t\t\t</PermissionTableData>\n\t\t\t\t\t\t\t</PermissionTableRow>\n\t\t\t\t\t\t</tbody>\n\t\t\t\t\t</PermissionTable>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default RoleInput\n\nconst RoleTextField = styled(TextField)`\n\t&& {\n\t\twidth: 100%;\n\t\tmargin: 5px 0px;\n\t}\n`\nconst Title = styled.h5`\n\ttext-align: left;\n\t${RemoveSpaces};\n\tpadding: 10px 0px;\n`\n\nconst PermissionTable = styled.table`\n\twidth: 100%;\n\ttext-align: left;\n\tborder-collapse: collapse;\n`\nconst PermissionTableRow = styled.tr`\n\tdisplay: flex;\n`\n\nconst PermissionTableData = styled.td`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst PermissionTableHead = styled.th`\n\tdisplay: flex;\n\talign-items: center;\n\tflex: 1;\n`\n\nconst Content = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 10px;\n`\n","import React from 'react'\nimport Controls from '../../components/Controls'\nimport RoleInput from './components/RoleInput'\n\nfunction AddRole() {\n    return (\n        <div>\n          <RoleInput/>\n        </div>\n    )\n}\n\nexport default AddRole\n","import {\n\tInputLabel,\n\tMenuItem\n} from '@material-ui/core'\nimport axios from 'axios'\nimport passwordGenerator from 'generate-password'\nimport React, { useEffect, useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState } from 'recoil'\nimport styled from 'styled-components'\nimport { rolesEndpoint, userEndpoint } from '../../../api'\nimport Controls from '../../../components/Controls'\nimport { toast } from '../../../components/Toast'\nimport { roleAtom } from '../../../recoil/atoms'\nimport {\n\tCard, ContentContainer, ControlButton,\n\n\n\n\tRemoveSpaces, StyledCheckbox\n} from '../../../styles'\nimport {\n\tSMUIFormControl,\n\tSMUISelect,\n\tSMUITextField\n} from '../../../styles/StyledMaterialUI'\nimport { encryptObj } from '../../../utils/helperFunctions'\n\n//------------\n\nfunction UserInput() {\n\tconst history = useHistory()\n\tconst [roles, setRoles] = useRecoilState(roleAtom)\n\tconst [roleId, setRoleId] = useState('')\n\n\tconst [firstName, setFirstName] = useState('')\n\tconst [lastName, setLastName] = useState('')\n\tconst [userName, setUserName] = useState('')\n\tconst [email, setEmail] = useState('')\n\tconst [password, setPassword] = useState('')\n\tconst [contact, setContact] = useState('')\n\tconst [isAutoGenerated, setIsAutoGenerated] = useState('')\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.get(rolesEndpoint, { withCredentials: true })\n\t\t\t.then(({ data }) => setRoles(data))\n\t\t\t.catch((e) => console.log(e))\n\t}, [])\n\n\tconst saveUserHandler = async () => {\n\t\tconst userData = {\n\t\t\tfirstName,\n\t\t\tlastName,\n\t\t\tuserName,\n\t\t\tpassword,\n\t\t\temail,\n\t\t\tcontact,\n\t\t\troleId,\n\t\t}\n\t\tconst data = encryptObj(userData)\n\n\t\ttry {\n\t\t\tawait axios.post(userEndpoint, { data }, { withCredentials: true })\n\t\t\thistory.goBack()\n\t\t\ttoast.success('New User Added')\n\t\t} catch (error) {\n\t\t\ttoast.error('New User Added')\n\t\t}\n\t}\n\n\tconst autoGeneratePassword = (e) => {\n\t\tconst checked = e.target.checked\n\n\t\tsetIsAutoGenerated(checked)\n\t\tif (checked) {\n\t\t\tconst password = passwordGenerator.generate({\n\t\t\t\tlength: 14,\n\t\t\t\tnumbers: true,\n\t\t\t\tsymbols: true,\n\t\t\t\texcludeSimilarCharacters: true,\n\t\t\t})\n\t\t\tsetPassword(password)\n\t\t}\n\t}\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Add User'>\n\t\t\t\t<ControlButton color='secondary'>Reset</ControlButton>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={saveUserHandler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSave\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<Card>\n\t\t\t\t\t<SMUIFormControl variant='outlined'>\n\t\t\t\t\t\t<InputLabel id='role'>Role</InputLabel>\n\t\t\t\t\t\t<SMUISelect\n\t\t\t\t\t\t\tlabel='Role'\n\t\t\t\t\t\t\tvalue={roleId}\n\t\t\t\t\t\t\tonChange={(e) => setRoleId(e.target.value)}>\n\t\t\t\t\t\t\t{roles &&\n\t\t\t\t\t\t\t\troles.map((role) => {\n\t\t\t\t\t\t\t\t\treturn <MenuItem key={role._id} value={role._id}>{role.name}</MenuItem>\n\t\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</SMUISelect>\n\t\t\t\t\t</SMUIFormControl>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={email}\n\t\t\t\t\t\tonChange={(e) => setEmail(e.target.value)}\n\t\t\t\t\t\ttype='email'\n\t\t\t\t\t\tlabel='Email'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tdisabled={isAutoGenerated}\n\t\t\t\t\t\tvalue={password}\n\t\t\t\t\t\tonChange={(e) => setPassword(e.target.value)}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tlabel='Password'\n\t\t\t\t\t/>\n\t\t\t\t\t<AutoGeneratorPassContainer>\n\t\t\t\t\t\t<StyledCheckbox\n\t\t\t\t\t\t\tchecked={isAutoGenerated}\n\t\t\t\t\t\t\tonChange={autoGeneratePassword}\n\t\t\t\t\t\t\ttype='checkbox'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<AutoGeneratorLabel>Auto Generated</AutoGeneratorLabel>\n\t\t\t\t\t</AutoGeneratorPassContainer>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={firstName}\n\t\t\t\t\t\tonChange={(e) => setFirstName(e.target.value)}\n\t\t\t\t\t\tlabel='First Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={lastName}\n\t\t\t\t\t\tonChange={(e) => setLastName(e.target.value)}\n\t\t\t\t\t\tlabel='Last Name'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={userName}\n\t\t\t\t\t\tonChange={(e) => setUserName(e.target.value)}\n\t\t\t\t\t\tlabel='Username'\n\t\t\t\t\t/>\n\t\t\t\t\t<SMUITextField\n\t\t\t\t\t\tvariant='outlined'\n\t\t\t\t\t\tvalue={contact}\n\t\t\t\t\t\tonChange={(e) => setContact(e.target.value)}\n\t\t\t\t\t\ttype='number'\n\t\t\t\t\t\tlabel='Contact No.'\n\t\t\t\t\t/>\n\t\t\t\t</Card>\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default UserInput\n\nconst AutoGeneratorPassContainer = styled.div`\n\tdisplay: flex;\n\tjustify-content: flex-start;\n\talign-items: center;\n`\n\nconst AutoGeneratorLabel = styled.p`\n\t${RemoveSpaces};\n\tpadding-left: 5px;\n\tfont-size: 0.8em;\n\tfont-weight: 400;\n`\n","import React from 'react'\nimport UserInput from './components/UserInput'\n\nfunction AddUser() {\n    return (\n        <>\n            <UserInput/>\n        </>\n    )\n}\n\nexport default AddUser\n","import React from 'react'\nimport JobInput from './components/JobInput'\n\nfunction EditJob(props) {\n\treturn (\n\t\t<>\n\t\t\t<JobInput edit {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditJob\n","import { MenuItem } from '@material-ui/core'\nimport axios from 'axios'\nimport { get } from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Timeline, TimelineEvent } from 'react-event-timeline'\nimport { useHistory } from 'react-router-dom'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { candidateEndpoint, statusEndpoint } from '../../api'\nimport Controls from '../../components/Controls'\nimport PageTab from '../../components/PageTab'\nimport {\n\tappliedCandidateTabAtom,\n\tcandidateAtom,\n\tcurrentUserAtom,\n\tstatusAtom,\n} from '../../recoil/atoms'\n\nimport { Card, ContentContainer, ControlButton } from '../../styles'\nimport { SMUISelect } from '../../styles/StyledMaterialUI'\nimport { formatDate } from '../../utils/helperFunctions'\nimport { stages } from '../../utils/sharedVariables'\nimport CandidateInfo from './components/CandidateInfo'\nimport { toast } from '../../components/Toast'\nimport { v4 as uuid } from 'uuid'\n\n\nfunction AppliedCandidate({ match }) {\n\tconst { id } = match.params\n\n\tconst history = useHistory()\n\tconst tabIndex = useRecoilValue(appliedCandidateTabAtom)\n\tconst currentUser = useRecoilValue(currentUserAtom)\n\tconst [status, setStatus] = useRecoilState(statusAtom)\n\tconst [selectedStage, setSelectedStage] = useState(newStageGenerator()[0])\n\n\tconst candidates = useRecoilValue(candidateAtom)\n\tconst [candidate, setCandidate] = useState()\n\tconst { candidateId } = status || {}\n\tconst singleCandidate = () =>\n\t\tcandidates\n\t\t\t? candidates.find((candidate) => candidate._id.toString() === candidateId)\n\t\t\t: candidate\n\n\t//new stage --> stages\n\t//Current stage -> new stage\n\n\tuseEffect(() => {\n\t\taxios.get(`${statusEndpoint}/${id}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setStatus(data))\n\t\t\t.catch((e) => console.log(e))\n\n\t\taxios.get(`${candidateEndpoint}/${candidateId}`, { withCredentials: true })\n\t\t\t.then(({ data }) => setCandidate(data))\n\t\t\t.catch((e) => console.log(e))\n\t\t// setSelectedStage(get(status, 'currentStage.stageName', ''))\n\t}, [candidateId])\n\n\tconst changeStageHangler = async () => {\n\t\ttry {\n\t\t\tawait axios.patch(\n\t\t\t\t`${statusEndpoint}/${id}`,\n\t\t\t\t{\n\t\t\t\t\tstageName: selectedStage,\n\t\t\t\t\tuserId: currentUser._id,\n\t\t\t\t},\n\t\t\t\t{ withCredentials: true }\n\t\t\t)\n\t\t\thistory.goBack()\n\t\t\ttoast.success('Candidate Stage Change')\n\t\t} catch (error) {\n\t\t\ttoast.error('Something went wrong')\n\t\t}\n\t}\n\n\tconst tabLabels = ['Timeline', 'Candidate Details']\n\n\tconst renderTimelineData = get(status, 'stages', []).map(\n\t\t({ stageName, createdAt, userId }) => {\n\t\t\treturn (\n\t\t\t\t<TimelineEvent\n\t\t\t\t\tkey={uuid()}\n\t\t\t\t\ttitle={`${stageName} set by ${userId.firstName} ${userId.lastName}`}\n\t\t\t\t\tcreatedAt={formatDate(createdAt)}></TimelineEvent>\n\t\t\t)\n\t\t}\n\t)\n\n\tconst renderTabBody = (index) => {\n\t\tswitch (index) {\n\t\t\tcase 0:\n\t\t\t\treturn (\n\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Timeline>{renderTimelineData}</Timeline>\n\t\t\t\t\t</Card>\n\t\t\t\t)\n\t\t\tcase 1:\n\t\t\t\treturn <CandidateInfo data={singleCandidate()} />\n\t\t\tdefault:\n\t\t\t\tbreak\n\t\t}\n\t}\n\n\t// const renderStageOption =\n\t// \tstatus &&\n\t// \tstages\n\t// \t\t.filter((stage) => stage !== status.currentStage.stageName)\n\t// \t\t.map((stage) => {\n\t// \t\t\treturn <MenuItem value={stage}>{stage}</MenuItem>\n\t// \t\t})\n\n\tfunction newStageGenerator() {\n\t\tconst currentStatus = status && status.currentStage.stageName\n\t\tconst index = stages.indexOf(currentStatus)\n\t\tconst newStages = stages.slice(index + 1)\n\t\treturn newStages\n\t}\n\n\tconst renderStageOption = newStageGenerator().map((stage) => {\n\t\treturn <MenuItem key={uuid()} value={stage}>{stage}</MenuItem>\n\t})\n\n\treturn (\n\t\t<>\n\t\t\t<Controls title='Candidate'>\n\t\t\t\t<SMUISelect\n\t\t\t\t\tvalue={selectedStage}\n\t\t\t\t\tonChange={(e) => setSelectedStage(e.target.value)}>\n\t\t\t\t\t{renderStageOption}\n\t\t\t\t</SMUISelect>\n\t\t\t\t<ControlButton\n\t\t\t\t\tonClick={changeStageHangler}\n\t\t\t\t\tvariant='contained'\n\t\t\t\t\tcolor='primary'>\n\t\t\t\t\tSet\n\t\t\t\t</ControlButton>\n\t\t\t</Controls>\n\t\t\t<ContentContainer>\n\t\t\t\t<PageTab atom={appliedCandidateTabAtom} labels={tabLabels} />\n\t\t\t\t{renderTabBody(tabIndex)}\n\t\t\t</ContentContainer>\n\t\t</>\n\t)\n}\n\nexport default AppliedCandidate\n","import React from 'react'\nimport CandidateInput from './components/CandidateInput'\n\nfunction EditCandidate(props) {\n\treturn (\n\t\t<>\n\t\t\t<CandidateInput edit {...props} />\n\t\t</>\n\t)\n}\n\nexport default EditCandidate\n","import React, { useEffect, useState } from 'react'\nimport styled from 'styled-components'\nimport Sidebar from './components/Sidebar'\nimport { HashRouter, Switch, Route, useHistory } from 'react-router-dom'\nimport DashboardPage from './pages/Dashboard'\nimport JobPage from './pages/Job/JobPage'\nimport CandidatePage from './pages/Candidate'\nimport RolePage from './pages/Role'\nimport UserPage from './pages/User'\nimport AddJob from './pages/Job/AddJob'\nimport JobDetails from './pages/Job/JobDetails'\nimport AddCandidate from './pages/Candidate/AddCandidate'\nimport CandidateDetails from './pages/Candidate/CandidateDetails'\nimport ApplyJobList from './pages/Job/ApplyJobList'\nimport ProfilePage from './pages/Profile'\nimport CompanyPage from './pages/Company'\nimport AddCompany from './pages/Company/AddCompany'\nimport Signin from './pages/Signin'\nimport { useRecoilState, useRecoilValue } from 'recoil'\nimport { credentialAtom, currentUserAtom, isAuthAtom } from './recoil/atoms'\nimport Navbar from './components/Navbar'\nimport AddRole from './pages/Role/AddRole'\nimport AddUser from './pages/User/AddUser'\nimport EditJob from './pages/Job/EditJob'\nimport axios from 'axios'\nimport { verifyEndpoint } from './api'\nimport AppliedCandidate from './pages/Candidate/AppliedCandidate'\nimport EditCandidate from './pages/Candidate/EditCandidate'\nimport Loader from './components/Loader'\n\nfunction App() {\n\tconst [isAuth, setAuth] = useRecoilState(isAuthAtom)\n\tconst [currentUser, setCurrentUser] = useRecoilState(currentUserAtom)\n\n\t// CurrentUser Null --> skeleton\n\n\tuseEffect(() => {\n\t\taxios\n\t\t\t.post(verifyEndpoint, {}, { withCredentials: true })\n\t\t\t.then(({ data }) => {\n\t\t\t\tsetAuth(true)\n\t\t\t\tsetCurrentUser(data.userData)\n\t\t\t})\n\t\t\t.catch((e) => {\n\t\t\t\tsetAuth(false)\n\t\t\t\tsetCurrentUser({})\n\t\t\t})\n\t}, [])\n\n\tconst routes = (\n\t\t<Switch>\n\t\t\t<Route path='/dashboard' exact component={DashboardPage} />\n\t\t\t<Route path='/job/add' component={AddJob} />\n\t\t\t<Route path='/job/apply' component={ApplyJobList} />\n\t\t\t<Route path='/job/edit/:id' component={EditJob} />\n\t\t\t<Route path='/job/:id' component={JobDetails} />\n\t\t\t<Route path='/job' component={JobPage} />\n\n\t\t\t<Route path='/candidate/add' component={AddCandidate} />\n\t\t\t<Route path='/candidate/edit/:id' component={EditCandidate} />\n\n\t\t\t<Route path='/candidate/:id' component={CandidateDetails} />\n\t\t\t<Route path='/candidate' component={CandidatePage} />\n\n\t\t\t<Route path='/company/add' component={AddCompany} />\n\t\t\t<Route path='/company' component={CompanyPage} />\n\n\t\t\t<Route path='/role/add' component={AddRole} />\n\t\t\t<Route path='/role' component={RolePage} />\n\n\t\t\t<Route path='/user/add' component={AddUser} />\n\t\t\t<Route path='/user' component={UserPage} />\n\n\t\t\t<Route path='/profile' component={ProfilePage} />\n\t\t\t<Route path='/applied/:id' component={AppliedCandidate} />\n\t\t</Switch>\n\t)\n\n\treturn (\n\t\t<AppContainer>\n\t\t\t{currentUser ? (\n\t\t\t\t<HashRouter>\n\t\t\t\t\t{isAuth ? (\n\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t<Navbar />\n\t\t\t\t\t\t\t<Layout>\n\t\t\t\t\t\t\t\t<Sidebar />\n\t\t\t\t\t\t\t\t<ComponentContainer>{routes}</ComponentContainer>\n\t\t\t\t\t\t\t</Layout>\n\t\t\t\t\t\t</>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<Route path='/' exact component={Signin} />\n\t\t\t\t\t)}\n\t\t\t\t</HashRouter>\n\t\t\t) : (\n\t\t\t\t<Loader />\n\t\t\t)}\n\t\t</AppContainer>\n\t)\n}\n\nexport default App\n\nconst AppContainer = styled.div`\n\ttext-align: center;\n\theight: 100%;\n`\nconst Layout = styled.div`\n\tdisplay: flex;\n\theight: 90%;\n\twidth: 100%;\n`\n\nconst ComponentContainer = styled.div`\n\tflex: 1;\n\tbackground-color: #0000000d;\n\t/* height: 100%; */\n\toverflow-y: auto;\n\tscroll-behavior: smooth;\n\t/* padding: 10px; */\n`\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport { RecoilRoot } from 'recoil'\n\n\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<RecoilRoot>\n\t\t\t<App />\n\t\t</RecoilRoot>\n\t</React.StrictMode>,\n\tdocument.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register()\n"],"sourceRoot":""}